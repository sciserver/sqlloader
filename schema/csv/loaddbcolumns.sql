
----------------------------- 
--  DBColumns.sql 
----------------------------- 
SET NOCOUNT ON
GO
TRUNCATE TABLE DBColumns 
GO

INSERT DBColumns VALUES('PartitionMap','fileGroupName','','','','name of table or index','0');
INSERT DBColumns VALUES('PartitionMap','size','','','','size in GB/million objects','0');
INSERT DBColumns VALUES('PartitionMap','comment','','','','explanation','0');
INSERT DBColumns VALUES('FileGroupMap','tableName','','','','name of table or index','0');
INSERT DBColumns VALUES('FileGroupMap','tableFileGroup','','','','name of filegroup','0');
INSERT DBColumns VALUES('FileGroupMap','indexFileGroup','','','','name of the index filegroup','0');
INSERT DBColumns VALUES('FileGroupMap','comment','','','','explanation','0');
INSERT DBColumns VALUES('DataConstants','field','','METADATA_NAME','','Field Name','0');
INSERT DBColumns VALUES('DataConstants','name','','METADATA_NAME','','Constant Name','0');
INSERT DBColumns VALUES('DataConstants','value','','CODE_MISC','','Type value','0');
INSERT DBColumns VALUES('DataConstants','description','','METADATA_DESCRIPTION','','Short description','0');
INSERT DBColumns VALUES('SDSSConstants','name','','METADATA_NAME','','Name of the constant','0');
INSERT DBColumns VALUES('SDSSConstants','value','','NUMBER','','The numerical value in float','0');
INSERT DBColumns VALUES('SDSSConstants','unit','','METADATA_UNIT','','Its physical unit','0');
INSERT DBColumns VALUES('SDSSConstants','description','','METADATA_DESCRIPTION','','Short description','0');
INSERT DBColumns VALUES('StripeDefs','stripe','','EXTENSION_AREA','','Stripe number','0');
INSERT DBColumns VALUES('StripeDefs','hemisphere','','EXTENSION_AREA','','Which hemisphere (N|S)','0');
INSERT DBColumns VALUES('StripeDefs','eta','deg','POS_SDSS_ETA','','Survey eta for the center of stripe','0');
INSERT DBColumns VALUES('StripeDefs','lambdaMin','deg','POS_SDSS_LAMBDA POS_LIMIT','','Survey lambda lower limit of the stripe','0');
INSERT DBColumns VALUES('StripeDefs','lambdaMax','deg','POS_SDSS_LAMBDA POS_LIMIT','','Survey lambda upper limit of the stripe','0');
INSERT DBColumns VALUES('StripeDefs','htmArea','','???','','HTM area descriptor string','0');
INSERT DBColumns VALUES('RunShift','run','','','','Run id','0');
INSERT DBColumns VALUES('RunShift','shift','deg','POS_OFFSET','','The nu shift applied','0');
INSERT DBColumns VALUES('ProfileDefs','bin','','EXTENSION','','bin','0');
INSERT DBColumns VALUES('ProfileDefs','cell','','EXTENSION','','the first cell in the annulus','0');
INSERT DBColumns VALUES('ProfileDefs','sinc','','CODE_MISC','','sinc shift (0:no, 1:yes)','0');
INSERT DBColumns VALUES('ProfileDefs','rInner','arcsec','EXTENSION_RAD','','Inner radius of the bin','0');
INSERT DBColumns VALUES('ProfileDefs','rOuter','srcsec','EXTENSION_RAD','','Outer radius of the bin','0');
INSERT DBColumns VALUES('ProfileDefs','aAnn','arcsec^2','EXTENSION_AREA','','The area of the annulus','0');
INSERT DBColumns VALUES('ProfileDefs','aDisk','arcsec^2','EXTENSION_AREA','','The area of the disk to outerRadius','0');
INSERT DBColumns VALUES('SiteDBs','dbname','','','','Name of the database','0');
INSERT DBColumns VALUES('SiteDBs','description','','','','Short one-line description','0');
INSERT DBColumns VALUES('SiteDBs','active','','','','Is it active/visible?','0');
INSERT DBColumns VALUES('RecentQueries','ipAddr','','','','','0');
INSERT DBColumns VALUES('RecentQueries','lastQueryTime','','','','','0');
INSERT DBColumns VALUES('SkipFinishPhases','phase','','','','','0');
INSERT DBColumns VALUES('SiteConstants','name','','ID_IDENTIFIER','','Name','0');
INSERT DBColumns VALUES('SiteConstants','value','','DATA','','Value','0');
INSERT DBColumns VALUES('SiteConstants','comment','','METADATA_DESCRIPTION','','Description','0');
INSERT DBColumns VALUES('DBObjects','name','','ID_IDENTIFIER','','Name of the object','0');
INSERT DBColumns VALUES('DBObjects','type','','ID_GROUP','','Its system type','0');
INSERT DBColumns VALUES('DBObjects','access','','ID_GROUP','','Defines user or admin access','0');
INSERT DBColumns VALUES('DBObjects','description','','METADATA_DESCRIPTION','','One line description of contents','0');
INSERT DBColumns VALUES('DBObjects','text','','METADATA_DESCRIPTION','','Detailed description of contents','0');
INSERT DBColumns VALUES('DBObjects','rank','','ID_TABLE','','Optional position of column in table display','0');
INSERT DBColumns VALUES('DBColumns','tablename','','ID_TABLE','','The name of the parent table','0');
INSERT DBColumns VALUES('DBColumns','name','','ID_IDENTIFIER','','The name of column','0');
INSERT DBColumns VALUES('DBColumns','unit','','METADATA_UNIT','','Optional description of units','0');
INSERT DBColumns VALUES('DBColumns','ucd','','ID_IDENTIFIER','','Optional UCD definition','0');
INSERT DBColumns VALUES('DBColumns','enum','','ID_TABLE','','Optional link to an enumerated table','0');
INSERT DBColumns VALUES('DBColumns','description','','METADATA_DESCRIPTION','','One line description of column','0');
INSERT DBColumns VALUES('DBColumns','rank','','ID_TABLE','','Optional position of column in table column display','0');
INSERT DBColumns VALUES('DBViewCols','name','','ID_IDENTIFIER','','The name of column','0');
INSERT DBColumns VALUES('DBViewCols','viewname','','ID_TABLE','','The name of the view','0');
INSERT DBColumns VALUES('DBViewCols','parent','','ID_TABLE','','The name of the parent','0');
INSERT DBColumns VALUES('History','id','','ID_IDENTIFIER','','The unique key for entry','0');
INSERT DBColumns VALUES('History','filename','','ID_IDENTIFIER','','The name of the sql file','0');
INSERT DBColumns VALUES('History','date','','DATE','','Date of change','0');
INSERT DBColumns VALUES('History','name','','ID_IDENTIFIER','','Name of person making the change','0');
INSERT DBColumns VALUES('History','description','','METADATA_DESCRIPTION','','Detailed description of changes','0');
INSERT DBColumns VALUES('Inventory','filename','','ID_IDENTIFIER','','The name of the sql file','0');
INSERT DBColumns VALUES('Inventory','name','','ID_IDENTIFIER','','Name of DBObject','0');
INSERT DBColumns VALUES('Inventory','type','','METADATA_DESCRIPTION','','Detailed description of changes','0');
INSERT DBColumns VALUES('Dependency','filename','','ID_IDENTIFIER','','The name of the sql file','0');
INSERT DBColumns VALUES('Dependency','parent','','ID_IDENTIFIER','','Name of caller','0');
INSERT DBColumns VALUES('Dependency','child','','ID_IDENTIFIER','','Name of called function','0');
INSERT DBColumns VALUES('PubHistory','name','','','','the name of the table we publish into','0');
INSERT DBColumns VALUES('PubHistory','nrows','','','','the number of rows published','0');
INSERT DBColumns VALUES('PubHistory','tend','','','','the time the table was published','0');
INSERT DBColumns VALUES('PubHistory','loadversion','','','','the taskid where it came from','0');
INSERT DBColumns VALUES('LoadHistory','loadversion','','','','','0');
INSERT DBColumns VALUES('LoadHistory','tstart','','','','','0');
INSERT DBColumns VALUES('LoadHistory','tend','','','','','0');
INSERT DBColumns VALUES('LoadHistory','dbname','','','','','0');
INSERT DBColumns VALUES('Diagnostics','name','','ID_IDENTIFIER','','Name of object','0');
INSERT DBColumns VALUES('Diagnostics','type','','CODE_MISc','','System type of the object (U:table, V:view, F: function, P: stored proc)','0');
INSERT DBColumns VALUES('Diagnostics','count','','NUMBER','','Optional row count, where applicable','0');
INSERT DBColumns VALUES('SiteDiagnostics','name','','ID_IDENTIFIER','','Name of object','0');
INSERT DBColumns VALUES('SiteDiagnostics','type','','???','','System type of the object (U:table, V:view, F: function, P: stored proc)','0');
INSERT DBColumns VALUES('SiteDiagnostics','count','','NUMBER','','Optional row count, where applicable','0');
INSERT DBColumns VALUES('IndexMap','indexmapid','','CODE_MISC','','unique primary key for the indexmap','0');
INSERT DBColumns VALUES('IndexMap','code','','CODE_MISC','','one char designator of index category for lookup (''K''|''F''|''I'')','0');
INSERT DBColumns VALUES('IndexMap','type','','CODE_MISC','','index type, one of (''primary key''|''foreign key''|''index''|''unique index'')','0');
INSERT DBColumns VALUES('IndexMap','tableName','','CODE_MISC','','the name of the table the index is built on','0');
INSERT DBColumns VALUES('IndexMap','fieldList','','CODE_MISC','','the list of columns to be included in the index','0');
INSERT DBColumns VALUES('IndexMap','foreignKey','','CODE_MISC','','the definition of the foreign Key if any','0');
INSERT DBColumns VALUES('IndexMap','indexgroup','','CODE_MISC','','the group id, one of (''PHOTO''|''TAG''|''SPECTRO''|''QSO''|''META''|''TILES''|''FINISH'')','0');
INSERT DBColumns VALUES('IndexMap','compression','','CODE_MISC','','type of data compression to use (page | row | none)','0');
INSERT DBColumns VALUES('IndexMap','filegroup','','CODE_MISC','','filegroup where index should be created','0');
INSERT DBColumns VALUES('IndexMap','common','','CODE_MISC','','for multi-DR versions, 0=DR specific, 1=common between DRs','0');
INSERT DBColumns VALUES('Versions','event','','ID_IDENITIFIER','','The event that happened','0');
INSERT DBColumns VALUES('Versions','previous','','ID_TRACER','','Version before the patch','0');
INSERT DBColumns VALUES('Versions','checksum','','NUMBER','','Checksum before the patch','0');
INSERT DBColumns VALUES('Versions','version','','ID_TRACER','','Version after the patch','0');
INSERT DBColumns VALUES('Versions','description','','METADATA_DESCRIPTION','','Summary of changes','0');
INSERT DBColumns VALUES('Versions','text','','METADATA_DESCRIPTION','','Details of changes in HTML form','0');
INSERT DBColumns VALUES('Versions','who','','ID_HUMAN','','Person(s) responsible','0');
INSERT DBColumns VALUES('Versions','when','','TIME_DATE','','When it happened','0');
INSERT DBColumns VALUES('Field','fieldID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field].','0');
INSERT DBColumns VALUES('Field','skyVersion','','','','Layer of catalog (currently only one layer, 0; 0-15 available)','0');
INSERT DBColumns VALUES('Field','run','','','','Run number','0');
INSERT DBColumns VALUES('Field','rerun','','','','Rerun number','0');
INSERT DBColumns VALUES('Field','camcol','','','','Camera column','0');
INSERT DBColumns VALUES('Field','field','','','','Field number','0');
INSERT DBColumns VALUES('Field','nTotal','','','','Number of total objects in the field','0');
INSERT DBColumns VALUES('Field','nObjects','','','','Number of non-bright objects in the field','0');
INSERT DBColumns VALUES('Field','nChild','','','','Number of "child" objects in the field','0');
INSERT DBColumns VALUES('Field','nGalaxy','','','','Number of objects classified as "galaxy"','0');
INSERT DBColumns VALUES('Field','nStars','','','','Number of objects classified as "star"','0');
INSERT DBColumns VALUES('Field','nCR_u','','','','Number of cosmics in u-band','0');
INSERT DBColumns VALUES('Field','nCR_g','','','','Number of cosmics in g-band','0');
INSERT DBColumns VALUES('Field','nCR_r','','','','Number of cosmics in r-band','0');
INSERT DBColumns VALUES('Field','nCR_i','','','','Number of cosmics in i-band','0');
INSERT DBColumns VALUES('Field','nCR_z','','','','Number of cosmics in z-band','0');
INSERT DBColumns VALUES('Field','nBrightObj_u','','','','Number of bright objects in u-band','0');
INSERT DBColumns VALUES('Field','nBrightObj_g','','','','Number of bright objects in g-band','0');
INSERT DBColumns VALUES('Field','nBrightObj_r','','','','Number of bright objects in r-band','0');
INSERT DBColumns VALUES('Field','nBrightObj_i','','','','Number of bright objects in i-band','0');
INSERT DBColumns VALUES('Field','nBrightObj_z','','','','Number of bright objects in z-band','0');
INSERT DBColumns VALUES('Field','nFaintObj_u','','','','Number of faint objects in u-band','0');
INSERT DBColumns VALUES('Field','nFaintObj_g','','','','Number of faint objects in g-band','0');
INSERT DBColumns VALUES('Field','nFaintObj_r','','','','Number of faint objects in r-band','0');
INSERT DBColumns VALUES('Field','nFaintObj_i','','','','Number of faint objects in i-band','0');
INSERT DBColumns VALUES('Field','nFaintObj_z','','','','Number of faint objects in z-band','0');
INSERT DBColumns VALUES('Field','quality','','','FieldQuality','Quality of field','0');
INSERT DBColumns VALUES('Field','mjd_u','','','','MJD(TAI) when row 0 of u-band field was read','0');
INSERT DBColumns VALUES('Field','mjd_g','','','','MJD(TAI) when row 0 of g-band field was read','0');
INSERT DBColumns VALUES('Field','mjd_r','','','','MJD(TAI) when row 0 of r-band field was read','0');
INSERT DBColumns VALUES('Field','mjd_i','','','','MJD(TAI) when row 0 of i-band field was read','0');
INSERT DBColumns VALUES('Field','mjd_z','','','','MJD(TAI) when row 0 of z-band field was read','0');
INSERT DBColumns VALUES('Field','a_u','','','','a term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','a_g','','','','a term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','a_r','','','','a term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','a_i','','','','a term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','a_z','','','','a term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','b_u','','','','b term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','b_g','','','','b term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','b_r','','','','b term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','b_i','','','','b term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','b_z','','','','b term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','c_u','','','','c term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','c_g','','','','c term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','c_r','','','','c term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','c_i','','','','c term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','c_z','','','','c term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','d_u','','','','d term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','d_g','','','','d term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','d_r','','','','d term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','d_i','','','','d term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','d_z','','','','d term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','e_u','','','','e term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','e_g','','','','e term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','e_r','','','','e term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','e_i','','','','e term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','e_z','','','','e term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','f_u','','','','f term in astrometry for u-band','0');
INSERT DBColumns VALUES('Field','f_g','','','','f term in astrometry for g-band','0');
INSERT DBColumns VALUES('Field','f_r','','','','f term in astrometry for r-band','0');
INSERT DBColumns VALUES('Field','f_i','','','','f term in astrometry for i-band','0');
INSERT DBColumns VALUES('Field','f_z','','','','f term in astrometry for z-band','0');
INSERT DBColumns VALUES('Field','dRow0_u','','','','Zero-order row distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dRow0_g','','','','Zero-order row distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dRow0_r','','','','Zero-order row distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dRow0_i','','','','Zero-order row distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dRow0_z','','','','Zero-order row distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dRow1_u','','','','First-order row distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dRow1_g','','','','First-order row distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dRow1_r','','','','First-order row distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dRow1_i','','','','First-order row distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dRow1_z','','','','First-order row distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dRow2_u','','','','Second-order row distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dRow2_g','','','','Second-order row distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dRow2_r','','','','Second-order row distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dRow2_i','','','','Second-order row distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dRow2_z','','','','Second-order row distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dRow3_u','','','','Third-order row distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dRow3_g','','','','Third-order row distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dRow3_r','','','','Third-order row distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dRow3_i','','','','Third-order row distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dRow3_z','','','','Third-order row distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dCol0_u','','','','Zero-order column distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dCol0_g','','','','Zero-order column distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dCol0_r','','','','Zero-order column distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dCol0_i','','','','Zero-order column distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dCol0_z','','','','Zero-order column distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dCol1_u','','','','First-order column distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dCol1_g','','','','First-order column distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dCol1_r','','','','First-order column distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dCol1_i','','','','First-order column distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dCol1_z','','','','First-order column distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dCol2_u','','','','Second-order column distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dCol2_g','','','','Second-order column distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dCol2_r','','','','Second-order column distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dCol2_i','','','','Second-order column distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dCol2_z','','','','Second-order column distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','dCol3_u','','','','Third-order column distortion coefficient in u-band','0');
INSERT DBColumns VALUES('Field','dCol3_g','','','','Third-order column distortion coefficient in g-band','0');
INSERT DBColumns VALUES('Field','dCol3_r','','','','Third-order column distortion coefficient in r-band','0');
INSERT DBColumns VALUES('Field','dCol3_i','','','','Third-order column distortion coefficient in i-band','0');
INSERT DBColumns VALUES('Field','dCol3_z','','','','Third-order column distortion coefficient in z-band','0');
INSERT DBColumns VALUES('Field','csRow_u','','','','Slope in row DCR correction for blue objects (u-band)','0');
INSERT DBColumns VALUES('Field','csRow_g','','','','Slope in row DCR correction for blue objects (g-band)','0');
INSERT DBColumns VALUES('Field','csRow_r','','','','Slope in row DCR correction for blue objects (r-band)','0');
INSERT DBColumns VALUES('Field','csRow_i','','','','Slope in row DCR correction for blue objects (i-band)','0');
INSERT DBColumns VALUES('Field','csRow_z','','','','Slope in row DCR correction for blue objects (z-band)','0');
INSERT DBColumns VALUES('Field','csCol_u','','','','Slope in column DCR correction for blue objects (u-band)','0');
INSERT DBColumns VALUES('Field','csCol_g','','','','Slope in column DCR correction for blue objects (g-band)','0');
INSERT DBColumns VALUES('Field','csCol_r','','','','Slope in column DCR correction for blue objects (r-band)','0');
INSERT DBColumns VALUES('Field','csCol_i','','','','Slope in column DCR correction for blue objects (i-band)','0');
INSERT DBColumns VALUES('Field','csCol_z','','','','Slope in column DCR correction for blue objects (z-band)','0');
INSERT DBColumns VALUES('Field','ccRow_u','','','','Constant row DCR correction for blue objects (u-band)','0');
INSERT DBColumns VALUES('Field','ccRow_g','','','','Constant row DCR correction for blue objects (g-band)','0');
INSERT DBColumns VALUES('Field','ccRow_r','','','','Constant row DCR correction for blue objects (r-band)','0');
INSERT DBColumns VALUES('Field','ccRow_i','','','','Constant row DCR correction for blue objects (i-band)','0');
INSERT DBColumns VALUES('Field','ccRow_z','','','','Constant row DCR correction for blue objects (z-band)','0');
INSERT DBColumns VALUES('Field','ccCol_u','','','','Constant column DCR correction for blue objects (u-band)','0');
INSERT DBColumns VALUES('Field','ccCol_g','','','','Constant column DCR correction for blue objects (g-band)','0');
INSERT DBColumns VALUES('Field','ccCol_r','','','','Constant column DCR correction for blue objects (r-band)','0');
INSERT DBColumns VALUES('Field','ccCol_i','','','','Constant column DCR correction for blue objects (i-band)','0');
INSERT DBColumns VALUES('Field','ccCol_z','','','','Constant column DCR correction for blue objects (z-band)','0');
INSERT DBColumns VALUES('Field','riCut_u','','','','r-i cutoff between blue and red objects (for u-band astrometry)','0');
INSERT DBColumns VALUES('Field','riCut_g','','','','r-i cutoff between blue and red objects (for g-band astrometry)','0');
INSERT DBColumns VALUES('Field','riCut_r','','','','r-i cutoff between blue and red objects (for r-band astrometry)','0');
INSERT DBColumns VALUES('Field','riCut_i','','','','r-i cutoff between blue and red objects (for i-band astrometry)','0');
INSERT DBColumns VALUES('Field','riCut_z','','','','r-i cutoff between blue and red objects (for z-band astrometry)','0');
INSERT DBColumns VALUES('Field','airmass_u','mag','','','Airmass for star at frame center (midway through u-band exposure)','0');
INSERT DBColumns VALUES('Field','airmass_g','mag','','','Airmass for star at frame center (midway through g-band exposure)','0');
INSERT DBColumns VALUES('Field','airmass_r','mag','','','Airmass for star at frame center (midway through r-band exposure)','0');
INSERT DBColumns VALUES('Field','airmass_i','mag','','','Airmass for star at frame center (midway through i-band exposure)','0');
INSERT DBColumns VALUES('Field','airmass_z','mag','','','Airmass for star at frame center (midway through z-band exposure)','0');
INSERT DBColumns VALUES('Field','muErr_u','arcsec','','','Error in mu in astrometric calibration (for u-band)','0');
INSERT DBColumns VALUES('Field','muErr_g','arcsec','','','Error in mu in astrometric calibration (for g-band)','0');
INSERT DBColumns VALUES('Field','muErr_r','arcsec','','','Error in mu in astrometric calibration (for r-band)','0');
INSERT DBColumns VALUES('Field','muErr_i','arcsec','','','Error in mu in astrometric calibration (for i-band)','0');
INSERT DBColumns VALUES('Field','muErr_z','arcsec','','','Error in mu in astrometric calibration (for z-band)','0');
INSERT DBColumns VALUES('Field','nuErr_u','arcsec','','','Error in nu in astrometric calibration (for u-band)','0');
INSERT DBColumns VALUES('Field','nuErr_g','arcsec','','','Error in nu in astrometric calibration (for g-band)','0');
INSERT DBColumns VALUES('Field','nuErr_r','arcsec','','','Error in nu in astrometric calibration (for r-band)','0');
INSERT DBColumns VALUES('Field','nuErr_i','arcsec','','','Error in nu in astrometric calibration (for i-band)','0');
INSERT DBColumns VALUES('Field','nuErr_z','arcsec','','','Error in nu in astrometric calibration (for z-band)','0');
INSERT DBColumns VALUES('Field','ra','deg','','','Center RA of field','0');
INSERT DBColumns VALUES('Field','dec','deg','','','Center Dec of field','0');
INSERT DBColumns VALUES('Field','raMin','deg','','','Minimum RA of field','0');
INSERT DBColumns VALUES('Field','raMax','deg','','','Maximum RA of field','0');
INSERT DBColumns VALUES('Field','decMin','deg','','','Minimum Dec of field','0');
INSERT DBColumns VALUES('Field','decMax','deg','','','Maximum Dec of field','0');
INSERT DBColumns VALUES('Field','pixScale','arcsec/pix','','','Mean size of pixel (r-band)','0');
INSERT DBColumns VALUES('Field','primaryArea','deg^2','','','Area covered by primary part of field','0');
INSERT DBColumns VALUES('Field','photoStatus','','','FrameStatus','Frames processing status bitmask','0');
INSERT DBColumns VALUES('Field','rowOffset_u','pix','','','Offset to add to transformed row coordinates (u-band)','0');
INSERT DBColumns VALUES('Field','rowOffset_g','pix','','','Offset to add to transformed row coordinates (g-band)','0');
INSERT DBColumns VALUES('Field','rowOffset_r','pix','','','Offset to add to transformed row coordinates (r-band)','0');
INSERT DBColumns VALUES('Field','rowOffset_i','pix','','','Offset to add to transformed row coordinates (i-band)','0');
INSERT DBColumns VALUES('Field','rowOffset_z','pix','','','Offset to add to transformed row coordinates (z-band)','0');
INSERT DBColumns VALUES('Field','colOffset_u','pix','','','Offset to add to transformed row coordinates (u-band)','0');
INSERT DBColumns VALUES('Field','colOffset_g','pix','','','Offset to add to transformed row coordinates (g-band)','0');
INSERT DBColumns VALUES('Field','colOffset_r','pix','','','Offset to add to transformed row coordinates (r-band)','0');
INSERT DBColumns VALUES('Field','colOffset_i','pix','','','Offset to add to transformed row coordinates (i-band)','0');
INSERT DBColumns VALUES('Field','colOffset_z','pix','','','Offset to add to transformed row coordinates (z-band)','0');
INSERT DBColumns VALUES('Field','saturationLevel_u','counts','','','Saturation level in u-band','0');
INSERT DBColumns VALUES('Field','saturationLevel_g','counts','','','Saturation level in g-band','0');
INSERT DBColumns VALUES('Field','saturationLevel_r','counts','','','Saturation level in r-band','0');
INSERT DBColumns VALUES('Field','saturationLevel_i','counts','','','Saturation level in i-band','0');
INSERT DBColumns VALUES('Field','saturationLevel_z','counts','','','Saturation level in z-band','0');
INSERT DBColumns VALUES('Field','nEffPsf_u','pix','','','Effective area of PSF (u-band)','0');
INSERT DBColumns VALUES('Field','nEffPsf_g','pix','','','Effective area of PSF (g-band)','0');
INSERT DBColumns VALUES('Field','nEffPsf_r','pix','','','Effective area of PSF (r-band)','0');
INSERT DBColumns VALUES('Field','nEffPsf_i','pix','','','Effective area of PSF (i-band)','0');
INSERT DBColumns VALUES('Field','nEffPsf_z','pix','','','Effective area of PSF (z-band)','0');
INSERT DBColumns VALUES('Field','skyPsp_u','nmgy/arcsec^2','','','Sky estimate from PSP (u-band)','0');
INSERT DBColumns VALUES('Field','skyPsp_g','nmgy/arcsec^2','','','Sky estimate from PSP (g-band)','0');
INSERT DBColumns VALUES('Field','skyPsp_r','nmgy/arcsec^2','','','Sky estimate from PSP (r-band)','0');
INSERT DBColumns VALUES('Field','skyPsp_i','nmgy/arcsec^2','','','Sky estimate from PSP (i-band)','0');
INSERT DBColumns VALUES('Field','skyPsp_z','nmgy/arcsec^2','','','Sky estimate from PSP (z-band)','0');
INSERT DBColumns VALUES('Field','skyFrames_u','nmgy/arcsec^2','','','Frames sky value','0');
INSERT DBColumns VALUES('Field','skyFrames_g','nmgy/arcsec^2','','','Frames sky value','0');
INSERT DBColumns VALUES('Field','skyFrames_r','nmgy/arcsec^2','','','Frames sky value','0');
INSERT DBColumns VALUES('Field','skyFrames_i','nmgy/arcsec^2','','','Frames sky value','0');
INSERT DBColumns VALUES('Field','skyFrames_z','nmgy/arcsec^2','','','Frames sky value','0');
INSERT DBColumns VALUES('Field','skyFramesSub_u','nmgy/arcsec^2','','','Frames sky value after object subtraction','0');
INSERT DBColumns VALUES('Field','skyFramesSub_g','nmgy/arcsec^2','','','Frames sky value after object subtraction','0');
INSERT DBColumns VALUES('Field','skyFramesSub_r','nmgy/arcsec^2','','','Frames sky value after object subtraction','0');
INSERT DBColumns VALUES('Field','skyFramesSub_i','nmgy/arcsec^2','','','Frames sky value after object subtraction','0');
INSERT DBColumns VALUES('Field','skyFramesSub_z','nmgy/arcsec^2','','','Frames sky value after object subtraction','0');
INSERT DBColumns VALUES('Field','sigPix_u','nmgy/arcsec^2','','','Sigma of pixel values in u-band frame (clipped)','0');
INSERT DBColumns VALUES('Field','sigPix_g','nmgy/arcsec^2','','','Sigma of pixel values in g-band frame (clipped)','0');
INSERT DBColumns VALUES('Field','sigPix_r','nmgy/arcsec^2','','','Sigma of pixel values in r-band frame (clipped)','0');
INSERT DBColumns VALUES('Field','sigPix_i','nmgy/arcsec^2','','','Sigma of pixel values in i-band frame (clipped)','0');
INSERT DBColumns VALUES('Field','sigPix_z','nmgy/arcsec^2','','','Sigma of pixel values in z-band frame (clipped)','0');
INSERT DBColumns VALUES('Field','devApCorrection_u','','','','deV aperture correction (u-band)','0');
INSERT DBColumns VALUES('Field','devApCorrection_g','','','','deV aperture correction (g-band)','0');
INSERT DBColumns VALUES('Field','devApCorrection_r','','','','deV aperture correction (r-band)','0');
INSERT DBColumns VALUES('Field','devApCorrection_i','','','','deV aperture correction (i-band)','0');
INSERT DBColumns VALUES('Field','devApCorrection_z','','','','deV aperture correction (z-band)','0');
INSERT DBColumns VALUES('Field','devApCorrectionErr_u','','','','Error in deV aperture correction (u-band)','0');
INSERT DBColumns VALUES('Field','devApCorrectionErr_g','','','','Error in deV aperture correction (g-band)','0');
INSERT DBColumns VALUES('Field','devApCorrectionErr_r','','','','Error in deV aperture correction (r-band)','0');
INSERT DBColumns VALUES('Field','devApCorrectionErr_i','','','','Error in deV aperture correction (i-band)','0');
INSERT DBColumns VALUES('Field','devApCorrectionErr_z','','','','Error in deV aperture correction (z-band)','0');
INSERT DBColumns VALUES('Field','expApCorrection_u','','','','exponential aperture correction (u-band)','0');
INSERT DBColumns VALUES('Field','expApCorrection_g','','','','exponential aperture correction (g-band)','0');
INSERT DBColumns VALUES('Field','expApCorrection_r','','','','exponential aperture correction (r-band)','0');
INSERT DBColumns VALUES('Field','expApCorrection_i','','','','exponential aperture correction (i-band)','0');
INSERT DBColumns VALUES('Field','expApCorrection_z','','','','exponential aperture correction (z-band)','0');
INSERT DBColumns VALUES('Field','expApCorrectionErr_u','','','','Error in exponential aperture correction (u-band)','0');
INSERT DBColumns VALUES('Field','expApCorrectionErr_g','','','','Error in exponential aperture correction (g-band)','0');
INSERT DBColumns VALUES('Field','expApCorrectionErr_r','','','','Error in exponential aperture correction (r-band)','0');
INSERT DBColumns VALUES('Field','expApCorrectionErr_i','','','','Error in exponential aperture correction (i-band)','0');
INSERT DBColumns VALUES('Field','expApCorrectionErr_z','','','','Error in exponential aperture correction (z-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrection_u','','','','model aperture correction, for deV case (u-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrection_g','','','','model aperture correction, for deV case (g-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrection_r','','','','model aperture correction, for deV case (r-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrection_i','','','','model aperture correction, for deV case (i-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrection_z','','','','model aperture correction, for deV case (z-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrectionErr_u','','','','Error in model aperture correction, for deV case (u-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrectionErr_g','','','','Error in model aperture correction, for deV case (g-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrectionErr_r','','','','Error in model aperture correction, for deV case (r-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrectionErr_i','','','','Error in model aperture correction, for deV case (i-band)','0');
INSERT DBColumns VALUES('Field','devModelApCorrectionErr_z','','','','Error in model aperture correction, for deV case (z-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrection_u','','','','model aperture correction, for exponential case (u-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrection_g','','','','model aperture correction, for exponential case (g-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrection_r','','','','model aperture correction, for exponential case (r-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrection_i','','','','model aperture correction, for exponential case (i-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrection_z','','','','model aperture correction, for exponential case (z-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrectionErr_u','','','','Error in model aperture correction, for exponential case (u-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrectionErr_g','','','','Error in model aperture correction, for exponential case (g-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrectionErr_r','','','','Error in model aperture correction, for exponential case (r-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrectionErr_i','','','','Error in model aperture correction, for exponential case (i-band)','0');
INSERT DBColumns VALUES('Field','expModelApCorrectionErr_z','','','','Error in model aperture correction, for exponential case (z-band)','0');
INSERT DBColumns VALUES('Field','medianFiberColor_u','','','','Median fiber magnitude of objects (u-band)','0');
INSERT DBColumns VALUES('Field','medianFiberColor_g','','','','Median fiber magnitude of objects (g-band)','0');
INSERT DBColumns VALUES('Field','medianFiberColor_r','','','','Median fiber magnitude of objects (r-band)','0');
INSERT DBColumns VALUES('Field','medianFiberColor_i','','','','Median fiber magnitude of objects (i-band)','0');
INSERT DBColumns VALUES('Field','medianFiberColor_z','','','','Median fiber magnitude of objects (z-band)','0');
INSERT DBColumns VALUES('Field','medianPsfColor_u','','','','Median PSF magnitude of objects (u-band)','0');
INSERT DBColumns VALUES('Field','medianPsfColor_g','','','','Median PSF magnitude of objects (g-band)','0');
INSERT DBColumns VALUES('Field','medianPsfColor_r','','','','Median PSF magnitude of objects (r-band)','0');
INSERT DBColumns VALUES('Field','medianPsfColor_i','','','','Median PSF magnitude of objects (i-band)','0');
INSERT DBColumns VALUES('Field','medianPsfColor_z','','','','Median PSF magnitude of objects (z-band)','0');
INSERT DBColumns VALUES('Field','q_u','','','','Means Stokes Q parameter in u-band frame','0');
INSERT DBColumns VALUES('Field','q_g','','','','Means Stokes Q parameter in g-band frame','0');
INSERT DBColumns VALUES('Field','q_r','','','','Means Stokes Q parameter in r-band frame','0');
INSERT DBColumns VALUES('Field','q_i','','','','Means Stokes Q parameter in i-band frame','0');
INSERT DBColumns VALUES('Field','q_z','','','','Means Stokes Q parameter in z-band frame','0');
INSERT DBColumns VALUES('Field','u_u','','','','Means Stokes U parameter in u-band frame','0');
INSERT DBColumns VALUES('Field','u_g','','','','Means Stokes U parameter in g-band frame','0');
INSERT DBColumns VALUES('Field','u_r','','','','Means Stokes U parameter in r-band frame','0');
INSERT DBColumns VALUES('Field','u_i','','','','Means Stokes U parameter in i-band frame','0');
INSERT DBColumns VALUES('Field','u_z','','','','Means Stokes U parameter in z-band frame','0');
INSERT DBColumns VALUES('Field','pspStatus','','','PspStatus','Maximum value of PSP (Postage Stamp Pipeline) status over all 5 filters','0');
INSERT DBColumns VALUES('Field','sky_u','nmgy/arcsec^2','','','PSP estimate of sky in u-band','0');
INSERT DBColumns VALUES('Field','sky_g','nmgy/arcsec^2','','','PSP estimate of sky in g-band','0');
INSERT DBColumns VALUES('Field','sky_r','nmgy/arcsec^2','','','PSP estimate of sky in r-band','0');
INSERT DBColumns VALUES('Field','sky_i','nmgy/arcsec^2','','','PSP estimate of sky in i-band','0');
INSERT DBColumns VALUES('Field','sky_z','nmgy/arcsec^2','','','PSP estimate of sky in z-band','0');
INSERT DBColumns VALUES('Field','skySig_u','mag','','','Fractional Sigma of Sky Value Distribution, expressed as magnitude. Sky noise = skySig * sky * ln(10)/2.5','0');
INSERT DBColumns VALUES('Field','skySig_g','mag','','','Fractional Sigma of Sky Value Distribution, expressed as magnitude. Sky noise = skySig * sky * ln(10)/2.5','0');
INSERT DBColumns VALUES('Field','skySig_r','mag','','','Fractional Sigma of Sky Value Distribution, expressed as magnitude. Sky noise = skySig * sky * ln(10)/2.5','0');
INSERT DBColumns VALUES('Field','skySig_i','mag','','','Fractional Sigma of Sky Value Distribution, expressed as magnitude. Sky noise = skySig * sky * ln(10)/2.5','0');
INSERT DBColumns VALUES('Field','skySig_z','mag','','','Fractional Sigma of Sky Value Distribution, expressed as magnitude. Sky noise = skySig * sky * ln(10)/2.5','0');
INSERT DBColumns VALUES('Field','skyErr_u','nmgy/arcsec^2','','','Error in PSP estimate of sky in u-band','0');
INSERT DBColumns VALUES('Field','skyErr_g','nmgy/arcsec^2','','','Error in PSP estimate of sky in g-band','0');
INSERT DBColumns VALUES('Field','skyErr_r','nmgy/arcsec^2','','','Error in PSP estimate of sky in r-band','0');
INSERT DBColumns VALUES('Field','skyErr_i','nmgy/arcsec^2','','','Error in PSP estimate of sky in i-band','0');
INSERT DBColumns VALUES('Field','skyErr_z','nmgy/arcsec^2','','','Error in PSP estimate of sky in z-band','0');
INSERT DBColumns VALUES('Field','skySlope_u','nmgy/arcsec^2/field','','','Rate of change in sky value along columns (u-band)','0');
INSERT DBColumns VALUES('Field','skySlope_g','nmgy/arcsec^2/field','','','Rate of change in sky value along columns (g-band)','0');
INSERT DBColumns VALUES('Field','skySlope_r','nmgy/arcsec^2/field','','','Rate of change in sky value along columns (r-band)','0');
INSERT DBColumns VALUES('Field','skySlope_i','nmgy/arcsec^2/field','','','Rate of change in sky value along columns (i-band)','0');
INSERT DBColumns VALUES('Field','skySlope_z','nmgy/arcsec^2/field','','','Rate of change in sky value along columns (z-band)','0');
INSERT DBColumns VALUES('Field','lbias_u','ADUs','','','Left-hand amplifier bias level (u-band)		XXX make sure to apply DSCALE, counts or ADU?','0');
INSERT DBColumns VALUES('Field','lbias_g','ADUs','','','Left-hand amplifier bias level (g-band)','0');
INSERT DBColumns VALUES('Field','lbias_r','ADUs','','','Left-hand amplifier bias level (r-band)','0');
INSERT DBColumns VALUES('Field','lbias_i','ADUs','','','Left-hand amplifier bias level (i-band)','0');
INSERT DBColumns VALUES('Field','lbias_z','ADUs','','','Left-hand amplifier bias level (z-band)','0');
INSERT DBColumns VALUES('Field','rbias_u','ADUs','','','Right-hand amplifier bias level (u-band)','0');
INSERT DBColumns VALUES('Field','rbias_g','ADUs','','','Right-hand amplifier bias level (g-band)','0');
INSERT DBColumns VALUES('Field','rbias_r','ADUs','','','Right-hand amplifier bias level (r-band)','0');
INSERT DBColumns VALUES('Field','rbias_i','ADUs','','','Right-hand amplifier bias level (i-band)','0');
INSERT DBColumns VALUES('Field','rbias_z','ADUs','','','Right-hand amplifier bias level (z-band)','0');
INSERT DBColumns VALUES('Field','nProf_u','','','','Number of bins in PSF profile (in fieldProfile table)','0');
INSERT DBColumns VALUES('Field','nProf_g','','','','Number of bins in PSF profile (in fieldProfile table)','0');
INSERT DBColumns VALUES('Field','nProf_r','','','','Number of bins in PSF profile (in fieldProfile table)','0');
INSERT DBColumns VALUES('Field','nProf_i','','','','Number of bins in PSF profile (in fieldProfile table)','0');
INSERT DBColumns VALUES('Field','nProf_z','','','','Number of bins in PSF profile (in fieldProfile table)','0');
INSERT DBColumns VALUES('Field','psfNStar_u','','','','Number of stars used in PSF measurement (u-band)','0');
INSERT DBColumns VALUES('Field','psfNStar_g','','','','Number of stars used in PSF measurement (g-band)','0');
INSERT DBColumns VALUES('Field','psfNStar_r','','','','Number of stars used in PSF measurement (r-band)','0');
INSERT DBColumns VALUES('Field','psfNStar_i','','','','Number of stars used in PSF measurement (i-band)','0');
INSERT DBColumns VALUES('Field','psfNStar_z','','','','Number of stars used in PSF measurement (z-band)','0');
INSERT DBColumns VALUES('Field','psfApCorrectionErr_u','mag','','','Photometric uncertainty due to imperfect PSF model (u-band)','0');
INSERT DBColumns VALUES('Field','psfApCorrectionErr_g','mag','','','Photometric uncertainty due to imperfect PSF model (g-band)','0');
INSERT DBColumns VALUES('Field','psfApCorrectionErr_r','mag','','','Photometric uncertainty due to imperfect PSF model (r-band)','0');
INSERT DBColumns VALUES('Field','psfApCorrectionErr_i','mag','','','Photometric uncertainty due to imperfect PSF model (i-band)','0');
INSERT DBColumns VALUES('Field','psfApCorrectionErr_z','mag','','','Photometric uncertainty due to imperfect PSF model (z-band)','0');
INSERT DBColumns VALUES('Field','psfSigma1_u','arcsec','','','Inner gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma1_g','arcsec','','','Inner gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma1_r','arcsec','','','Inner gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma1_i','arcsec','','','Inner gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma1_z','arcsec','','','Inner gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma2_u','arcsec','','','Outer gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma2_g','arcsec','','','Outer gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma2_r','arcsec','','','Outer gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma2_i','arcsec','','','Outer gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfSigma2_z','arcsec','','','Outer gaussian sigma for composite fit','0');
INSERT DBColumns VALUES('Field','psfB_u','','','','Ratio of inner to outer components at origin (composite fit)','0');
INSERT DBColumns VALUES('Field','psfB_g','','','','Ratio of inner to outer components at origin (composite fit)','0');
INSERT DBColumns VALUES('Field','psfB_r','','','','Ratio of inner to outer components at origin (composite fit)','0');
INSERT DBColumns VALUES('Field','psfB_i','','','','Ratio of inner to outer components at origin (composite fit)','0');
INSERT DBColumns VALUES('Field','psfB_z','','','','Ratio of inner to outer components at origin (composite fit)','0');
INSERT DBColumns VALUES('Field','psfP0_u','','','','Value of power law at origin in composite fit  XXX','0');
INSERT DBColumns VALUES('Field','psfP0_g','','','','Value of power law at origin in composite fit  XXX','0');
INSERT DBColumns VALUES('Field','psfP0_r','','','','Value of power law at origin in composite fit  XXX','0');
INSERT DBColumns VALUES('Field','psfP0_i','','','','Value of power law at origin in composite fit  XXX','0');
INSERT DBColumns VALUES('Field','psfP0_z','','','','Value of power law at origin in composite fit  XXX','0');
INSERT DBColumns VALUES('Field','psfBeta_u','','','','Slope of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfBeta_g','','','','Slope of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfBeta_r','','','','Slope of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfBeta_i','','','','Slope of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfBeta_z','','','','Slope of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfSigmaP_u','','','','Width of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfSigmaP_g','','','','Width of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfSigmaP_r','','','','Width of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfSigmaP_i','','','','Width of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfSigmaP_z','','','','Width of power law in composite fit','0');
INSERT DBColumns VALUES('Field','psfWidth_u','arcsec','','','Effective PSF width from 2-Gaussian fit (u-band)','0');
INSERT DBColumns VALUES('Field','psfWidth_g','arcsec','','','Effective PSF width from 2-Gaussian fit (g-band)','0');
INSERT DBColumns VALUES('Field','psfWidth_r','arcsec','','','Effective PSF width from 2-Gaussian fit (r-band)','0');
INSERT DBColumns VALUES('Field','psfWidth_i','arcsec','','','Effective PSF width from 2-Gaussian fit (i-band)','0');
INSERT DBColumns VALUES('Field','psfWidth_z','arcsec','','','Effective PSF width from 2-Gaussian fit (z-band)','0');
INSERT DBColumns VALUES('Field','psfPsfCounts_u','counts','','','Flux via fit to PSF (u-band) XXX','0');
INSERT DBColumns VALUES('Field','psfPsfCounts_g','counts','','','Flux via fit to PSF (g-band) XXX','0');
INSERT DBColumns VALUES('Field','psfPsfCounts_r','counts','','','Flux via fit to PSF (r-band) XXX','0');
INSERT DBColumns VALUES('Field','psfPsfCounts_i','counts','','','Flux via fit to PSF (i-band) XXX','0');
INSERT DBColumns VALUES('Field','psfPsfCounts_z','counts','','','Flux via fit to PSF (z-band) XXX','0');
INSERT DBColumns VALUES('Field','psf2GSigma1_u','arcsec','','','Sigma of inner gaussian in 2-Gaussian fit (u-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma1_g','arcsec','','','Sigma of inner gaussian in 2-Gaussian fit (g-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma1_r','arcsec','','','Sigma of inner gaussian in 2-Gaussian fit (r-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma1_i','arcsec','','','Sigma of inner gaussian in 2-Gaussian fit (i-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma1_z','arcsec','','','Sigma of inner gaussian in 2-Gaussian fit (z-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma2_u','arcsec','','','Sigma of outer gaussian in 2-Gaussian fit (u-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma2_g','arcsec','','','Sigma of outer gaussian in 2-Gaussian fit (g-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma2_r','arcsec','','','Sigma of outer gaussian in 2-Gaussian fit (r-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma2_i','arcsec','','','Sigma of outer gaussian in 2-Gaussian fit (i-band)','0');
INSERT DBColumns VALUES('Field','psf2GSigma2_z','arcsec','','','Sigma of outer gaussian in 2-Gaussian fit (z-band)','0');
INSERT DBColumns VALUES('Field','psf2GB_u','','','','Ratio of inner to outer components at origin (2-Gaussian fit)','0');
INSERT DBColumns VALUES('Field','psf2GB_g','','','','Ratio of inner to outer components at origin (2-Gaussian fit)','0');
INSERT DBColumns VALUES('Field','psf2GB_r','','','','Ratio of inner to outer components at origin (2-Gaussian fit)','0');
INSERT DBColumns VALUES('Field','psf2GB_i','','','','Ratio of inner to outer components at origin (2-Gaussian fit)','0');
INSERT DBColumns VALUES('Field','psf2GB_z','','','','Ratio of inner to outer components at origin (2-Gaussian fit)','0');
INSERT DBColumns VALUES('Field','psfCounts_u','counts','','','PSF counts XXX','0');
INSERT DBColumns VALUES('Field','psfCounts_g','counts','','','PSF counts XXX','0');
INSERT DBColumns VALUES('Field','psfCounts_r','counts','','','PSF counts XXX','0');
INSERT DBColumns VALUES('Field','psfCounts_i','counts','','','PSF counts XXX','0');
INSERT DBColumns VALUES('Field','psfCounts_z','counts','','','PSF counts XXX','0');
INSERT DBColumns VALUES('Field','gain_u','electrons/DN','','','Gain averaged over amplifiers','0');
INSERT DBColumns VALUES('Field','gain_g','electrons/DN','','','Gain averaged over amplifiers','0');
INSERT DBColumns VALUES('Field','gain_r','electrons/DN','','','Gain averaged over amplifiers','0');
INSERT DBColumns VALUES('Field','gain_i','electrons/DN','','','Gain averaged over amplifiers','0');
INSERT DBColumns VALUES('Field','gain_z','electrons/DN','','','Gain averaged over amplifiers','0');
INSERT DBColumns VALUES('Field','darkVariance_u','','','','Dark variance','0');
INSERT DBColumns VALUES('Field','darkVariance_g','','','','Dark variance','0');
INSERT DBColumns VALUES('Field','darkVariance_r','','','','Dark variance','0');
INSERT DBColumns VALUES('Field','darkVariance_i','','','','Dark variance','0');
INSERT DBColumns VALUES('Field','darkVariance_z','','','','Dark variance','0');
INSERT DBColumns VALUES('Field','score','','','','Quality of field (0-1)','0');
INSERT DBColumns VALUES('Field','aterm_u','nmgy/count','','','nanomaggies per count due to instrument','0');
INSERT DBColumns VALUES('Field','aterm_g','nmgy/count','','','nanomaggies per count due to instrument','0');
INSERT DBColumns VALUES('Field','aterm_r','nmgy/count','','','nanomaggies per count due to instrument','0');
INSERT DBColumns VALUES('Field','aterm_i','nmgy/count','','','nanomaggies per count due to instrument','0');
INSERT DBColumns VALUES('Field','aterm_z','nmgy/count','','','nanomaggies per count due to instrument','0');
INSERT DBColumns VALUES('Field','kterm_u','','','','atmospheric k-term at reference time in calibration','0');
INSERT DBColumns VALUES('Field','kterm_g','','','','atmospheric k-term at reference time in calibration','0');
INSERT DBColumns VALUES('Field','kterm_r','','','','atmospheric k-term at reference time in calibration','0');
INSERT DBColumns VALUES('Field','kterm_i','','','','atmospheric k-term at reference time in calibration','0');
INSERT DBColumns VALUES('Field','kterm_z','','','','atmospheric k-term at reference time in calibration','0');
INSERT DBColumns VALUES('Field','kdot_u','1/second','','','linear time variation of atmospheric k-term','0');
INSERT DBColumns VALUES('Field','kdot_g','1/second','','','linear time variation of atmospheric k-term','0');
INSERT DBColumns VALUES('Field','kdot_r','1/second','','','linear time variation of atmospheric k-term','0');
INSERT DBColumns VALUES('Field','kdot_i','1/second','','','linear time variation of atmospheric k-term','0');
INSERT DBColumns VALUES('Field','kdot_z','1/second','','','linear time variation of atmospheric k-term','0');
INSERT DBColumns VALUES('Field','reftai_u','second','','','reference TAI used for k-term','0');
INSERT DBColumns VALUES('Field','reftai_g','second','','','reference TAI used for k-term','0');
INSERT DBColumns VALUES('Field','reftai_r','second','','','reference TAI used for k-term','0');
INSERT DBColumns VALUES('Field','reftai_i','second','','','reference TAI used for k-term','0');
INSERT DBColumns VALUES('Field','reftai_z','second','','','reference TAI used for k-term','0');
INSERT DBColumns VALUES('Field','tai_u','second','','','TAI used for k-term','0');
INSERT DBColumns VALUES('Field','tai_g','second','','','TAI used for k-term','0');
INSERT DBColumns VALUES('Field','tai_r','second','','','TAI used for k-term','0');
INSERT DBColumns VALUES('Field','tai_i','second','','','TAI used for k-term','0');
INSERT DBColumns VALUES('Field','tai_z','second','','','TAI used for k-term','0');
INSERT DBColumns VALUES('Field','nStarsOffset_u','','','','number of stars used for fieldOffset determination','0');
INSERT DBColumns VALUES('Field','nStarsOffset_g','','','','number of stars used for fieldOffset determination','0');
INSERT DBColumns VALUES('Field','nStarsOffset_r','','','','number of stars used for fieldOffset determination','0');
INSERT DBColumns VALUES('Field','nStarsOffset_i','','','','number of stars used for fieldOffset determination','0');
INSERT DBColumns VALUES('Field','nStarsOffset_z','','','','number of stars used for fieldOffset determination','0');
INSERT DBColumns VALUES('Field','fieldOffset_u','mag','','','offset of field from initial calibration (final minus initial magnitudes)','0');
INSERT DBColumns VALUES('Field','fieldOffset_g','mag','','','offset of field from initial calibration (final minus initial magnitudes)','0');
INSERT DBColumns VALUES('Field','fieldOffset_r','mag','','','offset of field from initial calibration (final minus initial magnitudes)','0');
INSERT DBColumns VALUES('Field','fieldOffset_i','mag','','','offset of field from initial calibration (final minus initial magnitudes)','0');
INSERT DBColumns VALUES('Field','fieldOffset_z','mag','','','offset of field from initial calibration (final minus initial magnitudes)','0');
INSERT DBColumns VALUES('Field','calibStatus_u','','','CalibStatus','calibration status bitmask','0');
INSERT DBColumns VALUES('Field','calibStatus_g','','','CalibStatus','calibration status bitmask','0');
INSERT DBColumns VALUES('Field','calibStatus_r','','','CalibStatus','calibration status bitmask','0');
INSERT DBColumns VALUES('Field','calibStatus_i','','','CalibStatus','calibration status bitmask','0');
INSERT DBColumns VALUES('Field','calibStatus_z','','','CalibStatus','calibration status bitmask','0');
INSERT DBColumns VALUES('Field','imageStatus_u','','','ImageStatus','image status bitmask','0');
INSERT DBColumns VALUES('Field','imageStatus_g','','','ImageStatus','image status bitmask','0');
INSERT DBColumns VALUES('Field','imageStatus_r','','','ImageStatus','image status bitmask','0');
INSERT DBColumns VALUES('Field','imageStatus_i','','','ImageStatus','image status bitmask','0');
INSERT DBColumns VALUES('Field','imageStatus_z','','','ImageStatus','image status bitmask','0');
INSERT DBColumns VALUES('Field','nMgyPerCount_u','nmgy/count','','','nanomaggies per count in u-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCount_g','nmgy/count','','','nanomaggies per count in g-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCount_r','nmgy/count','','','nanomaggies per count in r-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCount_i','nmgy/count','','','nanomaggies per count in i-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCount_z','nmgy/count','','','nanomaggies per count in z-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCountIvar_u','(nmgy/count)^{-2}','','','Inverse variance of nanomaggies per count in u-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCountIvar_g','(nmgy/count)^{-2}','','','Inverse variance of nanomaggies per count in g-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCountIvar_r','(nmgy/count)^{-2}','','','Inverse variance of nanomaggies per count in r-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCountIvar_i','(nmgy/count)^{-2}','','','Inverse variance of nanomaggies per count in i-band','0');
INSERT DBColumns VALUES('Field','nMgyPerCountIvar_z','(nmgy/count)^{-2}','','','Inverse variance of nanomaggies per count in z-band','0');
INSERT DBColumns VALUES('Field','ifield','','','','field id used by resolve pipeline','0');
INSERT DBColumns VALUES('Field','muStart','arcsec','','','start of field in stripe coords (parallel to scan direction, 64 pixels clipped)','0');
INSERT DBColumns VALUES('Field','muEnd','arcsec','','','end of field in stripe coords (parallel to scan direction, 64 pixels clipped)','0');
INSERT DBColumns VALUES('Field','nuStart','arcsec','','','start of field in stripe coords (perpendicular to scan direction, 64 pixels clipped)','0');
INSERT DBColumns VALUES('Field','nuEnd','arcsec','','','end of field in stripe coords (perpendicular to scan direction, 64 pixels clipped)','0');
INSERT DBColumns VALUES('Field','ifindx','','','','first entry for this field in the "findx" table matching fields and balkans','0');
INSERT DBColumns VALUES('Field','nBalkans','','','','number of balkans contained in this field (and corresponding number of entries in the "findx" table)','0');
INSERT DBColumns VALUES('Field','loadVersion','','','','Load Version','0');
INSERT DBColumns VALUES('PhotoObjAll','objID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('PhotoObjAll','skyVersion','','','','Layer of catalog (currently only one layer, 0; 0-15 available)','0');
INSERT DBColumns VALUES('PhotoObjAll','run','','','','Run number','0');
INSERT DBColumns VALUES('PhotoObjAll','rerun','','','','Rerun number','0');
INSERT DBColumns VALUES('PhotoObjAll','camcol','','','','Camera column','0');
INSERT DBColumns VALUES('PhotoObjAll','field','','','','Field number','0');
INSERT DBColumns VALUES('PhotoObjAll','obj','','','','The object id within a field. Usually changes between reruns of the same field','0');
INSERT DBColumns VALUES('PhotoObjAll','mode','','','PhotoMode','1: primary, 2: secondary, 3: other','0');
INSERT DBColumns VALUES('PhotoObjAll','nChild','','','','Number of children if this is a composite object that has been deblended. BRIGHT (in a flags sense) objects also have nchild == 1, the non-BRIGHT sibling.','0');
INSERT DBColumns VALUES('PhotoObjAll','type','','','PhotoType','Type classification of the object (star, galaxy, cosmic ray, etc.)','0');
INSERT DBColumns VALUES('PhotoObjAll','clean','','','','Clean photometry flag (1=clean, 0=unclean).','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF','','','','Probability that the object is a star. Currently 0 if type == 3 (galaxy), 1 if type == 6 (star).','0');
INSERT DBColumns VALUES('PhotoObjAll','insideMask','','','InsideMask','Flag to indicate whether object is inside a mask and why','0');
INSERT DBColumns VALUES('PhotoObjAll','flags','','','PhotoFlags','Photo Object Attribute Flags','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc','pix','','','Row center position (r-band coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr','pix','','','Row center position error (r-band coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','colc','pix','','','Column center position (r-band coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr','pix','','','Column center position error (r-band coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','rowv','deg/day','','','Row-component of object''s velocity','0');
INSERT DBColumns VALUES('PhotoObjAll','rowvErr','deg/day','','','Row-component of object''s velocity error','0');
INSERT DBColumns VALUES('PhotoObjAll','colv','deg/day','','','Column-component of object''s velocity','0');
INSERT DBColumns VALUES('PhotoObjAll','colvErr','deg/day','','','Column-component of object''s velocity error','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc_u','pix','','','Row center, u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc_g','pix','','','Row center, g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc_r','pix','','','Row center, r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc_i','pix','','','Row center, i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowc_z','pix','','','Row center, z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr_u','pix','','','ERROR Row center error, u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr_g','pix','','','ERROR Row center error, g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr_r','pix','','','ERROR Row center error, r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr_i','pix','','','ERROR Row center error, i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','rowcErr_z','pix','','','ERROR Row center error, z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colc_u','pix','','','Column center, u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colc_g','pix','','','Column center, g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colc_r','pix','','','Column center, r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colc_i','pix','','','Column center, i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colc_z','pix','','','Column center, z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr_u','pix','','','Column center error, u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr_g','pix','','','Column center error, g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr_r','pix','','','Column center error, r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr_i','pix','','','Column center error, i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','colcErr_z','pix','','','Column center error, z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','sky_u','nanomaggies/arcsec^2','','','Sky flux at the center of object (allowing for siblings if blended).','0');
INSERT DBColumns VALUES('PhotoObjAll','sky_g','nanomaggies/arcsec^2','','','Sky flux at the center of object (allowing for siblings if blended).','0');
INSERT DBColumns VALUES('PhotoObjAll','sky_r','nanomaggies/arcsec^2','','','Sky flux at the center of object (allowing for siblings if blended).','0');
INSERT DBColumns VALUES('PhotoObjAll','sky_i','nanomaggies/arcsec^2','','','Sky flux at the center of object (allowing for siblings if blended).','0');
INSERT DBColumns VALUES('PhotoObjAll','sky_z','nanomaggies/arcsec^2','','','Sky flux at the center of object (allowing for siblings if blended).','0');
INSERT DBColumns VALUES('PhotoObjAll','skyIvar_u','nanomaggies/arcsec^2','','','Sky flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','skyIvar_g','nanomaggies/arcsec^2','','','Sky flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','skyIvar_r','nanomaggies/arcsec^2','','','Sky flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','skyIvar_i','nanomaggies/arcsec^2','','','Sky flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','skyIvar_z','nanomaggies/arcsec^2','','','Sky flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMag_u','mag','','','PSF magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMag_g','mag','','','PSF magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMag_r','mag','','','PSF magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMag_i','mag','','','PSF magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMag_z','mag','','','PSF magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMagErr_u','mag','','','PSF magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMagErr_g','mag','','','PSF magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMagErr_r','mag','','','PSF magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMagErr_i','mag','','','PSF magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','psfMagErr_z','mag','','','PSF magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMag_u','mag','','','Magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMag_g','mag','','','Magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMag_r','mag','','','Magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMag_i','mag','','','Magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMag_z','mag','','','Magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMagErr_u','mag','','','Error in magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMagErr_g','mag','','','Error in magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMagErr_r','mag','','','Error in magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMagErr_i','mag','','','Error in magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberMagErr_z','mag','','','Error in magnitude in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Mag_u','mag','','','Magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Mag_g','mag','','','Magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Mag_r','mag','','','Magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Mag_i','mag','','','Magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Mag_z','mag','','','Magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2MagErr_u','mag','','','Error in magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2MagErr_g','mag','','','Error in magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2MagErr_r','mag','','','Error in magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2MagErr_i','mag','','','Error in magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2MagErr_z','mag','','','Error in magnitude in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMag_u','mag','','','Petrosian magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMag_g','mag','','','Petrosian magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMag_r','mag','','','Petrosian magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMag_i','mag','','','Petrosian magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMag_z','mag','','','Petrosian magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMagErr_u','mag','','','Petrosian magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMagErr_g','mag','','','Petrosian magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMagErr_r','mag','','','Petrosian magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMagErr_i','mag','','','Petrosian magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroMagErr_z','mag','','','Petrosian magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFlux_u','nanomaggies','','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFlux_g','nanomaggies','','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFlux_r','nanomaggies','','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFlux_i','nanomaggies','','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFlux_z','nanomaggies','','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFluxIvar_u','nanomaggies^{-2}','','','PSF flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFluxIvar_g','nanomaggies^{-2}','','','PSF flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFluxIvar_r','nanomaggies^{-2}','','','PSF flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFluxIvar_i','nanomaggies^{-2}','','','PSF flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','psfFluxIvar_z','nanomaggies^{-2}','','','PSF flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFlux_u','nanomaggies','','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFlux_g','nanomaggies','','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFlux_r','nanomaggies','','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFlux_i','nanomaggies','','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFlux_z','nanomaggies','','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFluxIvar_u','nanomaggies^{-2}','','','Inverse variance in flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFluxIvar_g','nanomaggies^{-2}','','','Inverse variance in flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFluxIvar_r','nanomaggies^{-2}','','','Inverse variance in flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFluxIvar_i','nanomaggies^{-2}','','','Inverse variance in flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiberFluxIvar_z','nanomaggies^{-2}','','','Inverse variance in flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Flux_u','nanomaggies','','','Flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Flux_g','nanomaggies','','','Flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Flux_r','nanomaggies','','','Flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Flux_i','nanomaggies','','','Flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2Flux_z','nanomaggies','','','Flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2FluxIvar_u','nanomaggies^{-2}','','','Inverse variance in flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2FluxIvar_g','nanomaggies^{-2}','','','Inverse variance in flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2FluxIvar_r','nanomaggies^{-2}','','','Inverse variance in flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2FluxIvar_i','nanomaggies^{-2}','','','Inverse variance in flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','fiber2FluxIvar_z','nanomaggies^{-2}','','','Inverse variance in flux in 2 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFlux_u','nanomaggies','','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFlux_g','nanomaggies','','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFlux_r','nanomaggies','','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFlux_i','nanomaggies','','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFlux_z','nanomaggies','','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFluxIvar_u','nanomaggies^{-2}','','','Petrosian flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFluxIvar_g','nanomaggies^{-2}','','','Petrosian flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFluxIvar_r','nanomaggies^{-2}','','','Petrosian flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFluxIvar_i','nanomaggies^{-2}','','','Petrosian flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','petroFluxIvar_z','nanomaggies^{-2}','','','Petrosian flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRad_u','arcsec','','','Petrosian radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRad_g','arcsec','','','Petrosian radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRad_r','arcsec','','','Petrosian radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRad_i','arcsec','','','Petrosian radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRad_z','arcsec','','','Petrosian radius','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRadErr_u','arcsec','','','Petrosian radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRadErr_g','arcsec','','','Petrosian radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRadErr_r','arcsec','','','Petrosian radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRadErr_i','arcsec','','','Petrosian radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroRadErr_z','arcsec','','','Petrosian radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50_u','arcsec','','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50_g','arcsec','','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50_r','arcsec','','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50_i','arcsec','','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50_z','arcsec','','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50Err_u','arcsec','','','Error in radius with 50% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50Err_g','arcsec','','','Error in radius with 50% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50Err_r','arcsec','','','Error in radius with 50% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50Err_i','arcsec','','','Error in radius with 50% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR50Err_z','arcsec','','','Error in radius with 50% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90_u','arcsec','','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90_g','arcsec','','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90_r','arcsec','','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90_i','arcsec','','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90_z','arcsec','','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90Err_u','arcsec','','','Error in radius with 90% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90Err_g','arcsec','','','Error in radius with 90% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90Err_r','arcsec','','','Error in radius with 90% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90Err_i','arcsec','','','Error in radius with 90% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','petroR90Err_z','arcsec','','','Error in radius with 90% of Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjAll','q_u','','','','Stokes Q parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','q_g','','','','Stokes Q parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','q_r','','','','Stokes Q parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','q_i','','','','Stokes Q parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','q_z','','','','Stokes Q parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','qErr_u','','','','Stokes Q parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','qErr_g','','','','Stokes Q parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','qErr_r','','','','Stokes Q parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','qErr_i','','','','Stokes Q parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','qErr_z','','','','Stokes Q parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','u_u','','','','Stokes U parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','u_g','','','','Stokes U parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','u_r','','','','Stokes U parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','u_i','','','','Stokes U parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','u_z','','','','Stokes U parameter','0');
INSERT DBColumns VALUES('PhotoObjAll','uErr_u','','','','Stokes U parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','uErr_g','','','','Stokes U parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','uErr_r','','','','Stokes U parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','uErr_i','','','','Stokes U parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','uErr_z','','','','Stokes U parameter error','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1_u','','','','Adaptive E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1_g','','','','Adaptive E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1_r','','','','Adaptive E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1_i','','','','Adaptive E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1_z','','','','Adaptive E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2_u','','','','Adaptive E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2_g','','','','Adaptive E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2_r','','','','Adaptive E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2_i','','','','Adaptive E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2_z','','','','Adaptive E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E1Err_u','','','','Covariance in E1/E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E1Err_g','','','','Covariance in E1/E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E1Err_r','','','','Covariance in E1/E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E1Err_i','','','','Covariance in E1/E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E1Err_z','','','','Covariance in E1/E1 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E2Err_u','','','','Covariance in E1/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E2Err_g','','','','Covariance in E1/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E2Err_r','','','','Covariance in E1/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E2Err_i','','','','Covariance in E1/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1E2Err_z','','','','Covariance in E1/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2E2Err_u','','','','Covariance in E2/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2E2Err_g','','','','Covariance in E2/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2E2Err_r','','','','Covariance in E2/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2E2Err_i','','','','Covariance in E2/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2E2Err_z','','','','Covariance in E2/E2 shape measure (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCc_u','','','','Adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCc_g','','','','Adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCc_r','','','','Adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCc_i','','','','Adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCc_z','','','','Adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcErr_u','','','','Error in adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcErr_g','','','','Error in adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcErr_r','','','','Error in adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcErr_i','','','','Error in adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcErr_z','','','','Error in adaptive ( + ) (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4_u','','','','Adaptive fourth moment of object (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4_g','','','','Adaptive fourth moment of object (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4_r','','','','Adaptive fourth moment of object (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4_i','','','','Adaptive fourth moment of object (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4_z','','','','Adaptive fourth moment of object (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1PSF_u','','','','Adaptive E1 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1PSF_g','','','','Adaptive E1 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1PSF_r','','','','Adaptive E1 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1PSF_i','','','','Adaptive E1 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE1PSF_z','','','','Adaptive E1 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2PSF_u','','','','Adaptive E2 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2PSF_g','','','','Adaptive E2 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2PSF_r','','','','Adaptive E2 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2PSF_i','','','','Adaptive E2 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mE2PSF_z','','','','Adaptive E2 for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcPSF_u','','','','Adaptive ( + ) for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcPSF_g','','','','Adaptive ( + ) for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcPSF_r','','','','Adaptive ( + ) for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcPSF_i','','','','Adaptive ( + ) for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mRrCcPSF_z','','','','Adaptive ( + ) for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4PSF_u','','','','Adaptive fourth moment for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4PSF_g','','','','Adaptive fourth moment for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4PSF_r','','','','Adaptive fourth moment for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4PSF_i','','','','Adaptive fourth moment for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','mCr4PSF_z','','','','Adaptive fourth moment for PSF (pixel coordinates)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRad_u','arcsec','','','de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRad_g','arcsec','','','de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRad_r','arcsec','','','de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRad_i','arcsec','','','de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRad_z','arcsec','','','de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRadErr_u','arcsec','','','Error in de Vaucouleurs fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRadErr_g','arcsec','','','Error in de Vaucouleurs fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRadErr_r','arcsec','','','Error in de Vaucouleurs fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRadErr_i','arcsec','','','Error in de Vaucouleurs fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVRadErr_z','arcsec','','','Error in de Vaucouleurs fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVAB_u','','','','de Vaucouleurs fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','deVAB_g','','','','de Vaucouleurs fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','deVAB_r','','','','de Vaucouleurs fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','deVAB_i','','','','de Vaucouleurs fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','deVAB_z','','','','de Vaucouleurs fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','deVABErr_u','','','','de Vaucouleurs fit b/a error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVABErr_g','','','','de Vaucouleurs fit b/a error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVABErr_r','','','','de Vaucouleurs fit b/a error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVABErr_i','','','','de Vaucouleurs fit b/a error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVABErr_z','','','','de Vaucouleurs fit b/a error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVPhi_u','deg','','','de Vaucouleurs fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVPhi_g','deg','','','de Vaucouleurs fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVPhi_r','deg','','','de Vaucouleurs fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVPhi_i','deg','','','de Vaucouleurs fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVPhi_z','deg','','','de Vaucouleurs fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMag_u','mag','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMag_g','mag','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMag_r','mag','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMag_i','mag','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMag_z','mag','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMagErr_u','mag','','','de Vaucouleurs magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMagErr_g','mag','','','de Vaucouleurs magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMagErr_r','mag','','','de Vaucouleurs magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMagErr_i','mag','','','de Vaucouleurs magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVMagErr_z','mag','','','de Vaucouleurs magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFlux_u','nanomaggies','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFlux_g','nanomaggies','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFlux_r','nanomaggies','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFlux_i','nanomaggies','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFlux_z','nanomaggies','','','de Vaucouleurs magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFluxIvar_u','nanomaggies^{-2}','','','de Vaucouleurs magnitude fit inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFluxIvar_g','nanomaggies^{-2}','','','de Vaucouleurs magnitude fit inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFluxIvar_r','nanomaggies^{-2}','','','de Vaucouleurs magnitude fit inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFluxIvar_i','nanomaggies^{-2}','','','de Vaucouleurs magnitude fit inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','deVFluxIvar_z','nanomaggies^{-2}','','','de Vaucouleurs magnitude fit inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','expRad_u','arcsec','','','Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','expRad_g','arcsec','','','Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','expRad_r','arcsec','','','Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','expRad_i','arcsec','','','Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','expRad_z','arcsec','','','Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.','0');
INSERT DBColumns VALUES('PhotoObjAll','expRadErr_u','arcsec','','','Exponential fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','expRadErr_g','arcsec','','','Exponential fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','expRadErr_r','arcsec','','','Exponential fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','expRadErr_i','arcsec','','','Exponential fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','expRadErr_z','arcsec','','','Exponential fit scale radius error','0');
INSERT DBColumns VALUES('PhotoObjAll','expAB_u','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expAB_g','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expAB_r','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expAB_i','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expAB_z','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expABErr_u','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expABErr_g','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expABErr_r','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expABErr_i','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expABErr_z','','','','Exponential fit b/a','0');
INSERT DBColumns VALUES('PhotoObjAll','expPhi_u','deg','','','Exponential fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','expPhi_g','deg','','','Exponential fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','expPhi_r','deg','','','Exponential fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','expPhi_i','deg','','','Exponential fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','expPhi_z','deg','','','Exponential fit position angle (+N thru E)','0');
INSERT DBColumns VALUES('PhotoObjAll','expMag_u','mag','','','Exponential fit magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','expMag_g','mag','','','Exponential fit magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','expMag_r','mag','','','Exponential fit magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','expMag_i','mag','','','Exponential fit magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','expMag_z','mag','','','Exponential fit magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','expMagErr_u','mag','','','Exponential fit magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','expMagErr_g','mag','','','Exponential fit magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','expMagErr_r','mag','','','Exponential fit magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','expMagErr_i','mag','','','Exponential fit magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','expMagErr_z','mag','','','Exponential fit magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMag_u','mag','','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMag_g','mag','','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMag_r','mag','','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMag_i','mag','','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMag_z','mag','','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMagErr_u','mag','','','Error in better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMagErr_g','mag','','','Error in better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMagErr_r','mag','','','Error in better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMagErr_i','mag','','','Error in better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelMagErr_z','mag','','','Error in better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMag_u','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMag_g','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMag_r','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMag_i','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMag_z','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMagErr_u','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMagErr_g','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMagErr_r','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMagErr_i','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelMagErr_z','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('PhotoObjAll','expFlux_u','nanomaggies','','','Exponential fit flux','0');
INSERT DBColumns VALUES('PhotoObjAll','expFlux_g','nanomaggies','','','Exponential fit flux','0');
INSERT DBColumns VALUES('PhotoObjAll','expFlux_r','nanomaggies','','','Exponential fit flux','0');
INSERT DBColumns VALUES('PhotoObjAll','expFlux_i','nanomaggies','','','Exponential fit flux','0');
INSERT DBColumns VALUES('PhotoObjAll','expFlux_z','nanomaggies','','','Exponential fit flux','0');
INSERT DBColumns VALUES('PhotoObjAll','expFluxIvar_u','nanomaggies^{-2}','','','Exponential fit flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','expFluxIvar_g','nanomaggies^{-2}','','','Exponential fit flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','expFluxIvar_r','nanomaggies^{-2}','','','Exponential fit flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','expFluxIvar_i','nanomaggies^{-2}','','','Exponential fit flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','expFluxIvar_z','nanomaggies^{-2}','','','Exponential fit flux inverse variance','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFlux_u','nanomaggies','','','better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFlux_g','nanomaggies','','','better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFlux_r','nanomaggies','','','better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFlux_i','nanomaggies','','','better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFlux_z','nanomaggies','','','better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFluxIvar_u','nanomaggies^{-2}','','','Inverse variance in better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFluxIvar_g','nanomaggies^{-2}','','','Inverse variance in better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFluxIvar_r','nanomaggies^{-2}','','','Inverse variance in better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFluxIvar_i','nanomaggies^{-2}','','','Inverse variance in better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','modelFluxIvar_z','nanomaggies^{-2}','','','Inverse variance in better of DeV/Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFlux_u','nanomaggies','','','better of DeV+Exp flux','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFlux_g','nanomaggies','','','better of DeV+Exp flux','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFlux_r','nanomaggies','','','better of DeV+Exp flux','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFlux_i','nanomaggies','','','better of DeV+Exp flux','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFlux_z','nanomaggies','','','better of DeV+Exp flux','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFluxIvar_u','nanomaggies^{-2}','','','Inverse variance in DeV+Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFluxIvar_g','nanomaggies^{-2}','','','Inverse variance in DeV+Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFluxIvar_r','nanomaggies^{-2}','','','Inverse variance in DeV+Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFluxIvar_i','nanomaggies^{-2}','','','Inverse variance in DeV+Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','cModelFluxIvar_z','nanomaggies^{-2}','','','Inverse variance in DeV+Exp flux fit','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7_u','nanomaggies','','','Aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7_g','nanomaggies','','','Aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7_r','nanomaggies','','','Aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7_i','nanomaggies','','','Aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7_z','nanomaggies','','','Aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7Ivar_u','nanomaggies^{-2}','','','Inverse variance of aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7Ivar_g','nanomaggies^{-2}','','','Inverse variance of aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7Ivar_r','nanomaggies^{-2}','','','Inverse variance of aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7Ivar_i','nanomaggies^{-2}','','','Inverse variance of aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','aperFlux7Ivar_z','nanomaggies^{-2}','','','Inverse variance of aperture flux within 7.3 arcsec','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLStar_u','','','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLStar_g','','','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLStar_r','','','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLStar_i','','','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLStar_z','','','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLExp_u','','','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLExp_g','','','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLExp_r','','','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLExp_i','','','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLExp_z','','','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLDeV_u','','','','de Vaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLDeV_g','','','','de Vaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLDeV_r','','','','de Vaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLDeV_i','','','','de Vaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','lnLDeV_z','','','','de Vaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjAll','fracDeV_u','','','','Weight of deV component in deV+Exp model','0');
INSERT DBColumns VALUES('PhotoObjAll','fracDeV_g','','','','Weight of deV component in deV+Exp model','0');
INSERT DBColumns VALUES('PhotoObjAll','fracDeV_r','','','','Weight of deV component in deV+Exp model','0');
INSERT DBColumns VALUES('PhotoObjAll','fracDeV_i','','','','Weight of deV component in deV+Exp model','0');
INSERT DBColumns VALUES('PhotoObjAll','fracDeV_z','','','','Weight of deV component in deV+Exp model','0');
INSERT DBColumns VALUES('PhotoObjAll','flags_u','','','','Object detection flags per band','0');
INSERT DBColumns VALUES('PhotoObjAll','flags_g','','','','Object detection flags per band','0');
INSERT DBColumns VALUES('PhotoObjAll','flags_r','','','','Object detection flags per band','0');
INSERT DBColumns VALUES('PhotoObjAll','flags_i','','','','Object detection flags per band','0');
INSERT DBColumns VALUES('PhotoObjAll','flags_z','','','','Object detection flags per band','0');
INSERT DBColumns VALUES('PhotoObjAll','type_u','','','','Object type classification per band','0');
INSERT DBColumns VALUES('PhotoObjAll','type_g','','','','Object type classification per band','0');
INSERT DBColumns VALUES('PhotoObjAll','type_r','','','','Object type classification per band','0');
INSERT DBColumns VALUES('PhotoObjAll','type_i','','','','Object type classification per band','0');
INSERT DBColumns VALUES('PhotoObjAll','type_z','','','','Object type classification per band','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF_u','','','','Probablity object is a star in each filter.','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF_g','','','','Probablity object is a star in each filter.','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF_r','','','','Probablity object is a star in each filter.','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF_i','','','','Probablity object is a star in each filter.','0');
INSERT DBColumns VALUES('PhotoObjAll','probPSF_z','','','','Probablity object is a star in each filter.','0');
INSERT DBColumns VALUES('PhotoObjAll','ra','deg','','','J2000 Right Ascension (r-band)','0');
INSERT DBColumns VALUES('PhotoObjAll','dec','deg','','','J2000 Declination (r-band)','0');
INSERT DBColumns VALUES('PhotoObjAll','cx','','','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjAll','cy','','','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjAll','cz','','','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjAll','raErr','arcsec','','','Error in RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','decErr','arcsec','','','Error in Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','b','deg','','','Galactic latitude','0');
INSERT DBColumns VALUES('PhotoObjAll','l','deg','','','Galactic longitude','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetRa_u','arcsec','','','filter position RA minus final RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetRa_g','arcsec','','','filter position RA minus final RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetRa_r','arcsec','','','filter position RA minus final RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetRa_i','arcsec','','','filter position RA minus final RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetRa_z','arcsec','','','filter position RA minus final RA (* cos(Dec), that is, proper units)','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetDec_u','arcsec','','','filter position Dec minus final Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetDec_g','arcsec','','','filter position Dec minus final Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetDec_r','arcsec','','','filter position Dec minus final Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetDec_i','arcsec','','','filter position Dec minus final Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','offsetDec_z','arcsec','','','filter position Dec minus final Dec','0');
INSERT DBColumns VALUES('PhotoObjAll','extinction_u','mag','','','Extinction in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','extinction_g','mag','','','Extinction in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','extinction_r','mag','','','Extinction in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','extinction_i','mag','','','Extinction in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','extinction_z','mag','','','Extinction in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','psffwhm_u','arcsec','','','FWHM in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','psffwhm_g','arcsec','','','FWHM in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','psffwhm_r','arcsec','','','FWHM in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','psffwhm_i','arcsec','','','FWHM in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','psffwhm_z','arcsec','','','FWHM in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','mjd','days','','','Date of observation','0');
INSERT DBColumns VALUES('PhotoObjAll','airmass_u','','','','Airmass at time of observation in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','airmass_g','','','','Airmass at time of observation in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','airmass_r','','','','Airmass at time of observation in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','airmass_i','','','','Airmass at time of observation in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','airmass_z','','','','Airmass at time of observation in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','phioffset_u','deg','','','Degrees to add to CCD-aligned angle to convert to E of N','0');
INSERT DBColumns VALUES('PhotoObjAll','phioffset_g','deg','','','Degrees to add to CCD-aligned angle to convert to E of N','0');
INSERT DBColumns VALUES('PhotoObjAll','phioffset_r','deg','','','Degrees to add to CCD-aligned angle to convert to E of N','0');
INSERT DBColumns VALUES('PhotoObjAll','phioffset_i','deg','','','Degrees to add to CCD-aligned angle to convert to E of N','0');
INSERT DBColumns VALUES('PhotoObjAll','phioffset_z','deg','','','Degrees to add to CCD-aligned angle to convert to E of N','0');
INSERT DBColumns VALUES('PhotoObjAll','nProf_u','','','','Number of Profile Bins','0');
INSERT DBColumns VALUES('PhotoObjAll','nProf_g','','','','Number of Profile Bins','0');
INSERT DBColumns VALUES('PhotoObjAll','nProf_r','','','','Number of Profile Bins','0');
INSERT DBColumns VALUES('PhotoObjAll','nProf_i','','','','Number of Profile Bins','0');
INSERT DBColumns VALUES('PhotoObjAll','nProf_z','','','','Number of Profile Bins','0');
INSERT DBColumns VALUES('PhotoObjAll','loadVersion','','','','Load Version','0');
INSERT DBColumns VALUES('PhotoObjAll','htmID','','','','20-deep hierarchical trangular mesh ID of this object','0');
INSERT DBColumns VALUES('PhotoObjAll','fieldID','','','','Link to the field this object is in','0');
INSERT DBColumns VALUES('PhotoObjAll','parentID','','','','Pointer to parent (if object deblended) or BRIGHT detection (if object has one), else 0','0');
INSERT DBColumns VALUES('PhotoObjAll','specObjID','','','','Pointer to the spectrum of object, if exists, else 0','0');
INSERT DBColumns VALUES('PhotoObjAll','u','mag','','','Shorthand alias for modelMag','0');
INSERT DBColumns VALUES('PhotoObjAll','g','mag','','','Shorthand alias for modelMag','0');
INSERT DBColumns VALUES('PhotoObjAll','r','mag','','','Shorthand alias for modelMag','0');
INSERT DBColumns VALUES('PhotoObjAll','i','mag','','','Shorthand alias for modelMag','0');
INSERT DBColumns VALUES('PhotoObjAll','z','mag','','','Shorthand alias for modelMag','0');
INSERT DBColumns VALUES('PhotoObjAll','err_u','mag','','','Error in modelMag alias','0');
INSERT DBColumns VALUES('PhotoObjAll','err_g','mag','','','Error in modelMag alias','0');
INSERT DBColumns VALUES('PhotoObjAll','err_r','mag','','','Error in modelMag alias','0');
INSERT DBColumns VALUES('PhotoObjAll','err_i','mag','','','Error in modelMag alias','0');
INSERT DBColumns VALUES('PhotoObjAll','err_z','mag','','','Error in modelMag alias','0');
INSERT DBColumns VALUES('PhotoObjAll','dered_u','mag','','','Simplified mag, corrected for extinction: modelMag-extinction','0');
INSERT DBColumns VALUES('PhotoObjAll','dered_g','mag','','','Simplified mag, corrected for extinction: modelMag-extinction','0');
INSERT DBColumns VALUES('PhotoObjAll','dered_r','mag','','','Simplified mag, corrected for extinction: modelMag-extinction','0');
INSERT DBColumns VALUES('PhotoObjAll','dered_i','mag','','','Simplified mag, corrected for extinction: modelMag-extinction','0');
INSERT DBColumns VALUES('PhotoObjAll','dered_z','mag','','','Simplified mag, corrected for extinction: modelMag-extinction','0');
INSERT DBColumns VALUES('PhotoObjAll','cloudCam_u','','','','Cloud camera status for observation in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','cloudCam_g','','','','Cloud camera status for observation in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','cloudCam_r','','','','Cloud camera status for observation in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','cloudCam_i','','','','Cloud camera status for observation in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','cloudCam_z','','','','Cloud camera status for observation in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','resolveStatus','','','ResolveStatus','Resolve status of object','0');
INSERT DBColumns VALUES('PhotoObjAll','thingId','','','','Unique identifier from global resolve','0');
INSERT DBColumns VALUES('PhotoObjAll','balkanId','','','','What balkan object is in from window','0');
INSERT DBColumns VALUES('PhotoObjAll','nObserve','','','','Number of observations of this object','0');
INSERT DBColumns VALUES('PhotoObjAll','nDetect','','','','Number of detections of this object','0');
INSERT DBColumns VALUES('PhotoObjAll','nEdge','','','','Number of observations of this object near an edge','0');
INSERT DBColumns VALUES('PhotoObjAll','score','','','','Quality of field (0-1)','0');
INSERT DBColumns VALUES('PhotoObjAll','calibStatus_u','','','CalibStatus','Calibration status in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','calibStatus_g','','','CalibStatus','Calibration status in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','calibStatus_r','','','CalibStatus','Calibration status in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','calibStatus_i','','','CalibStatus','Calibration status in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','calibStatus_z','','','CalibStatus','Calibration status in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','nMgyPerCount_u','nmgy/count','','','nanomaggies per count in u-band','0');
INSERT DBColumns VALUES('PhotoObjAll','nMgyPerCount_g','nmgy/count','','','nanomaggies per count in g-band','0');
INSERT DBColumns VALUES('PhotoObjAll','nMgyPerCount_r','nmgy/count','','','nanomaggies per count in r-band','0');
INSERT DBColumns VALUES('PhotoObjAll','nMgyPerCount_i','nmgy/count','','','nanomaggies per count in i-band','0');
INSERT DBColumns VALUES('PhotoObjAll','nMgyPerCount_z','nmgy/count','','','nanomaggies per count in z-band','0');
INSERT DBColumns VALUES('PhotoObjAll','TAI_u','sec','','','time of observation (TAI) in each filter','0');
INSERT DBColumns VALUES('PhotoObjAll','TAI_g','sec','','','time of observation (TAI) in each filter','0');
INSERT DBColumns VALUES('PhotoObjAll','TAI_r','sec','','','time of observation (TAI) in each filter','0');
INSERT DBColumns VALUES('PhotoObjAll','TAI_i','sec','','','time of observation (TAI) in each filter','0');
INSERT DBColumns VALUES('PhotoObjAll','TAI_z','sec','','','time of observation (TAI) in each filter','0');
INSERT DBColumns VALUES('ProperMotions','delta','arcsec','POS_ANG_DIST_GENERAL','','Distance between this object and the nearest matching USNO-B object.','0');
INSERT DBColumns VALUES('ProperMotions','match','','CODE_MISC','','Number of objects in USNO-B which matched this object within a 1 arcsec radius.  If negative, then the nearest matching USNO-B object itself matched more than 1 SDSS object.','0');
INSERT DBColumns VALUES('ProperMotions','pmL','mas/year','POS_PM','','Proper motion in galactic longitude.','0');
INSERT DBColumns VALUES('ProperMotions','pmB','mas/year','POS_PM','','Proper motion in galactic latitude.','0');
INSERT DBColumns VALUES('ProperMotions','pmRa','mas/year','POS_PM_RA','','Proper motion in right ascension.','0');
INSERT DBColumns VALUES('ProperMotions','pmDec','mas/year','POS_PM_DEC','','Proper motion in declination.','0');
INSERT DBColumns VALUES('ProperMotions','pmRaErr','mas/year','POS_PM_RA_ERR','','Error in proper motion in right ascension.','0');
INSERT DBColumns VALUES('ProperMotions','pmDecErr','mas/year','POS_PM_DEC_ERR','','Error in proper motion in declination.','0');
INSERT DBColumns VALUES('ProperMotions','sigRa','mas','CODE_MISC','','RMS residual for the proper motion fit in r.a.','0');
INSERT DBColumns VALUES('ProperMotions','sigDec','mas','CODE_MISC','','RMS residual for the proper motion fit in dec.','0');
INSERT DBColumns VALUES('ProperMotions','nFit','','CODE_MISC','','Number of detections used in the fit including the SDSS detection (thus, the number of plates the object was detected on in USNO-B plus one).','0');
INSERT DBColumns VALUES('ProperMotions','O','mag','PHOT_MAG_G','','Recalibrated USNO-B O magnitude,  recalibrated to SDSS g','0');
INSERT DBColumns VALUES('ProperMotions','E','mag','PHOT_MAG_R','','Recalibrated USNO-B E magnitude,  recalibrated to SDSS r','0');
INSERT DBColumns VALUES('ProperMotions','J','mag','PHOT_MAG_G','','Recalibrated USNO-B J magnitude,  recalibrated to SDSS g','0');
INSERT DBColumns VALUES('ProperMotions','F','mag','PHOT_MAG_R','','Recalibrated USNO-B F magnitude,  recalibrated to SDSS r','0');
INSERT DBColumns VALUES('ProperMotions','N','mag','PHOT_MAG_I','','Recalibrated USNO-B N magnitude,  recalibrated to SDSS i','0');
INSERT DBColumns VALUES('ProperMotions','dist20','arcsec','POS_ANG_DIST','','Distance to the nearest neighbor with g &lt; 20','0');
INSERT DBColumns VALUES('ProperMotions','dist22','arcsec','POS_ANG_DIST','','Distance to the nearest neighbor with g &lt; 22','0');
INSERT DBColumns VALUES('ProperMotions','objid','','ID_MAIN','','unique id, points to photoObj','0');
INSERT DBColumns VALUES('FieldProfile','bin','','ID_NUMBER','','bin number (0..14)','0');
INSERT DBColumns VALUES('FieldProfile','band','','ID_NUMBER','','u,g,r,i,z (0..4)','0');
INSERT DBColumns VALUES('FieldProfile','profMean','nmgy/arcsec^2','PHOT_FLUX_OPTICAL','','Mean pixel flux in annulus','0');
INSERT DBColumns VALUES('FieldProfile','profMed','nmgy/arcsec^2','PHOT_FLUX_OPTICAL STAT_MEDIAN','','Median profile','0');
INSERT DBColumns VALUES('FieldProfile','profSig','nmgy/arcsec^2','PHOT_FLUX_OPTICAL STAT_STDEV','','Sigma of profile','0');
INSERT DBColumns VALUES('FieldProfile','fieldID','','ID_CATALOG','','links to the field object','0');
INSERT DBColumns VALUES('Run','skyVersion','','CODE_MISC','','0 = OPDB target, 1 = OPDB best XXX','0');
INSERT DBColumns VALUES('Run','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('Run','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('Run','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('Run','datestring','','','','Human-readable date of observation','0');
INSERT DBColumns VALUES('Run','stripe','','ID_FIELD','','Stripe number','0');
INSERT DBColumns VALUES('Run','strip','','','','Strip (N or S)','0');
INSERT DBColumns VALUES('Run','xBore','deg','','','boresight offset perpendicular to great circle','0');
INSERT DBColumns VALUES('Run','fieldRef','','ID_FIELD','','Starting field number of full run (what MU_REF, MJD_REF refer to)','0');
INSERT DBColumns VALUES('Run','lastField','','NUMBER','','last field of full run','0');
INSERT DBColumns VALUES('Run','flavor','','','','type of drift scan (from apacheraw, bias, calibration, engineering, ignore, and science)','0');
INSERT DBColumns VALUES('Run','xBin','pix','','','binning amount perpendicular to scan direction','0');
INSERT DBColumns VALUES('Run','yBin','pix','','','binning amount in scan direction','0');
INSERT DBColumns VALUES('Run','nRow','pix','','','number of rows in output idR','0');
INSERT DBColumns VALUES('Run','mjdRef','days','','','MJD at row 0 of reference frame','0');
INSERT DBColumns VALUES('Run','muRef','deg','','','mu value at row 0 of reference field','0');
INSERT DBColumns VALUES('Run','lineStart','microsec','','','linestart rate betweeen each (binned) row','0');
INSERT DBColumns VALUES('Run','tracking','arcsec/sec','','','tracking rate','0');
INSERT DBColumns VALUES('Run','node','','','','node of great circle, that is, its RA on the J2000 equator','0');
INSERT DBColumns VALUES('Run','incl','','','','inclination of great circle relative to J2000 equator','0');
INSERT DBColumns VALUES('Run','comments','','','','comments on the run','0');
INSERT DBColumns VALUES('Run','qterm','arcsec/hr^2','','','quadratic term in coarse astrometric solution','0');
INSERT DBColumns VALUES('Run','maxMuResid','arcsec','','','maximum residual from great circle in scan direction','0');
INSERT DBColumns VALUES('Run','maxNuResid','arcsec','','','maximum residual from great circle perpendicular to scan direction','0');
INSERT DBColumns VALUES('Run','startField','','','','starting field for reduced data','0');
INSERT DBColumns VALUES('Run','endField','','','','ending field for reduced data','0');
INSERT DBColumns VALUES('Run','photoVersion','','','','photo version used','0');
INSERT DBColumns VALUES('Run','dervishVersion','','','','dervish version used','0');
INSERT DBColumns VALUES('Run','astromVersion','','','','astrom version used','0');
INSERT DBColumns VALUES('Run','sasVersion','','','','version of SAS used to produce CSV for this run','0');
INSERT DBColumns VALUES('PhotoProfile','bin','','ID_NUMBER','','bin number (0..14)','0');
INSERT DBColumns VALUES('PhotoProfile','band','','ID_NUMBER','','u,g,r,i,z (0..4)','0');
INSERT DBColumns VALUES('PhotoProfile','profMean','nanomaggies/arcsec^2','PHOT_FLUX_OPTICAL','','Mean flux in annulus','0');
INSERT DBColumns VALUES('PhotoProfile','profErr','nanomaggies/arcsec^2','ERROR PHOT_FLUX_OPTICAL','','Standard deviation of mean pixel flux in annulus','0');
INSERT DBColumns VALUES('PhotoProfile','objID','','ID_MAIN','','links to the photometric object','0');
INSERT DBColumns VALUES('Mask','maskID','','ID_CATALOG','','Unique Id number, composed of skyversion, rerun, run, camcol, field, filter, mask','0');
INSERT DBColumns VALUES('Mask','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('Mask','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('Mask','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('Mask','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('Mask','mask','','ID_NUMBER','','The object id within a field. Usually changes between reruns of the same field.','0');
INSERT DBColumns VALUES('Mask','filter','','INST_ID','','The enumerated filter [0..4]','0');
INSERT DBColumns VALUES('Mask','ra','deg','POS_EQ_RA_MAIN','','J2000 right ascension (r'')','0');
INSERT DBColumns VALUES('Mask','dec','deg','POS_EQ_DEC_MAIN','','J2000 declination (r'')','0');
INSERT DBColumns VALUES('Mask','radius','deg','EXTENSION_RAD','','the radius of the bounding circle','0');
INSERT DBColumns VALUES('Mask','area','','EXTENSION','','Area descriptor for the mask object','0');
INSERT DBColumns VALUES('Mask','type','','CLASS_CODE','MaskType','enumerated type of mask','0');
INSERT DBColumns VALUES('Mask','seeing','arcsecs','INST_SEEING','','seeing width','0');
INSERT DBColumns VALUES('Mask','cx','','POS_EQ_CART_X','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('Mask','cy','','POS_EQ_CART_y','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('Mask','cz','','POS_EQ_CART_Z','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('Mask','htmID','','CODE_HTM','','20-deep hierarchical trangular mesh ID of this object','0');
INSERT DBColumns VALUES('MaskedObject','objid','','ID_MAIN','','pointer to a PhotoObj','0');
INSERT DBColumns VALUES('MaskedObject','maskID','','ID_CATALOG','','Unique maskid','0');
INSERT DBColumns VALUES('MaskedObject','maskType','','CLASS_CODE','MaskType','enumerated type of mask','0');
INSERT DBColumns VALUES('AtlasOutline','objID','','ID_MAIN','','Unique Id number, composed of rerun, run, camcol, field, objid','0');
INSERT DBColumns VALUES('AtlasOutline','size','','NUMBER','','number of spans allocated','0');
INSERT DBColumns VALUES('AtlasOutline','nspan','','NUMBER','','actual number of spans','0');
INSERT DBColumns VALUES('AtlasOutline','row0','','POS_OFFSET','','row offset from parent region','0');
INSERT DBColumns VALUES('AtlasOutline','col0','','POS_OFFSET','','col offset from parent region','0');
INSERT DBColumns VALUES('AtlasOutline','rmin','pix','POS_LIMIT','','bounding box min row','0');
INSERT DBColumns VALUES('AtlasOutline','rmax','pix','POS_LIMIT','','bounding box max row','0');
INSERT DBColumns VALUES('AtlasOutline','cmin','pix','POS_LIMIT','','bounding box min col','0');
INSERT DBColumns VALUES('AtlasOutline','cmax','pix','POS_LIMIT','','bounding box max col','0');
INSERT DBColumns VALUES('AtlasOutline','npix','pix','EXTENSION_AREA','','number of pixels in object','0');
INSERT DBColumns VALUES('AtlasOutline','span','','POS_MAP','','span data as string','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','dr7objID','','ID_MAIN','','Unique DR7 identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','dr8objID','','ID_MAIN','','Unique DR8 identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','distance','','','','Distance in arcmin between the DR7 and DR8 positions','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','skyVersion','','CODE_MISC','','0 = OPDB target, 1 = OPDB best','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','obj','','ID_NUMBER','','The object id within a field. Usually changes between reruns of the same field.','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','nChild','','NUMBER','','Number of children if this is a composite object that has been deblended. BRIGHT (in a flags sense) objects also have nchild == 1, the non-BRIGHT sibling.','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','type','','CLASS_OBJECT','PhotoType','Morphological type classification of the object.','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','probPSF','','STAT_PROBABILITY','','Probability that the object is a star. Currently 0 if type == 3 (galaxy), 1 if type == 6 (star).','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','insideMask','','CODE_MISC','InsideMask','Flag to indicate whether object is inside a mask and why','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','flags','','CODE_MISC','PhotoFlags','Photo Object Attribute Flags','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMag_u','mag','PHOT_SDSS_U','','PSF flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMag_g','mag','PHOT_SDSS_G','','PSF flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMag_r','mag','PHOT_SDSS_R','','PSF flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMag_i','mag','PHOT_SDSS_I','','PSF flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMag_z','mag','PHOT_SDSS_Z','','PSF flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMagErr_u','mag','PHOT_SDSS_U ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMagErr_g','mag','PHOT_SDSS_G ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMagErr_r','mag','PHOT_SDSS_R ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMagErr_i','mag','PHOT_SDSS_I ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','psfMagErr_z','mag','PHOT_SDSS_Z ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMag_u','mag','PHOT_SDSS_U','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMag_g','mag','PHOT_SDSS_G','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMag_r','mag','PHOT_SDSS_R','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMag_i','mag','PHOT_SDSS_I','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMag_z','mag','PHOT_SDSS_Z','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMagErr_u','mag','PHOT_SDSS_U ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMagErr_g','mag','PHOT_SDSS_G ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMagErr_r','mag','PHOT_SDSS_R ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMagErr_i','mag','PHOT_SDSS_I ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroMagErr_z','mag','PHOT_SDSS_Z ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroR50_r','arcsec','EXTENSION_RAD','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','petroR90_r','arcsec','EXTENSION_RAD','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMag_u','mag','PHOT_SDSS_U FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMag_g','mag','PHOT_SDSS_G FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMag_r','mag','PHOT_SDSS_R FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMag_i','mag','PHOT_SDSS_I FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMag_z','mag','PHOT_SDSS_Z FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMagErr_u','mag','PHOT_SDSS_U ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMagErr_g','mag','PHOT_SDSS_G ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMagErr_r','mag','PHOT_SDSS_R ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMagErr_i','mag','PHOT_SDSS_I ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','modelMagErr_z','mag','PHOT_SDSS_Z ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','mRrCc_r','','FIT_PARAM','','Adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','mRrCcErr_r','','FIT_PARAM ERROR','','Error in adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','lnLStar_r','','FIT_GOODNESS','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','lnLExp_r','','FIT_GOODNESS','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','lnLDeV_r','','FIT_GOODNESS','','DeVaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','status','','CODE_MISC','PhotoStatus','Status of the object in the survey','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','ra','deg','POS_EQ_RA_MAIN','','J2000 right ascension (r'')','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','dec','deg','POS_EQ_DEC_MAIN','','J2000 declination (r'')','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','cx','','POS_EQ_CART_X','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','cy','','POS_EQ_CART_Y','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','cz','','POS_EQ_CART_Z','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','primTarget','','CODE_MISC','PrimTarget','Bit mask of primary target categories the object was selected in.','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','secTarget','','CODE_MISC','SecTarget','Bit mask of secondary target categories the object was selected in.','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','extinction_u','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','extinction_g','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','extinction_r','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','extinction_i','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','extinction_z','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','htmID','','CODE_HTM','','20-deep hierarchical trangular mesh ID of this object','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','fieldID','','ID_FIELD','','Link to the field this object is in','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','specObjID','','ID_CATALOG','','Pointer to the spectrum of object, if exists, else 0','0');
INSERT DBColumns VALUES('PhotoPrimaryDR7','size','','','','computed: =SQRT(mRrCc_r/2.0)','0');
INSERT DBColumns VALUES('PhotoObjDR7','dr7objID','','ID_MAIN','','Unique DR7 identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('PhotoObjDR7','dr8objID','','ID_MAIN','','Unique DR8 identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('PhotoObjDR7','distance','','','','Distance in arcmin between the DR7 and DR8 positions','0');
INSERT DBColumns VALUES('PhotoObjDR7','modeDR7','','CLASS_OBJECT','','DR7 mode, 1: primary, 2: secondary, 3: family object.','0');
INSERT DBColumns VALUES('PhotoObjDR7','modeDR8','','CLASS_OBJECT','','DR8 mode, 1: primary, 2: secondary, 3: family object.','0');
INSERT DBColumns VALUES('PhotoObjDR7','skyVersion','','CODE_MISC','','0 = OPDB target, 1 = OPDB best','0');
INSERT DBColumns VALUES('PhotoObjDR7','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('PhotoObjDR7','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('PhotoObjDR7','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('PhotoObjDR7','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('PhotoObjDR7','obj','','ID_NUMBER','','The object id within a field. Usually changes between reruns of the same field.','0');
INSERT DBColumns VALUES('PhotoObjDR7','nChild','','NUMBER','','Number of children if this is a composite object that has been deblended. BRIGHT (in a flags sense) objects also have nchild == 1, the non-BRIGHT sibling.','0');
INSERT DBColumns VALUES('PhotoObjDR7','type','','CLASS_OBJECT','PhotoType','Morphological type classification of the object.','0');
INSERT DBColumns VALUES('PhotoObjDR7','probPSF','','STAT_PROBABILITY','','Probability that the object is a star. Currently 0 if type == 3 (galaxy), 1 if type == 6 (star).','0');
INSERT DBColumns VALUES('PhotoObjDR7','insideMask','','CODE_MISC','InsideMask','Flag to indicate whether object is inside a mask and why','0');
INSERT DBColumns VALUES('PhotoObjDR7','flags','','CODE_MISC','PhotoFlags','Photo Object Attribute Flags','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMag_u','mag','PHOT_SDSS_U','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMag_g','mag','PHOT_SDSS_G','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMag_r','mag','PHOT_SDSS_R','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMag_i','mag','PHOT_SDSS_I','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMag_z','mag','PHOT_SDSS_Z','','PSF flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMagErr_u','mag','PHOT_SDSS_U ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMagErr_g','mag','PHOT_SDSS_G ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMagErr_r','mag','PHOT_SDSS_R ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMagErr_i','mag','PHOT_SDSS_I ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','psfMagErr_z','mag','PHOT_SDSS_Z ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMag_u','mag','PHOT_SDSS_U','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMag_g','mag','PHOT_SDSS_G','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMag_r','mag','PHOT_SDSS_R','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMag_i','mag','PHOT_SDSS_I','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMag_z','mag','PHOT_SDSS_Z','','Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMagErr_u','mag','PHOT_SDSS_U ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMagErr_g','mag','PHOT_SDSS_G ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMagErr_r','mag','PHOT_SDSS_R ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMagErr_i','mag','PHOT_SDSS_I ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroMagErr_z','mag','PHOT_SDSS_Z ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroR50_r','arcsec','EXTENSION_RAD','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','petroR90_r','arcsec','EXTENSION_RAD','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMag_u','mag','PHOT_SDSS_U FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMag_g','mag','PHOT_SDSS_G FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMag_r','mag','PHOT_SDSS_R FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMag_i','mag','PHOT_SDSS_I FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMag_z','mag','PHOT_SDSS_Z FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMagErr_u','mag','PHOT_SDSS_U ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMagErr_g','mag','PHOT_SDSS_G ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMagErr_r','mag','PHOT_SDSS_R ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMagErr_i','mag','PHOT_SDSS_I ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjDR7','modelMagErr_z','mag','PHOT_SDSS_Z ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('PhotoObjDR7','mRrCc_r','','FIT_PARAM','','Adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('PhotoObjDR7','mRrCcErr_r','','FIT_PARAM ERROR','','Error in adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('PhotoObjDR7','lnLStar_r','','FIT_GOODNESS','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjDR7','lnLExp_r','','FIT_GOODNESS','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjDR7','lnLDeV_r','','FIT_GOODNESS','','DeVaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('PhotoObjDR7','status','','CODE_MISC','PhotoStatus','Status of the object in the survey','0');
INSERT DBColumns VALUES('PhotoObjDR7','ra','deg','POS_EQ_RA_MAIN','','J2000 right ascension (r'')','0');
INSERT DBColumns VALUES('PhotoObjDR7','dec','deg','POS_EQ_DEC_MAIN','','J2000 declination (r'')','0');
INSERT DBColumns VALUES('PhotoObjDR7','cx','','POS_EQ_CART_X','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjDR7','cy','','POS_EQ_CART_Y','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjDR7','cz','','POS_EQ_CART_Z','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('PhotoObjDR7','primTarget','','CODE_MISC','PrimTarget','Bit mask of primary target categories the object was selected in.','0');
INSERT DBColumns VALUES('PhotoObjDR7','secTarget','','CODE_MISC','SecTarget','Bit mask of secondary target categories the object was selected in.','0');
INSERT DBColumns VALUES('PhotoObjDR7','extinction_u','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoObjDR7','extinction_g','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoObjDR7','extinction_r','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoObjDR7','extinction_i','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoObjDR7','extinction_z','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('PhotoObjDR7','htmID','','CODE_HTM','','20-deep hierarchical trangular mesh ID of this object','0');
INSERT DBColumns VALUES('PhotoObjDR7','fieldID','','ID_FIELD','','Link to the field this object is in','0');
INSERT DBColumns VALUES('PhotoObjDR7','specObjID','','ID_CATALOG','','Pointer to the spectrum of object, if exists, else 0','0');
INSERT DBColumns VALUES('PhotoObjDR7','size','','','','computed: =SQRT(mRrCc_r/2.0)','0');
INSERT DBColumns VALUES('TwoMass','objID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('TwoMass','ra','deg','','','2MASS right ascension, J2000','0');
INSERT DBColumns VALUES('TwoMass','dec','deg','','','2MASS declination, J2000','0');
INSERT DBColumns VALUES('TwoMass','errMaj','arcsec','','','Semi-major axis length of the one sigma position uncertainty ellipse','0');
INSERT DBColumns VALUES('TwoMass','errMin','arcsec','','','Semi-minor axis length of the one sigma position uncertainty ellipse','0');
INSERT DBColumns VALUES('TwoMass','errAng','deg','','','Position angle on the sky of the semi-major axis of the position uncertainty ellipse (East of North)','0');
INSERT DBColumns VALUES('TwoMass','j','mag','','','default J-band apparent magnitude (Vega relative, no Galactic extinction correction','0');
INSERT DBColumns VALUES('TwoMass','jIvar','inverse mag^2','','','inverse variance in J-band apparent magnitude','0');
INSERT DBColumns VALUES('TwoMass','h','mag','','','default H-band apparent magnitude (Vega relative, no Galactic extinction correction','0');
INSERT DBColumns VALUES('TwoMass','hIvar','inverse mag^2','','','inverse variance in H-band apparent magnitude','0');
INSERT DBColumns VALUES('TwoMass','k','mag','','','default K-band apparent magnitude (Vega relative, no Galactic extinction correction','0');
INSERT DBColumns VALUES('TwoMass','kIvar','inverse mag^2','','','inverse variance in K-band apparent magnitude','0');
INSERT DBColumns VALUES('TwoMass','phQual','','','','photometric quality flag (see 2MASS PSC documentation)','0');
INSERT DBColumns VALUES('TwoMass','rdFlag','','','','Read flag. Three character flag, one character per band [JHKs], that indicates the origin of the default magnitudes and uncertainties in each band (see 2MASS PSC documentation)','0');
INSERT DBColumns VALUES('TwoMass','blFlag','','','','Blend flag. Three character flag, one character per band [JHKs], that indicates the number of components that were fit simultaneously when estimating the brightness of a source (see 2MASS PSC documentation)','0');
INSERT DBColumns VALUES('TwoMass','ccFlag','','','','Contamination and confusion flag. Three character flag, one character per band [JHKs], that indicates that the photometry and/or position measurements of a source may be contaminated or biased due to proximity to an image artifact or nearby source of equal or greater brightness. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMass','nDetectJ','','','','Number of frames on which 2MASS source was detected in J-band','0');
INSERT DBColumns VALUES('TwoMass','nDetectH','','','','Number of frames on which 2MASS source was detected in H-band','0');
INSERT DBColumns VALUES('TwoMass','nDetectK','','','','Number of frames on which 2MASS source was detected in K-band','0');
INSERT DBColumns VALUES('TwoMass','nObserveJ','','','','Number of frames which 2MASS source was within the boundaries of in J-band','0');
INSERT DBColumns VALUES('TwoMass','nObserveH','','','','Number of frames which 2MASS source was within the boundaries of in H-band','0');
INSERT DBColumns VALUES('TwoMass','nObserveK','','','','Number of frames which 2MASS source was within the boundaries of in K-band','0');
INSERT DBColumns VALUES('TwoMass','galContam','','','','Extended source "contamination" flag. A value of gal_contam="0" indicates no contamination. "1" indicates it is probably an extended source itself (this does not detect all such cases!).  "2" indicates it is within the boundary of a large XSC source. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMass','mpFlag','','','','Minor planet flag. "1" if source associated with known solar system object, "0" otherwise. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMass','ptsKey','','','','Unique identification number for the PSC source.','0');
INSERT DBColumns VALUES('TwoMass','hemis','','','','Hemisphere code for the 2MASS Observatory from which this source was observed.  "n" means North (Mt. Hopkins); "s" means South (CTIO).','0');
INSERT DBColumns VALUES('TwoMass','jDate','','','','Julian Date of the source measurement accurate to +30 seconds. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMass','dupSource','','','','Duplicate source flag. Used in conjunction with the use_src flag, this numerical flag indicates whether the source falls in a Tile overlap region, and if so, if it was detected multiple times. (See 2MASS PSC documentation)','0');
INSERT DBColumns VALUES('TwoMass','useSource','','','','Use source flag. Used in conjunction with the dup_src flag, this numerical flag indicates if a source falls within a Tile overlap region, and whether or not it satisfies the unbiased selection rules for multiple source resolution. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMassXSC','objID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('TwoMassXSC','tmassxsc_ra','deg','','','2MASS right ascension, J2000','0');
INSERT DBColumns VALUES('TwoMassXSC','tmassxsc_dec','deg','','','2MASS declination, J2000','0');
INSERT DBColumns VALUES('TwoMassXSC','jDate','','','','Julian Date of the source measurement accurate to +30 seconds. (See 2MASS PSC documentation).','0');
INSERT DBColumns VALUES('TwoMassXSC','designation','','','','Sexagesimal, equatorial position-based source name in the form: hhmmssss+ddmmsss[ABC...].','0');
INSERT DBColumns VALUES('TwoMassXSC','sup_ra','','','','Super-coadd centroid RA (J2000 decimal deg).','0');
INSERT DBColumns VALUES('TwoMassXSC','sup_dec','','','','Super-coadd centroid Dec (J2000 decimal deg).','0');
INSERT DBColumns VALUES('TwoMassXSC','density','','','','Coadd log(density) of stars with k&lt;14 mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_K20FE','mag','','','20mag/sq arcsec isophotal K fiducial ell. ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_K20FE','mag','','','J 20mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_K20FE','mag','','','J 1-sigma uncertainty in 20mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_K20FE','','','','J confusion flag for 20mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_K20FE','mag','','','H 20mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_K20FE','mag','','','H 1-sigma uncertainty in 20mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_K20FE','','','','H confusion flag for 20mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_K20FE','mag','','','K 20mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_K20FE','mag','','','K 1-sigma uncertainty in 20mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_K20FE','','','','K confusion flag for 20mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_3SIG','arcsec','','','3-sigma K isophotal semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BA','','','','J minor/major axis ratio fit to the 3-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_PHI','deg','','','J angle to 3-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BA','','','','H minor/major axis ratio fit to the 3-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_PHI','deg','','','H angle to 3-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BA','','','','K minor/major axis ratio fit to the 3-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_PHI','deg','','','K angle to 3-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','SUP_R_3SIG','','','','Super-coadd minor/major axis ratio fit to the 3-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','SUP_BA','','','','K minor/major axis ratio fit to the 3-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','SUP_PHI','deg','','','K angle to 3-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','R_FE','','','','K fiducial Kron elliptical aperture semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_FE','mag','','','J fiducial Kron elliptical aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_FE','mag','','','J 1-sigma uncertainty in fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_FE','','','','J confusion flag for fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_FE','mag','','','H fiducial Kron elliptical aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_FE','mag','','','H 1-sigma uncertainty in fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_FE','','','','H confusion flag for fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_FE','mag','','','K fiducial Kron elliptical aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_FE','mag','','','K 1-sigma uncertainty in fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_FE','','','','K confusion flag for fiducial Kron ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_EXT','arcsec','','','extrapolation/total radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_EXT','mag','','','J mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_EXT','mag','','','J 1-sigma uncertainty in mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_PCHI','','','','J chi^2 of fit to rad. profile','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_EXT','mag','','','H mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_EXT','mag','','','H 1-sigma uncertainty in mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_PCHI','','','','H chi^2 of fit to rad. profile','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_EXT','mag','','','K mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_EXT','mag','','','K 1-sigma uncertainty in mag from fit extrapolation.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_PCHI','','','','K chi^2 of fit to rad. profile','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_EFF','arcsec','','','J half-light (integrated half-flux point) radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MNSURFB_EFF','mag/sq. arcsec','','','J mean surface brightness at the half-light radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_EFF','arcsec','','','H half-light (integrated half-flux point) radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MNSURFB_EFF','mag/sq. arcsec','','','H mean surface brightness at the half-light radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_EFF','arcsec','','','K half-light (integrated half-flux point) radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MNSURFB_EFF','mag/sq. arcsec','','','K mean surface brightness at the half-light radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_CON_INDX','','','','J concentration index r_75%/r_25%.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_CON_INDX','','','','H concentration index r_75%/r_25%.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_CON_INDX','','','','K concentration index r_75%/r_25%.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_PEAK','mag/sq. arcsec','','','J peak pixel brightness.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_PEAK','mag/sq. arcsec','','','H peak pixel brightness.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_PEAK','mag/sq. arcsec','','','K peak pixel brightness.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_5SURF','mag/sq. arcsec','','','J central surface brightness (r&lt;=5).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_5SURF','mag/sq. arcsec','','','H central surface brightness (r&lt;=5).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_5SURF','mag/sq. arcsec','','','K central surface brightness (r&lt;=5).','0');
INSERT DBColumns VALUES('TwoMassXSC','E_SCORE','','','','extended score: 1(extended) &lt; e_score &lt; 2(point-like).','0');
INSERT DBColumns VALUES('TwoMassXSC','G_SCORE','','','','galaxy score: 1(extended) &lt; g_score &lt; 2(point-like).','0');
INSERT DBColumns VALUES('TwoMassXSC','VC','','','','visual verification score for source.','0');
INSERT DBColumns VALUES('TwoMassXSC','CC_FLG','','','','indicates artifact contamination and/or confusion.','0');
INSERT DBColumns VALUES('TwoMassXSC','IM_NX','','','','size of postage stamp image in pixels.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_K20FC','arcsec','','','20mag/sq arcsec isophotal K fiducial circular ap. radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_K20FC','mag','','','J 20mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_K20FC','mag','','','J 1-sigma uncertainty in 20mag/sq arcsec iso.fid.circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_K20FC','','','','J confusion flag for 20mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_K20FC','mag','','','H 20mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_K20FC','mag','','','H 1-sigma uncertainty in 20mag/sq arcsec iso.fid.circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_K20FC','','','','H confusion flag for 20mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_K20FC','mag','','','K 20mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_K20FC','mag','','','K 1-sigma uncertainty in 20mag/sq arcsec iso.fid.circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_K20FC','','','','K confusion flag for 20mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_E','arcsec','','','J Kron elliptical aperture semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_E','mag','','','J Kron elliptical aperture magnitude','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_E','mag','','','J 1-sigma uncertainty in Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_E','','','','J confusion flag for Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_E','arcsec','','','H Kron elliptical aperture semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_E','mag','','','H Kron elliptical aperture magnitude','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_E','mag','','','H 1-sigma uncertainty in Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_E','','','','H confusion flag for Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_E','arcsec','','','K Kron elliptical aperture semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_E','mag','','','K Kron elliptical aperture magnitude','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_E','mag','','','K 1-sigma uncertainty in Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_E','','','','K confusion flag for Kron elliptical mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_C','arcsec','','','J Kron circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_C','mag','','','J Kron circular aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_C','mag','','','J 1-sigma uncertainty in Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_C','','','','J confusion flag for Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_C','arcsec','','','H Kron circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_C','mag','','','H Kron circular aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_C','mag','','','H 1-sigma uncertainty in Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_C','','','','H confusion flag for Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_C','arcsec','','','K Kron circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_C','mag','','','K Kron circular aperture magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_C','mag','','','K 1-sigma uncertainty in Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_C','','','','K confusion flag for Kron circular mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_FC','arcsec','','','K fiducial Kron circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_FC','mag','','','J fiducial Kron circular magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_FC','mag','','','J 1-sigma uncertainty in fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_FC','','','','J confusion flag for Kron circular mag. confusion flag for fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_FC','mag','','','H fiducial Kron circular magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_FC','mag','','','H 1-sigma uncertainty in fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_FC','','','','H confusion flag for Kron circular mag. confusion flag for fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_FC','mag','','','K fiducial Kron circular magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_FC','mag','','','K 1-sigma uncertainty in fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_FC','','','','K confusion flag for Kron circular mag. confusion flag for fiducial Kron circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_I20E','arcsec','','','J 20mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_I20E','mag','','','J 20mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_I20E','mag','','','J 1-sigma uncertainty in 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_I20E','','','','J confusion flag for 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_I20E','arcsec','','','H 20mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_I20E','mag','','','H 20mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_I20E','mag','','','H 1-sigma uncertainty in 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_I20E','','','','H confusion flag for 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_I20E','arcsec','','','K 20mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_I20E','mag','','','K 20mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_I20E','mag','','','K 1-sigma uncertainty in 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_I20E','','','','K confusion flag for 20mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_I20C','arcsec','','','J 20mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_I20C','mag','','','J 20mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_I20C','mag','','','J 1-sigma uncertainty in 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_I20C','','','','J confusion flag for 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_I20C','arcsec','','','H 20mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_I20C','mag','','','H 20mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_I20C','mag','','','H 1-sigma uncertainty in 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_I20C','','','','H confusion flag for 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_I20C','arcsec','','','K 20mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_I20C','mag','','','K 20mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_I20C','mag','','','K 1-sigma uncertainty in 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_I20C','','','','K confusion flag for 20mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_I21E','arcsec','','','J 21mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_I21E','mag','','','J 21mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_I21E','mag','','','J 1-sigma uncertainty in 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_I21E','','','','J confusion flag for 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_I21E','arcsec','','','H 21mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_I21E','mag','','','H 21mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_I21E','mag','','','H 1-sigma uncertainty in 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_I21E','','','','H confusion flag for 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_I21E','arcsec','','','K 21mag/sq arcsec isophotal elliptical ap. semi-major axis.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_I21E','mag','','','K 21mag/sq arcsec isophotal elliptical ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_I21E','mag','','','K 1-sigma uncertainty in 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_I21E','','','','K confusion flag for 21mag/sq arcsec iso. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_J21FE','','','','','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_J21FE','mag','','','J 21mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_J21FE','mag','','','J 1-sigma uncertainty in 21mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_J21FE','','','','J confusion flag for 21mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_J21FE','mag','','','H 21mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_J21FE','mag','','','H 1-sigma uncertainty in 21mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_J21FE','','','','H confusion flag for 21mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_J21FE','mag','','','K 21mag/sq arcsec isophotal fiducial ell. ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_J21FE','mag','','','K 1-sigma uncertainty in 21mag/sq arcsec iso.fid.ell.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_J21FE','','','','K confusion flag for 21mag/sq arcsec iso. fid. ell. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_R_I21C','arcsec','','','J 21mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_I21C','mag','','','J 21mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_I21C','mag','','','J 1-sigma uncertainty in 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_I21C','','','','J confusion flag for 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_R_I21C','arcsec','','','H 21mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_I21C','mag','','','H 21mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_I21C','mag','','','H 1-sigma uncertainty in 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_I21C','','','','H confusion flag for 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_R_I21C','arcsec','','','K 21mag/sq arcsec isophotal circular aperture radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_I21C','mag','','','K 21mag/sq arcsec isophotal circular ap. magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_I21C','mag','','','K 1-sigma uncertainty in 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_I21C','','','','K confusion flag for 21mag/sq arcsec iso. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','R_J21FC','arcsec','','','21mag/sq arcsec isophotal J fiducial circular ap. radius.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_J21FC','mag','','','J 21mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_J21FC','mag','','','J 1-sigma uncertainty in 21mag/sq arcsec iso.fid.circ.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_J21FC','','','','J confusion flag for 21mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_J21FC','mag','','','H 21mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_J21FC','mag','','','H 1-sigma uncertainty in 21mag/sq arcsec iso.fid.circ.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_J21FC','','','','H confusion flag for 21mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_J21FC','mag','','','K 21mag/sq arcsec isophotal fiducial circ. ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_J21FC','mag','','','K 1-sigma uncertainty in 21mag/sq arcsec iso.fid.circ.mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_J21FC','','','','K confusion flag for 21mag/sq arcsec iso. fid. circ. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_SYS','mag','','','J system photometry magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_SYS','mag','','','J 1-sigma uncertainty in system photometry mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_SYS','mag','','','H system photometry magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_SYS','mag','','','H 1-sigma uncertainty in system photometry mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_SYS','mag','','','K system photometry magnitude.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_SYS','mag','','','K 1-sigma uncertainty in system photometry mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','SYS_FLG','','','','system flag: 0=no system, 1=nearby galaxy flux incl. in mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','CONTAM_FLG','','','','contamination flag: 0=no stars, 1=stellar flux incl. in mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_5SIG_BA','','','','J minor/major axis ratio fit to the 5-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_5SIG_PHI','deg','','','J angle to 5-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_5SIG_BA','','','','H minor/major axis ratio fit to the 5-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_5SIG_PHI','deg','','','H angle to 5-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_5SIG_BA','','','','K minor/major axis ratio fit to the 5-sigma isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_5SIG_PHI','deg','','','K angle to 5-sigma major axis (E of N).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_D_AREA','sq arcsec','','','J 5-sigma to 3-sigma differential area.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_PERC_DAREA','sq arcsec','','','J 5-sigma to 3-sigma percent area change.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_D_AREA','sq arcsec','','','H 5-sigma to 3-sigma differential area.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_PERC_DAREA','sq arcsec','','','H 5-sigma to 3-sigma percent area change.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_D_AREA','sq arcsec','','','K 5-sigma to 3-sigma differential area.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_PERC_DAREA','sq arcsec','','','K 5-sigma to 3-sigma percent area change.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BISYM_RAT','','','','J bi-symmetric flux ratio.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BISYM_CHI','','','','J bi-symmetric cross-correlation chi.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BISYM_RAT','','','','H bi-symmetric flux ratio.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BISYM_CHI','','','','H bi-symmetric cross-correlation chi.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BISYM_RAT','','','','K bi-symmetric flux ratio.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BISYM_CHI','','','','K bi-symmetric cross-correlation chi.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SH0','','','','J ridge shape (LCSB: BSNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SIG_SH0','','','','J ridge shape sigma (LCSB: B2SNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SH0','','','','H ridge shape (LCSB: BSNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SIG_SH0','','','','H ridge shape sigma (LCSB: B2SNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SH0','','','','K ridge shape (LCSB: BSNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SIG_SH0','','','','K ridge shape sigma (LCSB: B2SNR limit).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_MXDN','','','','J mxdn (score) (LCSB: BSNR - block/smoothed SNR)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_SH','','','','J shape (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_WSH','','','','J wsh (score) (LCSB: PSNR - peak raw SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_R23','','','','J r23 (score) (LCSB: TSNR - integrated SNR for r=15).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_1MM','','','','J 1st moment (score) (LCSB: super blk 2,4,8 SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_2MM','','','','J 2nd moment (score) (LCSB: SNRMAX - super SNR max).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_VINT','','','','J vint (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_R1','','','','J r1 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SC_MSH','','','','J median shape score.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_MXDN','','','','H mxdn (score) (LCSB: BSNR - block/smoothed SNR)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_SH','','','','H shape (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_WSH','','','','H wsh (score) (LCSB: PSNR - peak raw SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_R23','','','','H r23 (score) (LCSB: TSNR - integrated SNR for r=15).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_1MM','','','','H 1st moment (score) (LCSB: super blk 2,4,8 SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_2MM','','','','H 2nd moment (score) (LCSB: SNRMAX - super SNR max).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_VINT','','','','H vint (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_R1','','','','H r1 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SC_MSH','','','','H median shape score.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_MXDN','','','','K mxdn (score) (LCSB: BSNR - block/smoothed SNR)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_SH','','','','K shape (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_WSH','','','','K wsh (score) (LCSB: PSNR - peak raw SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_R23','','','','K r23 (score) (LCSB: TSNR - integrated SNR for r=15).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_1MM','','','','K 1st moment (score) (LCSB: super blk 2,4,8 SNR).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_2MM','','','','K 2nd moment (score) (LCSB: SNRMAX - super SNR max).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_VINT','','','','K vint (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_R1','','','','K r1 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SC_MSH','','','','K median shape score.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_CHIF_ELLF','','','','J % chi-fraction for elliptical fit to 3-sig isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_CHIF_ELLF','','','','K % chi-fraction for elliptical fit to 3-sig isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','ELLFIT_FLG','','','','ellipse fitting contamination flag.','0');
INSERT DBColumns VALUES('TwoMassXSC','SUP_CHIF_ELLF','','','','super-coadd % chi-fraction for ellip. fit to 3-sig isophote.','0');
INSERT DBColumns VALUES('TwoMassXSC','N_BLANK','','','','number of blanked source records.','0');
INSERT DBColumns VALUES('TwoMassXSC','N_SUB','','','','number of subtracted source records.','0');
INSERT DBColumns VALUES('TwoMassXSC','BL_SUB_FLG','','','','blanked/subtracted src description flag.','0');
INSERT DBColumns VALUES('TwoMassXSC','ID_FLG','','','','type/galaxy ID flag (0=non-catalog, 1=catalog, 2=LCSB).','0');
INSERT DBColumns VALUES('TwoMassXSC','ID_CAT','','','','matched galaxy catalog name.','0');
INSERT DBColumns VALUES('TwoMassXSC','FG_FLG','','','','flux-growth convergence flag.','0');
INSERT DBColumns VALUES('TwoMassXSC','BLK_FAC','','','','LCSB blocking factor (1, 2, 4, 8).','0');
INSERT DBColumns VALUES('TwoMassXSC','DUP_SRC','','','','Duplicate source flag.','0');
INSERT DBColumns VALUES('TwoMassXSC','USE_SRC','','','','Use source flag.','0');
INSERT DBColumns VALUES('TwoMassXSC','PROX','arcsec','','','Proximity. The distance between this source and its nearest neighbor in the PSC.','0');
INSERT DBColumns VALUES('TwoMassXSC','PXPA','deg','','','The position angle on the sky of the vector from the source to the nearest neighbor in the PSC, East of North.','0');
INSERT DBColumns VALUES('TwoMassXSC','PXCNTR','','','','ext_key value of nearest XSC source.','0');
INSERT DBColumns VALUES('TwoMassXSC','DIST_EDGE_NS','','','','The distance from the source to the nearest North or South scan edge.','0');
INSERT DBColumns VALUES('TwoMassXSC','DIST_EDGE_EW','arcsec','','','The distance from the source to the nearest East or West scan edge.','0');
INSERT DBColumns VALUES('TwoMassXSC','DIST_EDGE_FLG','','','','flag indicating which edges ([n|s][e|w]) are nearest to src.','0');
INSERT DBColumns VALUES('TwoMassXSC','PTS_KEY','','','','key to point source data DB record.','0');
INSERT DBColumns VALUES('TwoMassXSC','MP_KEY','','','','key to minor planet prediction DB record.','0');
INSERT DBColumns VALUES('TwoMassXSC','NIGHT_KEY','','','','key to night data record in "scan DB".','0');
INSERT DBColumns VALUES('TwoMassXSC','SCAN_KEY','','','','key to scan data record in "scan DB".','0');
INSERT DBColumns VALUES('TwoMassXSC','COADD_KEY','','','','key to coadd data record in "scan DB".','0');
INSERT DBColumns VALUES('TwoMassXSC','HEMIS','','','','hemisphere (N/S) of observation. "n" = North/Mt. Hopkins; "s" = South/CTIO.','0');
INSERT DBColumns VALUES('TwoMassXSC','DATE','','','','The observation reference date for this source expressed in ISO standard format.','0');
INSERT DBColumns VALUES('TwoMassXSC','SCAN','','','','scan number (unique within date).','0');
INSERT DBColumns VALUES('TwoMassXSC','COADD','','','','3-digit coadd number (unique within scan).','0');
INSERT DBColumns VALUES('TwoMassXSC','X_COADD','pix','','','x (cross-scan) position (coadd coord.).','0');
INSERT DBColumns VALUES('TwoMassXSC','Y_COADD','pix','','','y (in-scan) position (coadd coord.).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SUBST2','','','','J residual background #2 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SUBST2','','','','H residual background #2 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SUBST2','','','','K residual background #2 (score).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BACK','mag/sq arcsec','','','J coadd median background.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BACK','mag/sq arcsec','','','H coadd median background.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BACK','mag/sq arcsec','','','K coadd median background.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_RESID_ANN','mag/sq arcsec','','','J residual annulus background median.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_RESID_ANN','mag/sq arcsec','','','H residual annulus background median.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_RESID_ANN','mag/sq arcsec','','','K residual annulus background median.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BNDG_PER','','','','J banding Fourier Transf. period on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_BNDG_AMP','','','','J banding maximum FT amplitude on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BNDG_PER','','','','H banding Fourier Transf. period on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_BNDG_AMP','','','','H banding maximum FT amplitude on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BNDG_PER','','','','K banding Fourier Transf. period on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_BNDG_AMP','','','','K banding maximum FT amplitude on this side of coadd.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_SEETRACK','','','','J band seetracking score.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_SEETRACK','','','','H band seetracking score.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_SEETRACK','','','','K band seetracking score.','0');
INSERT DBColumns VALUES('TwoMassXSC','EXT_KEY','','','','entry counter (key) number (unique within table).','0');
INSERT DBColumns VALUES('TwoMassXSC','TMASSXSC_ID','','','','source ID number (unique within scan, coadd).','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_5','mag','','','J-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_5','mag','','','error in J-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_5','','','','J confusion flag for 5 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_7','mag','','','J-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_7','mag','','','error in J-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_7','','','','J confusion flag for 7 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_10','mag','','','J-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_10','mag','','','error in J-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_10','','','','J confusion flag for 10 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_15','mag','','','J-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_15','mag','','','error in J-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_15','','','','J confusion flag for 15 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_20','mag','','','J-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_20','mag','','','error in J-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_20','','','','J confusion flag for 20 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_25','mag','','','J-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_25','mag','','','error in J-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_25','','','','J confusion flag for 25 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_30','mag','','','J-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_30','mag','','','error in J-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_30','','','','J confusion flag for 30 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_40','mag','','','J-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_40','mag','','','error in J-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_40','','','','J confusion flag for 40 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_50','mag','','','J-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_50','mag','','','error in J-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_50','','','','J confusion flag for 50 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_60','mag','','','J-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_60','mag','','','error in J-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_60','','','','J confusion flag for 60 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','J_M_70','mag','','','J-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_MSIG_70','mag','','','error in J-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','J_FLG_70','','','','J confusion flag for 70 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_5','mag','','','H-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_5','mag','','','error in H-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_5','','','','H confusion flag for 5 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_7','mag','','','H-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_7','mag','','','error in H-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_7','','','','H confusion flag for 7 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_10','mag','','','H-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_10','mag','','','error in H-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_10','','','','H confusion flag for 10 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_15','mag','','','H-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_15','mag','','','error in H-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_15','','','','H confusion flag for 15 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_20','mag','','','H-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_20','mag','','','error in H-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_20','','','','H confusion flag for 20 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_25','mag','','','H-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_25','mag','','','error in H-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_25','','','','H confusion flag for 25 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_30','mag','','','H-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_30','mag','','','error in H-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_30','','','','H confusion flag for 30 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_40','mag','','','H-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_40','mag','','','error in H-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_40','','','','H confusion flag for 40 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_50','mag','','','H-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_50','mag','','','error in H-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_50','','','','H confusion flag for 50 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_60','mag','','','H-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_60','mag','','','error in H-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_60','','','','H confusion flag for 60 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','H_M_70','mag','','','H-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_MSIG_70','mag','','','error in H-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','H_FLG_70','','','','H confusion flag for 70 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_5','mag','','','K-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_5','mag','','','error in K-band circular aperture magnitude (5 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_5','','','','K confusion flag for 5 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_7','mag','','','K-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_7','mag','','','error in K-band circular aperture magnitude (7 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_7','','','','K confusion flag for 7 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_10','mag','','','K-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_10','mag','','','error in K-band circular aperture magnitude (10 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_10','','','','K confusion flag for 10 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_15','mag','','','K-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_15','mag','','','error in K-band circular aperture magnitude (15 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_15','','','','K confusion flag for 15 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_20','mag','','','K-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_20','mag','','','error in K-band circular aperture magnitude (20 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_20','','','','K confusion flag for 20 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_25','mag','','','K-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_25','mag','','','error in K-band circular aperture magnitude (25 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_25','','','','K confusion flag for 25 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_30','mag','','','K-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_30','mag','','','error in K-band circular aperture magnitude (30 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_30','','','','K confusion flag for 30 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_40','mag','','','K-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_40','mag','','','error in K-band circular aperture magnitude (40 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_40','','','','K confusion flag for 40 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_50','mag','','','K-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_50','mag','','','error in K-band circular aperture magnitude (50 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_50','','','','K confusion flag for 50 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_60','mag','','','K-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_60','mag','','','error in K-band circular aperture magnitude (60 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_60','','','','K confusion flag for 60 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('TwoMassXSC','K_M_70','mag','','','K-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_MSIG_70','mag','','','error in K-band circular aperture magnitude (70 arcsec radius)','0');
INSERT DBColumns VALUES('TwoMassXSC','K_FLG_70','','','','K confusion flag for 70 arcsec circular ap. mag.','0');
INSERT DBColumns VALUES('FIRST','objID','','ID_MAIN','','unique id, points to photoObj','0');
INSERT DBColumns VALUES('FIRST','ra','deg','','','FIRST source right ascension, J2000','0');
INSERT DBColumns VALUES('FIRST','dec','deg','','','FIRST source declination, J2000','0');
INSERT DBColumns VALUES('FIRST','warning','','','','warning in FIRST catalog','0');
INSERT DBColumns VALUES('FIRST','peak','mJy','PHOT_FLUX_RADIO','','Peak FIRST radio flux','0');
INSERT DBColumns VALUES('FIRST','integr','mJy','PHOT_FLUX_RADIO','','Integrated FIRST radio flux','0');
INSERT DBColumns VALUES('FIRST','rms','mJy','PHOT_FLUX_RADIO ERROR','','rms error in flux','0');
INSERT DBColumns VALUES('FIRST','major','arcsec','EXTENSION_RAD','','Major axis (deconvolved)','0');
INSERT DBColumns VALUES('FIRST','minor','arcsec','EXTENSION_SMIN','','Minor axis (deconvolved)','0');
INSERT DBColumns VALUES('FIRST','pa','deg','POS_POS-ANG','','position angle (east of north)','0');
INSERT DBColumns VALUES('FIRST','skyrms','mJy','PHOT_FLUX_RADIO ERROR','','background rms error in flux','0');
INSERT DBColumns VALUES('RC3','objID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('RC3','RA','deg  -/D J2000 right ascension in RC3','','','','0');
INSERT DBColumns VALUES('RC3','DEC','deg  -/D J2000 declination in RC3','','','','0');
INSERT DBColumns VALUES('RC3','NAME1','','','','designation #1 (Names or NGC and IC)','0');
INSERT DBColumns VALUES('RC3','NAME2','','','','designation #2 (UGC, ESO, MCG, UGCA, CGCG)','0');
INSERT DBColumns VALUES('RC3','NAME3','','','','designation #3 (other)','0');
INSERT DBColumns VALUES('RC3','PGC','','','','Principal Galaxy Catalog number (Paturel et al. 1989)','0');
INSERT DBColumns VALUES('RC3','HUBBLE','','','','revised Hubble type, coded as in RC2 (Section 3.3.a, page 13).','0');
INSERT DBColumns VALUES('RC3','LOGD_25','','','','mean decimal logarithm of the apparent major isophotal diameter measured at or reduced to surface brightness level mu_B = 25.0 B-mag/arcsec^2, as explained in Section 3.4.a, page 21.  Unit of D is 0.1 arcmin to avoid negative entries.','0');
INSERT DBColumns VALUES('RC3','LOGD_25Q','','','','quality flag for isophotal diameter ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','LOGD_25ERR','','','','error on mean decimal logarithm of the apparent major isophotal diameter','0');
INSERT DBColumns VALUES('RC3','PA','deg','','','position angle (east of north)','0');
INSERT DBColumns VALUES('RC3','BT','mag','','','total (asymptotic) magnitude in the B system','0');
INSERT DBColumns VALUES('RC3','BT_S','','','','source code for BT','0');
INSERT DBColumns VALUES('RC3','BTQ','','','','quality flag total magnitude ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','BTERR','mag','','','error in total (asymptotic) magnitude in the B system','0');
INSERT DBColumns VALUES('RC3','BMVT','mag','','','total (asymptotic) color index in Johnson B-V','0');
INSERT DBColumns VALUES('RC3','BMVTQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','BMVTERR','mag','','','error in total (asymptotic) color index in Johnson B-V','0');
INSERT DBColumns VALUES('RC3','BMVE','mag','','','color index within effective aperture in Johnson B-V','0');
INSERT DBColumns VALUES('RC3','BMVEQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','BMVEERR','mag','','','error in color index within effective aperture in Johnson B-V','0');
INSERT DBColumns VALUES('RC3','M21','','','','21-cm emission line magnitude, defined by by m_21 = 21.6 - 2.5 log(S_H), where S_H is the measured neutral hydrogen flux density in units of 10^-24 W/m^2.','0');
INSERT DBColumns VALUES('RC3','M21Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','M21ERR','','','','error in 21-cm emission line magnitude','0');
INSERT DBColumns VALUES('RC3','V21','km/s','','','mean heliocentric radial velocity from HI observations','0');
INSERT DBColumns VALUES('RC3','V21Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','V21ERR','km/s','','','error in heliocentric radial velocity','0');
INSERT DBColumns VALUES('RC3','HUBBLE_SRC','','','','sources of revised type estimate','0');
INSERT DBColumns VALUES('RC3','N_L','','','','number of luminosity class estimates','0');
INSERT DBColumns VALUES('RC3','LOGR_25','','','','mean decimal logarithm of the ratio of the major isophotal diameter, D_25, to the minor isophotal diameter, d_25, measured at or reduced to the surface brightness level mu_B = 25.0 B-mag/arcsec^2.','0');
INSERT DBColumns VALUES('RC3','LOGR_25Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','LOGR_25ERR','','','','error in  decimal logarithm of the ratio of the major isophotal diameter to minor','0');
INSERT DBColumns VALUES('RC3','AGB','mag','','','Burstein-Heiles Galactic extinction in B','0');
INSERT DBColumns VALUES('RC3','MB','mag','','','photographic magnitude reduced to B_T system','0');
INSERT DBColumns VALUES('RC3','MBQ','mag','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','MBERR','mag','','','error in photograph magnitude','0');
INSERT DBColumns VALUES('RC3','UMBT','mag','','','total (asymptotic) color index in Johnson U-B','0');
INSERT DBColumns VALUES('RC3','UMBTQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','UMBTERR','mag','','','error in total (asymptotic) color index in Johnson U-B','0');
INSERT DBColumns VALUES('RC3','UMBE','mag','','','color index within effective aperture in Johnson U-B','0');
INSERT DBColumns VALUES('RC3','UMBEQ','','','','quality flag ("?" if bad),','0');
INSERT DBColumns VALUES('RC3','UMBEERR','mag','','','error in color index within effective aperture in Johnson U-B','0');
INSERT DBColumns VALUES('RC3','W20','km/s','','','neutral hydrogen line full width (in km/s) measured at the 20% level (I_20/I_max)','0');
INSERT DBColumns VALUES('RC3','W20Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','W20ERR','km/s','','','error in W20','0');
INSERT DBColumns VALUES('RC3','VOPT','km/s','','','mean heliocentric radial velocity from optical observations','0');
INSERT DBColumns VALUES('RC3','VOPTQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','VOPTERR','km/s','','','error in mean heliocentric radial velocity from optical observations','0');
INSERT DBColumns VALUES('RC3','SGL','deg','','','supergalactic longitude','0');
INSERT DBColumns VALUES('RC3','SGB','deg','','','supergalactic latitude','0');
INSERT DBColumns VALUES('RC3','TYPE','','','','T = mean numerical index of stage along the Hubble sequence in the RC2 system (coded as explained in Section 3.3.c, page 16)','0');
INSERT DBColumns VALUES('RC3','TYPEQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','TYPEERR','','','','error in T-type','0');
INSERT DBColumns VALUES('RC3','LOGA_E','','','','decimal logarithm of the apparent diameter (in 0.1 arcmin) of the ``effective aperture,'''' the circle centered on the nucleus within which one-half of the total B-band flux is emitted','0');
INSERT DBColumns VALUES('RC3','LOGA_EQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','LOGA_EERR','','','','error in decimal logarithm of the apparent diameter (in 0.1 arcmin)  of the ``effective aperture,''''','0');
INSERT DBColumns VALUES('RC3','AIB','mag','','','internal extinction (for correction to face-on), calcauled from size and T-type','0');
INSERT DBColumns VALUES('RC3','MFIR','','','','far-infrared magnitude calculated from m_FIR = - 20.0 - 2.5 logFIR, where FIR is the far infrared continuum flux measured at 60 and 100 microns as listed in the IRAS Point Source Catalog (1987).','0');
INSERT DBColumns VALUES('RC3','BMVT0','mag','','','total B-V color index corrected for Galactic and internal extinction, and for redshift','0');
INSERT DBColumns VALUES('RC3','MPE','mag/sq arcmin','','','mean B-band surface brightness in magnitudes per square arcmin (B-mag/arcmin^2) within the effective aperture A_e, and its mean error, as given by the relation MPE = B_T + 0.75 + 5logA_e - 5.26.','0');
INSERT DBColumns VALUES('RC3','MPEQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','MPEERR','mag/sq arcmin','','','error in  mean B-band surface brightness','0');
INSERT DBColumns VALUES('RC3','W50','km/s','','','neutral hydrogen line full width (in km/s) measured at the 50% level (I_20/I_max)','0');
INSERT DBColumns VALUES('RC3','W50Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','W50ERR','km/s','','','error in neutral hydrogen line full width (in km/s) measured at the 50% level (I_20/I_max)','0');
INSERT DBColumns VALUES('RC3','VGSR','km/s','','','the weighted mean of the neutral hydrogen and optical velocities, corrected to the ``Galactic standard of rest''''','0');
INSERT DBColumns VALUES('RC3','L','','','','','0');
INSERT DBColumns VALUES('RC3','LQ','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','LERR','','','','mean numerical luminosity class in the RC2 system','0');
INSERT DBColumns VALUES('RC3','LOGD0','','','','decimal logarithm of the isophotal major diameter corrected to ``face-on'''' (inclination = 0 degrees), and corrected for Galactic extinction to A_g = 0, but not for redshift','0');
INSERT DBColumns VALUES('RC3','SA21','mag','','','HI line self-absorption in magnitudes (for correction to face-on), calculated from logR and T &gt;= 1','0');
INSERT DBColumns VALUES('RC3','BT0','mag','','','B_T^0 = total ``face-on'''' magnitude corrected for Galactic and internal extinction, and for redshift','0');
INSERT DBColumns VALUES('RC3','UMBT0','mag','','','(U-B)_T^0 = total U-B color index corrected for Galactic and internal extinction, and for redshift','0');
INSERT DBColumns VALUES('RC3','MP25','mag/sq arcmin','','','the mean surface brightness in magnitudes per square arcmin (B-mag/arcmin^2) within the mu_B = 25.0 B-mag/arcsec^2 elliptical isophote of major axis D_25 and axis ratio R_25','0');
INSERT DBColumns VALUES('RC3','MP25Q','','','','quality flag ("?" if bad)','0');
INSERT DBColumns VALUES('RC3','MP25ERR','mag/sq arcmin','','','error inthe mean surface brightness within the mu_B = 25.0 B-mag/arcsec^2','0');
INSERT DBColumns VALUES('RC3','HI','','','','corrected neutral hydrogen index, which is the difference m_21^0 - B_T^0 between the corrected (face-on) 21-cm emission line magnitude and the similarly corrected magnitude in the B_T system.','0');
INSERT DBColumns VALUES('RC3','V3K','km/s','','','the weighted mean velocity corrected to the reference frame defined by the 3 K microwave background radiation','0');
INSERT DBColumns VALUES('ROSAT','OBJID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('ROSAT','SOURCENAME','','','','name of source in ROSAT','0');
INSERT DBColumns VALUES('ROSAT','RA','deg','','','J2000 right ascension of ROSAT source','0');
INSERT DBColumns VALUES('ROSAT','DEC','deg','','','J2000 declination of ROSAT source','0');
INSERT DBColumns VALUES('ROSAT','RADECERR','arcsec','','','error in coordinates','0');
INSERT DBColumns VALUES('ROSAT','FLAGS','','','','screening flags (see ROSAT documentation)','0');
INSERT DBColumns VALUES('ROSAT','FLAGS2','','','','screening flags (see ROSAT documentation)','0');
INSERT DBColumns VALUES('ROSAT','CPS','','','','counts per second in broad band','0');
INSERT DBColumns VALUES('ROSAT','CPS_ERR','','','','error in count rate','0');
INSERT DBColumns VALUES('ROSAT','BGCPS','','','','counts per second from background','0');
INSERT DBColumns VALUES('ROSAT','EXPTIME','sec','','','exposure time','0');
INSERT DBColumns VALUES('ROSAT','HR1','','','','hardness ratio 1','0');
INSERT DBColumns VALUES('ROSAT','HR1_ERR','','','','error in hardness ratio 1','0');
INSERT DBColumns VALUES('ROSAT','HR2','','','','hardness ratio 2','0');
INSERT DBColumns VALUES('ROSAT','HR2_ERR','','','','error in hardness ratio 2','0');
INSERT DBColumns VALUES('ROSAT','EXT','arcsec','','','source extent','0');
INSERT DBColumns VALUES('ROSAT','EXTL','','','','likelihood of source extent','0');
INSERT DBColumns VALUES('ROSAT','SRCL','','','','likelihood of source detection','0');
INSERT DBColumns VALUES('ROSAT','EXTR','arcsec','','','extraction radius','0');
INSERT DBColumns VALUES('ROSAT','PRIORITY','','','','priority flags (Sliding window detection history using either the background map (M) or the local background (B); 0 = no detection, 1 = detection; order of flags: M-broad, L-broad, M-hard, L-hard, M-soft, L-soft','0');
INSERT DBColumns VALUES('ROSAT','ERANGE','','','','pulse height amplitude range with highest detection likelihood; A: 11-41, B: 52-201, C: 52-90, D: 91-201 '' '' or ''b'' means ''broad'' (11-235)','0');
INSERT DBColumns VALUES('ROSAT','VIGF','','','','vignetting factor','0');
INSERT DBColumns VALUES('ROSAT','ORGDAT','','','','date when source was included (format: yymmdd; 000000: removed)','0');
INSERT DBColumns VALUES('ROSAT','MODDAT','','','','date when source was modified (format: yymmdd; 000000: removed)','0');
INSERT DBColumns VALUES('ROSAT','ID','','','','number of identification candidates in correlation catalog','0');
INSERT DBColumns VALUES('ROSAT','FIELDID','','','','identification number of SASS field','0');
INSERT DBColumns VALUES('ROSAT','SRCNUM','','','','SASS source number in SASS field','0');
INSERT DBColumns VALUES('ROSAT','RCT1','','','','number of nearby RASS detections with distances between 0 and 5 arcmin','0');
INSERT DBColumns VALUES('ROSAT','RCT2','','','','number of nearby RASS detections with distances between 5 and 10 arcmin','0');
INSERT DBColumns VALUES('ROSAT','RCT3','','','','number of nearby RASS detections with distances between 10 and 15 arcmin','0');
INSERT DBColumns VALUES('ROSAT','ITB','','','','start time of observation (yymmdd.ff)','0');
INSERT DBColumns VALUES('ROSAT','ITE','','','','end time of observation (yymmdd.ff)','0');
INSERT DBColumns VALUES('ROSAT','RL','','','','reliability of source detection (0 to 99, with 99 being highest)','0');
INSERT DBColumns VALUES('ROSAT','CAT','','','','which catalog the source is in (faint or bright)','0');
INSERT DBColumns VALUES('USNO','OBJID','','ID_MAIN','','unique id, points to photoObj','0');
INSERT DBColumns VALUES('USNO','RA','deg','','','J2000 right ascension in USNO-B1.0','0');
INSERT DBColumns VALUES('USNO','DEC','deg','','','J2000 declination in USNO-B1.0','0');
INSERT DBColumns VALUES('USNO','RAERR','arcsec','','','error in R.A.','0');
INSERT DBColumns VALUES('USNO','DECERR','arcsec','','','error in Dec','0');
INSERT DBColumns VALUES('USNO','MEANEPOCH','years','','','mean epoch of RA/Dec','0');
INSERT DBColumns VALUES('USNO','MURA','mas/yr','','','proper motion in RA','0');
INSERT DBColumns VALUES('USNO','MUDEC','mas/yr','','','proper motion in Dec','0');
INSERT DBColumns VALUES('USNO','PROPERMOTION','0.01 arcsec/yr','','','total proper motion','0');
INSERT DBColumns VALUES('USNO','ANGLE','deg','','','position angle of proper motion (East of North)','0');
INSERT DBColumns VALUES('USNO','MURAERR','mas/yr','','','error in proper motion in RA','0');
INSERT DBColumns VALUES('USNO','MUDECERR','mas/yr','','','error in proper motion in Dec','0');
INSERT DBColumns VALUES('USNO','MUPROB','','','','probability of proper motion','0');
INSERT DBColumns VALUES('USNO','MUFLAG','','','','proper motion flag (0 no, 1 yes)','0');
INSERT DBColumns VALUES('USNO','SFITRA','mas','','','sigma of individual observations around best fit motion in RA','0');
INSERT DBColumns VALUES('USNO','SFITDEC','mas','','','sigma of individual observations around best fit motion in RA','0');
INSERT DBColumns VALUES('USNO','NFITPT','','','','number of observations used in the fit','0');
INSERT DBColumns VALUES('USNO','MAG_B1','mag','','','','0');
INSERT DBColumns VALUES('USNO','MAG_R1','mag','','','','0');
INSERT DBColumns VALUES('USNO','MAG_B2','mag','','','','0');
INSERT DBColumns VALUES('USNO','MAG_R2','mag','','','','0');
INSERT DBColumns VALUES('USNO','MAG_I2','mag','','','','0');
INSERT DBColumns VALUES('USNO','FLDID_B1','','','','field id in first blue survey','0');
INSERT DBColumns VALUES('USNO','FLDID_R1','','','','field id in first red survey','0');
INSERT DBColumns VALUES('USNO','FLDID_B2','','','','field id in second blue survey','0');
INSERT DBColumns VALUES('USNO','FLDID_R2','','','','field id in second red survey','0');
INSERT DBColumns VALUES('USNO','FLDID_I2','','','','field id in N survey','0');
INSERT DBColumns VALUES('USNO','SG_B1','','','','star/galaxy separation flag in first blue survey (values of 0 to 3 are probably stellar, values of 8 to 11 are probably non-stellar)','0');
INSERT DBColumns VALUES('USNO','SG_R1','','','','star/galaxy separation flag in first red survey (values of 0 to 3 are probably stellar, values of 8 to 11 are probably non-stellar)','0');
INSERT DBColumns VALUES('USNO','SG_B2','','','','star/galaxy separation flag in second blue survey (values of 0 to 3 are probably stellar, values of 8 to 11 are probably non-stellar)','0');
INSERT DBColumns VALUES('USNO','SG_R2','','','','star/galaxy separation flag in second red survey (values of 0 to 3 are probably stellar, values of 8 to 11 are probably non-stellar)','0');
INSERT DBColumns VALUES('USNO','SG_I2','','','','star/galaxy separation flag in N survey (values of 0 to 3 are probably stellar, values of 8 to 11 are probably non-stellar)','0');
INSERT DBColumns VALUES('USNO','FLDEPOCH_B1','','','','epoch of observation in first blue survey','0');
INSERT DBColumns VALUES('USNO','FLDEPOCH_R1','','','','epoch of observation in first red survey','0');
INSERT DBColumns VALUES('USNO','FLDEPOCH_B2','','','','epoch of observation in second blue survey','0');
INSERT DBColumns VALUES('USNO','FLDEPOCH_R2','','','','epoch of observation in second red survey','0');
INSERT DBColumns VALUES('USNO','FLDEPOCH_I2','','','','epoch of observation in N survey','0');
INSERT DBColumns VALUES('WISE_xmatch','sdss_objid','','','','SDSS ObjectID of matched SDSS object (foreign key, PhotoObjAll / PhotoObj / PhotoTag . objId)','0');
INSERT DBColumns VALUES('WISE_xmatch','wise_cntr','','','','WISE unique ID of matched WISE object (foreign key, WISE_allsky . cntr)','0');
INSERT DBColumns VALUES('WISE_xmatch','match_dist','arcsec','','','Distance in arcsec between SDSS object RA,Dec and WISE object RA,Dec','0');
INSERT DBColumns VALUES('WISE_allsky','cntr','','','','WISE primary key (''counter'')','0');
INSERT DBColumns VALUES('WISE_allsky','ra','deg J2000','','','RA (right ascension, J2000)','0');
INSERT DBColumns VALUES('WISE_allsky','dec','deg J2000','','','Dec (declination, J2000)','0');
INSERT DBColumns VALUES('WISE_allsky','sigra','arcsec','','','uncertainty in RA','0');
INSERT DBColumns VALUES('WISE_allsky','sigdec','arcsec','','','uncertainty in DEC','0');
INSERT DBColumns VALUES('WISE_allsky','sigradec','arcsec','','','uncertainty cross-term','0');
INSERT DBColumns VALUES('WISE_allsky','wx','pixels','','','The x-pixel coordinate of this source on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','wy','pixels','','','The y-pixel coordinate of this source on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','glat','deg','','','Galactic latitude','0');
INSERT DBColumns VALUES('WISE_allsky','glon','deg','','','Galactic longitude','0');
INSERT DBColumns VALUES('WISE_allsky','coadd_id','','','','Atlas Tile identifier from which source was extracted.','0');
INSERT DBColumns VALUES('WISE_allsky','src','','','','Sequential number of this source extraction in the Atlas Tile from which this source was extracted, in approximate descending order of W1 source brightness.','0');
INSERT DBColumns VALUES('WISE_allsky','rchi2','','','','Combine reduced chi-squared of the profile-fit photometry measurement in all bands','0');
INSERT DBColumns VALUES('WISE_allsky','xsc_prox','arcsec','','','2MASS Extended Source Catalog (XSC) proximity. This column gives the distance between the WISE source position and the position of a nearby 2MASS XSC source, if the separation is less than 1.1 times the Ks isophotal radius size of the XSC source.','0');
INSERT DBColumns VALUES('WISE_allsky','tmass_key','','','','2MASS PSC association. Unique identifier of the closest source in the 2MASS Point Source Catalog (PSC) that falls within 3" of the position of this WISE source.','0');
INSERT DBColumns VALUES('WISE_allsky','r_2mass','arcsec','','','Distance separating the positions of the WISE source and associated 2MASS PSC source within 3"','0');
INSERT DBColumns VALUES('WISE_allsky','pa_2mass','deg','','','Position angle (degrees E of N) of the vector from the WISE source to the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','n_2mass','','','','The number of 2MASS PSC entries found within a 3" radius of the WISE source position','0');
INSERT DBColumns VALUES('WISE_allsky','j_m_2mass','mag','','','2MASS J-band magnitude or magnitude upper limit of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','j_msig_2mass','mag','','','2MASS J-band corrected photometric uncertainty of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','h_m_2mass','mag','','','2MASS H-band magnitude or magnitude upper limit of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','h_msig_2mass','mag','','','2MASS H-band corrected photometric uncertainty of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','k_m_2mass','mag','','','2MASS Ks-band magnitude or magnitude upper limit of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','k_msig_2mass','mag','','','2MASS Ks-band corrected photometric uncertainty of the associated 2MASS PSC source','0');
INSERT DBColumns VALUES('WISE_allsky','rho12','percent','','','The correlation coefficient between the W1 and W2 single-exposure flux measurements.  Negative values indicate anticorrelation.','0');
INSERT DBColumns VALUES('WISE_allsky','rho23','percent','','','The correlation coefficient between the W2 and W3 single-exposure flux measurements.  Negative values indicate anticorrelation.','0');
INSERT DBColumns VALUES('WISE_allsky','rho34','percent','','','The correlation coefficient between the W3 and W4 single-exposure flux measurements.  Negative values indicate anticorrelation.','0');
INSERT DBColumns VALUES('WISE_allsky','q12','','','','Correlation significance between W1 and W2. The value is -log10(Q2(rho12)), where Q2 is the two-tailed fraction of all cases expected to show at least this much apparent positive or negative correlation when in fact there is no correlation. The value is clipped at 9.','0');
INSERT DBColumns VALUES('WISE_allsky','q23','','','','Correlation significance between W2 and W3. The value is -log10(Q2(rho12)), where Q2 is the two-tailed fraction of all cases expected to show at least this much apparent positive or negative correlation when in fact there is no correlation. The value is clipped at 9.','0');
INSERT DBColumns VALUES('WISE_allsky','q34','','','','Correlation significance between W3 and W4. The value is -log10(Q2(rho12)), where Q2 is the two-tailed fraction of all cases expected to show at least this much apparent positive or negative correlation when in fact there is no correlation. The value is clipped at 9.','0');
INSERT DBColumns VALUES('WISE_allsky','blend_ext_flags','','','','Combination of WISE "ext_flg", "na", and "nb" columns.  Bit 5 (32 / 0x20): The profile-fit photometry goodness-of-fit, w?rchi2, is  &gt; 3.0 in one or more bands.  Bit 6 (64 / 0x40): The source falls within the extrapolated isophotal footprint of a 2MASS XSC source.  Bit 7 (128 / 0x80): The source position falls within 5" of a 2MASS XSC source.  Bit 4 (16 / 0x10): WISE "na" column: Active deblending flag. Indicates if a single detection was split into multiple sources in the process of profile-fitting.  Bottom four bits (mask 0xf): WISE "nb" column: Number of PSF components used simultaneously in the profile-fitting for this source. This number includes the source itself, so the minimum value of nb is "1". Nb is greater than "1" when the source is fit concurrently with other nearby detections (passive deblending), or when a single source is split into two components during the fitting process (active deblending).','0');
INSERT DBColumns VALUES('WISE_allsky','w1mpro','mag','','','W1 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W1 flux measurement has SNR &lt; 2. This column is null if the source is nominally detected in W1, but no useful brightness estimate could be made.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmpro','mag','','','W1 profile-fit photometric measurement uncertainty in mag units. This column is null if the W1 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable.','0');
INSERT DBColumns VALUES('WISE_allsky','w1snr','','','','W1 profile-fit measurement signal-to-noise ratio. This value is the ratio of the flux (w1flux) to flux uncertainty (w1sigflux)in the W1 profile-fit photometry measurement. This column is null if w1flux is negative, or if w1flux or w1sigflux are null.','0');
INSERT DBColumns VALUES('WISE_allsky','w1rchi2','','','','Reduced chi-squared of the W1 profile-fit photometry measurement. This column is null if the W1 magnitude is a 95% confidence upper limit (i.e. the source is not detected).','0');
INSERT DBColumns VALUES('WISE_allsky','w1sat','','','','Saturated pixel fraction, W1. The fraction of all pixels within the profile-fitting area in the stack of single-exposure images used to characterize this source that are flagged as saturated. A value larger than 0.0 indicates one or more pixels of saturation. Saturation begins to occur for point sources brighter than [W1]~8 mag. Saturation may occur in fainter sources because of a charged particle strike.','0');
INSERT DBColumns VALUES('WISE_allsky','w1nm','','','','Integer frame detection count. This column gives the number of individual 7.7s exposures on which this source was detected with SNR &gt; 3 in the W1 profile-fit measurement. This number can be zero for sources that are well-detected on the coadded Atlas Image, but too faint for detection on the single exposures.','0');
INSERT DBColumns VALUES('WISE_allsky','w1m','','','','Integer frame coverage. This column gives the number of individual 7.7s W1 exposures on which a profile-fit measurement of this source was possible.  This number can differ between the four bands because band-dependent criteria are used to select individual frames for inclusion in the coadded Atlas Images.','0');
INSERT DBColumns VALUES('WISE_allsky','w1cov','','','','Mean pixel coverage in W1. This column gives the mean pixel value from the W1 Atlas Tile Coverage Map within the "standard" aperture, a circular area with a radius of 8.25" centered on the position of this source.  W1cov may differ from the integer frame coverage value given in w1m for two reasons. First, individual pixels in the measurement area may be masked or otherwise unusable, reducing the effective pixel count and thus the mean coverage value. Second, the effective sky area sampled by a pixels in single-exposure image varies across the focal plane because of field distortion. Distortion is corrected when coadding to generate the Atlas Images. Therefore, the effective number of pixels contributing to a pixel in the Atlas Coverage Map may be slightly smaller or larger than expected if there was no distortion.','0');
INSERT DBColumns VALUES('WISE_allsky','w1frtr','','','','Fraction of pixels affected by transients. This column gives the fraction of all W1 pixels in the stack of individual W1 exposures used to characterize this source that may be affected by transient events. This number is computed by counting the number of pixels in the single exposure Bit Mask images with value "21" that are present within the profile-fitting area, a circular region with radius of 7.25", centered on the position of this source, and dividing by the total number of pixels in the same area that are available for measurement.','0');
INSERT DBColumns VALUES('WISE_allsky','w1flux','DN','','','The "raw" W1 source flux measured in profile-fit photometry in units of digital numbers. This value may be negative. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigflux','DN','','','Uncertainty in the "raw" W1 source flux measurement in profile-fit photometry in units of digital numbers. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sky','DN','','','The trimmed average of the W1 sky background value in digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70". Both profile-fit and aperture photometry source brightness measurements are made relative to this sky background value.  For profile-fit photometry, the sky background is measured on the individual single-exposure images that are used for source characterization. For aperture photometry, the sky background is measured on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigsky','DN','','','The uncertainty in the W1 sky background value in units of digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70".','0');
INSERT DBColumns VALUES('WISE_allsky','w1conf','DN','','','Estimated confusion noise in the W1 sky background annulus, in digital numbers. This number is the difference between the measured noise in the sky background w1sigsk and the noise measured in the same region on the Atlas Uncertainty Maps.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag','mag','','','W1 "standard" aperture magnitude. This is the curve-of-growth corrected source brightness measured in an 8.25" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". The curve-of-growth correction is given in w1mcor.  This column is null if an aperture measurement was not possible in W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag','mag','','','Uncertainty in the W1 "standard" aperture magnitude.  This column is null if the W1 "standard" aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mcor','mag','','','W1 aperture curve-of-growth correction, in magnitudes. This correction is subtracted from the nominal 8.25" aperture photometry brightness, w1mag_2, to give the "standard-aperture" magnitude.','0');
INSERT DBColumns VALUES('WISE_allsky','w1magp','mag','','','Inverse-variance-weighted mean W1 magnitude computed from profile-fit measurements on the w1m individual frames covering this source. This differs from w1mpro in that it is computed by combining the profile-fit measurements from individual frames, whereas w1mpro is computed by fitting all W1 frames simultaneously and incorporating a robust error model.  This column is "null" if w1m=0, the mean flux is negative or if no individual frame measurements are possible.  CAUTION: This is not a robust measurement of source brightness. It is provided as an internal repeatability diagnostic only. Users should always defer to w1mpro for the optimal flux measurement for point sources.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigp1','mag','','','Standard deviation of the population of W1 fluxes measured on the w1m individual frames covering this source, in magnitudes. This provides a measure of the characteristic uncertainty of the measurement of this source on individual frames.  This column is "null" if w1m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigp2','mag','','','Standard deviation of the mean of the distribution of W1 fluxes (w1magp) computed from profile-fit measurements on the w1m individual frames covering this source, in magnitudes. This is equivalent to w1sigp1/sqrt(w1m).  This column is "null" if w1m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w1dmag','mag','','','Difference between maximum and minimum magnitude of the source from all usable single-exposure frames, W1. Single-exposure measurements with w1rchi2 values greater than 3.0 times the median are rejected from this computation.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mjdmin','MJD','','','The earliest modified Julian Date (mJD) of the W1 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mjdmax','MJD','','','The latest modified Julian Date (mJD) of the W1 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mjdmean','MJD','','','The average modified Julian Date (mJD) of the W1 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w1rsemi','arcsec','','','Semi-major axis of the elliptical aperture used to measure source in W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1ba','','','','Axis ratio (b/a) of the elliptical aperture used to measure source in W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1pa','deg','','','Position angle (degrees E of N) of the elliptical aperture major axis used to measure source in W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1gmag','mag','','','W1 magnitude of source measured in the elliptical aperture described by w1rsemi, w1ba, and w1pa.','0');
INSERT DBColumns VALUES('WISE_allsky','w1siggmag','mag','','','Uncertainty in the W1 magnitude of source measured in elliptical aperture.  ("w1gerr" in WISE catalog)','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg','','','','W1 "standard" aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag value is an integer that is the combination of one or more of the following values that signify different conditions: 0 - No contamination; 1 - Source confusion - another source falls within the measurement aperture; 2 - Presence of bad pixels in the measurement aperture; 4 - Non-zero bit flag tripped (other than 2 or 18); 8 - All pixels are flagged as unusable, or the aperture flux is negative. In the former case, the aperture magnitude is "null". In the latter case, the aperture magnitude is a 95% confidence upper limit; 16 - Saturation - there are one or more saturated pixels in the measurement aperture; 32 - The magnitude is a 95% confidence upper limit.','0');
INSERT DBColumns VALUES('WISE_allsky','w1gflg','','','','W1 elliptical aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the "standard" aperture photometry quality flag, w1flg.','0');
INSERT DBColumns VALUES('WISE_allsky','ph_qual_det1','','','','Combination of WISE "PH_QUAL" and "DET_BIT" columns.  Bit 0 (1, 0x1): (ph_qual = A) - Source is detected in this band with a flux signal-to-noise ratio w1snr &gt; 10; Bit 1 (2, 0x2): (ph_qual = B) - Source is detected in this band with a flux signal-to-noise ratio 3 &lt; w1snr &lt; 10; Bit 2 (4, 0x4): (ph_qual = C): Source is detected in this band with a flux signal-to-noise ratio 2 &lt; w1snr &lt; 3; Bit 3 (8, 0x8): (ph_qual = D): ??; Bit 4 (16, 0x10): (ph_qual = U): Upper limit on magnitude. Source measurement has w1snr &lt; 2. The profile-fit magnitude w1mpro is a 95% confidence upper limit; Bit 5 (32, 0x20): (ph_qual = X): A profile-fit measurement was not possible at this location in this band. The value of w1mpro and w1sigmpro will be "null" in this band; Bit 6 (64, 0x40): (ph_qual = Z) A profile-fit source flux measurement was made at this location, but the flux uncertainty could not be measured. The value of w1sigmpro will be "null" in this band. The value of w1mpro will be "null" if the measured flux is negative, but will not be "null" if the flux is positive. If a non-null magnitude is presented, it should be treated as a brightness upper limit. This occurs in rare circumstances for very bright, heavily saturated sources; Bit 7 (128, 0x80): "DET_BIT" column: Was the source detected at w1snr  &gt;  2?','0');
INSERT DBColumns VALUES('WISE_allsky','w1ndf','','','','Number of degrees of freedom in the flux variability chi-square, W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mlq','','','','Probability measure that the source is variable in W1 flux. The value is -log10(Q), where Q = 1 - P(chi-suared). P is the cumulative chi-square distribution probability for the flux sample measured on the individual single-exposure images. The value is clipped at 9.  The Q value is the fraction of all cases to be expected to be at least as large as that observed if the null hypothesis is true. The null hypothesis is that the flux is emitted by a non-variable astrophysical object. It may be false because the object is a true variable. It may also be false because the flux measurement is corrupted by artifacts such as cosmic rays, scattered light, etc. The smaller the Q value, the more implausible the null hypothesis, i.e., the more likely it is that the flux is either variable or corrupted or both.','0');
INSERT DBColumns VALUES('WISE_allsky','w1cc_map','','','','Contamination and confusion map for this source in W1. This column contains the integer equivalent of the 9-bit binary number that specifies if the W1 measurement is believed to be contaminated by or a spurious detection of an image artifact. The elements of the binary array are:  [S  0  0  0  G  H  0  P  D].  The leftmost bit, S, differentiates whether the band-detection is believed to be a real detection contaminated by an artifact ("0") or a spurious detection of an artifact ("1"). The remaining bits are set to "1" to denote contamination by different types of artifacts according to the letters: D - Diffraction spike. Source may be a spurious detection of or contaminated by a diffraction spike a nearby bright star on the same image.  P - Persistence. Source may be a spurious detection of or contaminated by a short-term latent (persistence) image left by a bright source.  H - Halo. Source may be a spurious detection of or contaminated by the scattered light halo associated with a bright star.  G - Optical ghost. Source may be a spurious detection of or contaminated by an optical ghost image caused by a nearby bright source on the same image.','0');
INSERT DBColumns VALUES('WISE_allsky','var_flg1','','','','Variability flag for W1.  Related to the probability that the source flux measured on the individual WISE exposures was not constant with time. The probability calculation uses the standard deviation of the single exposure flux measurements, w?sigp1, as well as the band-to-band flux correlation significance, q12,q23,q34.  The probability is computed for a band only when there are at least six single-exposure measurements available that satisfy minimum quality criteria. A value of 16 indicates insufficient or inadequate data to make a determination of possible variability. Values of 0 through 9 indicate increasing probabilities of variation. Values of 0 through 5 are most likely not variables. Sources with values of 6 and 7 are likely flux variables, but are the most susceptible to false-positive variability. Var_flg values greater than 7 have the highest probability of being true flux variables in a band.  CAUTION: Estimation of flux variability is unreliable for sources that are extended (ext_flg &gt; 0), and sources whose measurements are contaminated by image artifacts in a band (cc_flags[b] != ''0'').','0');
INSERT DBColumns VALUES('WISE_allsky','moon_lev1','','','','Scattered moonlight contamination flag; the fraction of single-exposure frames on which the source was measured that were possibly contaminated by scattered moonlight.  The value is given by [ceiling(#frmmoon/#frames*10)], with a maximum value of 9, where #frmmoon is the number of affected frames and #frames is the total number of frames on which the source was measured.','0');
INSERT DBColumns VALUES('WISE_allsky','satnum1','','','','Minimum sample at which saturation occurs; indicates the minimum SUTR sample in which any pixel in the profile-fitting area in all of the single-exposure images used to characterize this source was flagged as having reached the saturation level in the on-board WISE payload processing. If no pixels are flagged as saturated, the value is 0.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mpro','mag','','','W2 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W2 flux measurement has SNR &lt; 2. This column is null if the source is nominally detected in W2, but no useful brightness estimate could be made.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmpro','mag','','','W2 profile-fit photometric measurement uncertainty in mag units. This column is null if the W2 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable.','0');
INSERT DBColumns VALUES('WISE_allsky','w2snr','','','','W2 profile-fit measurement signal-to-noise ratio. This value is the ratio of the flux (w2flux) to flux uncertainty (w2sigflux)in the W2 profile-fit photometry measurement. This column is null if w2flux is negative, or if w2flux or w2sigflux are null.','0');
INSERT DBColumns VALUES('WISE_allsky','w2rchi2','','','','Reduced chi-squared of the W2 profile-fit photometry measurement. This column is null if the W2 magnitude is a 95% confidence upper limit (i.e. the source is not detected).','0');
INSERT DBColumns VALUES('WISE_allsky','w2sat','','','','Saturated pixel fraction, W2. The fraction of all pixels within the profile-fitting area in the stack of single-exposure images used to characterize this source that are flagged as saturated. A value larger than 0.0 indicates one or more pixels of saturation. Saturation begins to occur for point sources brighter than [W2]~8 mag. Saturation may occur in fainter sources because of a charged particle strike.','0');
INSERT DBColumns VALUES('WISE_allsky','w2nm','','','','Integer frame detection count. This column gives the number of individual 7.7s exposures on which this source was detected with SNR &gt; 3 in the W2 profile-fit measurement. This number can be zero for sources that are well-detected on the coadded Atlas Image, but too faint for detection on the single exposures.','0');
INSERT DBColumns VALUES('WISE_allsky','w2m','','','','Integer frame coverage. This column gives the number of individual 7.7s W2 exposures on which a profile-fit measurement of this source was possible.  This number can differ between the four bands because band-dependent criteria are used to select individual frames for inclusion in the coadded Atlas Images.','0');
INSERT DBColumns VALUES('WISE_allsky','w2cov','','','','Mean pixel coverage in W2. This column gives the mean pixel value from the W2 Atlas Tile Coverage Map within the "standard" aperture, a circular area with a radius of 8.25" centered on the position of this source.  W2cov may differ from the integer frame coverage value given in w2m for two reasons. First, individual pixels in the measurement area may be masked or otherwise unusable, reducing the effective pixel count and thus the mean coverage value. Second, the effective sky area sampled by a pixels in single-exposure image varies across the focal plane because of field distortion. Distortion is corrected when coadding to generate the Atlas Images. Therefore, the effective number of pixels contributing to a pixel in the Atlas Coverage Map may be slightly smaller or larger than expected if there was no distortion.','0');
INSERT DBColumns VALUES('WISE_allsky','w2frtr','','','','Fraction of pixels affected by transients. This column gives the fraction of all W2 pixels in the stack of individual W2 exposures used to characterize this source that may be affected by transient events. This number is computed by counting the number of pixels in the single exposure Bit Mask images with value "21" that are present within the profile-fitting area, a circular region with radius of 7.25", centered on the position of this source, and dividing by the total number of pixels in the same area that are available for measurement.','0');
INSERT DBColumns VALUES('WISE_allsky','w2flux','DN','','','The "raw" W2 source flux measured in profile-fit photometry in units of digital numbers. This value may be negative. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigflux','DN','','','Uncertainty in the "raw" W2 source flux measurement in profile-fit photometry in units of digital numbers. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sky','DN','','','The trimmed average of the W2 sky background value in digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70". Both profile-fit and aperture photometry source brightness measurements are made relative to this sky background value.  For profile-fit photometry, the sky background is measured on the individual single-exposure images that are used for source characterization. For aperture photometry, the sky background is measured on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigsky','DN','','','The uncertainty in the W2 sky background value in units of digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70".','0');
INSERT DBColumns VALUES('WISE_allsky','w2conf','DN','','','Estimated confusion noise in the W2 sky background annulus, in digital numbers. This number is the difference between the measured noise in the sky background w2sigsk and the noise measured in the same region on the Atlas Uncertainty Maps.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag','mag','','','W2 "standard" aperture magnitude. This is the curve-of-growth corrected source brightness measured in an 8.25" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". The curve-of-growth correction is given in w2mcor.  This column is null if an aperture measurement was not possible in W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag','mag','','','Uncertainty in the W2 "standard" aperture magnitude.  This column is null if the W2 "standard" aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mcor','mag','','','W2 aperture curve-of-growth correction, in magnitudes. This correction is subtracted from the nominal 8.25" aperture photometry brightness, w2mag_2, to give the "standard-aperture" magnitude.','0');
INSERT DBColumns VALUES('WISE_allsky','w2magp','mag','','','Inverse-variance-weighted mean W2 magnitude computed from profile-fit measurements on the w2m individual frames covering this source. This differs from w2mpro in that it is computed by combining the profile-fit measurements from individual frames, whereas w2mpro is computed by fitting all W2 frames simultaneously and incorporating a robust error model.  This column is "null" if w2m=0, the mean flux is negative or if no individual frame measurements are possible.  CAUTION: This is not a robust measurement of source brightness. It is provided as an internal repeatability diagnostic only. Users should always defer to w2mpro for the optimal flux measurement for point sources.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigp1','mag','','','Standard deviation of the population of W2 fluxes measured on the w2m individual frames covering this source, in magnitudes. This provides a measure of the characteristic uncertainty of the measurement of this source on individual frames.  This column is "null" if w2m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigp2','mag','','','Standard deviation of the mean of the distribution of W2 fluxes (w2magp) computed from profile-fit measurements on the w2m individual frames covering this source, in magnitudes. This is equivalent to w2sigp1/sqrt(w2m).  This column is "null" if w2m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w2dmag','mag','','','Difference between maximum and minimum magnitude of the source from all usable single-exposure frames, W2. Single-exposure measurements with w2rchi2 values greater than 3.0 times the median are rejected from this computation.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mjdmin','MJD','','','The earliest modified Julian Date (mJD) of the W2 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mjdmax','MJD','','','The latest modified Julian Date (mJD) of the W2 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mjdmean','MJD','','','The average modified Julian Date (mJD) of the W2 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w2rsemi','arcsec','','','Semi-major axis of the elliptical aperture used to measure source in W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2ba','','','','Axis ratio (b/a) of the elliptical aperture used to measure source in W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2pa','deg','','','Position angle (degrees E of N) of the elliptical aperture major axis used to measure source in W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2gmag','mag','','','W2 magnitude of source measured in the elliptical aperture described by w2rsemi, w2ba, and w2pa.','0');
INSERT DBColumns VALUES('WISE_allsky','w2siggmag','mag','','','Uncertainty in the W2 magnitude of source measured in elliptical aperture.  ("w2gerr" in WISE catalog)','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg','','','','W2 "standard" aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag value is an integer that is the combination of one or more of the following values that signify different conditions: 0 - No contamination; 1 - Source confusion - another source falls within the measurement aperture; 2 - Presence of bad pixels in the measurement aperture; 4 - Non-zero bit flag tripped (other than 2 or 18); 8 - All pixels are flagged as unusable, or the aperture flux is negative. In the former case, the aperture magnitude is "null". In the latter case, the aperture magnitude is a 95% confidence upper limit; 16 - Saturation - there are one or more saturated pixels in the measurement aperture; 32 - The magnitude is a 95% confidence upper limit.','0');
INSERT DBColumns VALUES('WISE_allsky','w2gflg','','','','W2 elliptical aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the "standard" aperture photometry quality flag, w2flg.','0');
INSERT DBColumns VALUES('WISE_allsky','ph_qual_det2','','','','Combination of WISE "PH_QUAL" and "DET_BIT" columns.  Bit 0 (1, 0x1): (ph_qual = A) - Source is detected in this band with a flux signal-to-noise ratio w2snr &gt; 10; Bit 1 (2, 0x2): (ph_qual = B) - Source is detected in this band with a flux signal-to-noise ratio 3 &lt; w2snr &lt; 10; Bit 2 (4, 0x4): (ph_qual = C): Source is detected in this band with a flux signal-to-noise ratio 2 &lt; w2snr &lt; 3; Bit 3 (8, 0x8): (ph_qual = D): ??; Bit 4 (16, 0x10): (ph_qual = U): Upper limit on magnitude. Source measurement has w2snr &lt; 2. The profile-fit magnitude w2mpro is a 95% confidence upper limit; Bit 5 (32, 0x20): (ph_qual = X): A profile-fit measurement was not possible at this location in this band. The value of w2mpro and w2sigmpro will be "null" in this band; Bit 6 (64, 0x40): (ph_qual = Z) A profile-fit source flux measurement was made at this location, but the flux uncertainty could not be measured. The value of w2sigmpro will be "null" in this band. The value of w2mpro will be "null" if the measured flux is negative, but will not be "null" if the flux is positive. If a non-null magnitude is presented, it should be treated as a brightness upper limit. This occurs in rare circumstances for very bright, heavily saturated sources; Bit 7 (128, 0x80): "DET_BIT" column: Was the source detected at w2snr  &gt;  2?','0');
INSERT DBColumns VALUES('WISE_allsky','w2ndf','','','','Number of degrees of freedom in the flux variability chi-square, W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mlq','','','','Probability measure that the source is variable in W2 flux. The value is -log10(Q), where Q = 1 - P(chi-suared). P is the cumulative chi-square distribution probability for the flux sample measured on the individual single-exposure images. The value is clipped at 9.  The Q value is the fraction of all cases to be expected to be at least as large as that observed if the null hypothesis is true. The null hypothesis is that the flux is emitted by a non-variable astrophysical object. It may be false because the object is a true variable. It may also be false because the flux measurement is corrupted by artifacts such as cosmic rays, scattered light, etc. The smaller the Q value, the more implausible the null hypothesis, i.e., the more likely it is that the flux is either variable or corrupted or both.','0');
INSERT DBColumns VALUES('WISE_allsky','w2cc_map','','','','Contamination and confusion map for this source in W2. This column contains the integer equivalent of the 9-bit binary number that specifies if the W2 measurement is believed to be contaminated by or a spurious detection of an image artifact. The elements of the binary array are:  [S  0  0  0  G  H  0  P  D].  The leftmost bit, S, differentiates whether the band-detection is believed to be a real detection contaminated by an artifact ("0") or a spurious detection of an artifact ("1"). The remaining bits are set to "1" to denote contamination by different types of artifacts according to the letters: D - Diffraction spike. Source may be a spurious detection of or contaminated by a diffraction spike a nearby bright star on the same image.  P - Persistence. Source may be a spurious detection of or contaminated by a short-term latent (persistence) image left by a bright source.  H - Halo. Source may be a spurious detection of or contaminated by the scattered light halo associated with a bright star.  G - Optical ghost. Source may be a spurious detection of or contaminated by an optical ghost image caused by a nearby bright source on the same image.','0');
INSERT DBColumns VALUES('WISE_allsky','var_flg2','','','','Variability flag for W2.  Related to the probability that the source flux measured on the individual WISE exposures was not constant with time. The probability calculation uses the standard deviation of the single exposure flux measurements, w?sigp1, as well as the band-to-band flux correlation significance, q12,q23,q34.  The probability is computed for a band only when there are at least six single-exposure measurements available that satisfy minimum quality criteria. A value of 16 indicates insufficient or inadequate data to make a determination of possible variability. Values of 0 through 9 indicate increasing probabilities of variation. Values of 0 through 5 are most likely not variables. Sources with values of 6 and 7 are likely flux variables, but are the most susceptible to false-positive variability. Var_flg values greater than 7 have the highest probability of being true flux variables in a band.  CAUTION: Estimation of flux variability is unreliable for sources that are extended (ext_flg &gt; 0), and sources whose measurements are contaminated by image artifacts in a band (cc_flags[b] != ''0'').','0');
INSERT DBColumns VALUES('WISE_allsky','moon_lev2','','','','Scattered moonlight contamination flag; the fraction of single-exposure frames on which the source was measured that were possibly contaminated by scattered moonlight.  The value is given by [ceiling(#frmmoon/#frames*10)], with a maximum value of 9, where #frmmoon is the number of affected frames and #frames is the total number of frames on which the source was measured.','0');
INSERT DBColumns VALUES('WISE_allsky','satnum2','','','','Minimum sample at which saturation occurs; indicates the minimum SUTR sample in which any pixel in the profile-fitting area in all of the single-exposure images used to characterize this source was flagged as having reached the saturation level in the on-board WISE payload processing. If no pixels are flagged as saturated, the value is 0.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mpro','mag','','','W3 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W3 flux measurement has SNR &lt; 2. This column is null if the source is nominally detected in W3, but no useful brightness estimate could be made.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmpro','mag','','','W3 profile-fit photometric measurement uncertainty in mag units. This column is null if the W3 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable.','0');
INSERT DBColumns VALUES('WISE_allsky','w3snr','','','','W3 profile-fit measurement signal-to-noise ratio. This value is the ratio of the flux (w3flux) to flux uncertainty (w3sigflux)in the W3 profile-fit photometry measurement. This column is null if w3flux is negative, or if w3flux or w3sigflux are null.','0');
INSERT DBColumns VALUES('WISE_allsky','w3rchi2','','','','Reduced chi-squared of the W3 profile-fit photometry measurement. This column is null if the W3 magnitude is a 95% confidence upper limit (i.e. the source is not detected).','0');
INSERT DBColumns VALUES('WISE_allsky','w3sat','','','','Saturated pixel fraction, W3. The fraction of all pixels within the profile-fitting area in the stack of single-exposure images used to characterize this source that are flagged as saturated. A value larger than 0.0 indicates one or more pixels of saturation. Saturation begins to occur for point sources brighter than [W3]~8 mag. Saturation may occur in fainter sources because of a charged particle strike.','0');
INSERT DBColumns VALUES('WISE_allsky','w3nm','','','','Integer frame detection count. This column gives the number of individual 7.7s exposures on which this source was detected with SNR &gt; 3 in the W3 profile-fit measurement. This number can be zero for sources that are well-detected on the coadded Atlas Image, but too faint for detection on the single exposures.','0');
INSERT DBColumns VALUES('WISE_allsky','w3m','','','','Integer frame coverage. This column gives the number of individual 7.7s W3 exposures on which a profile-fit measurement of this source was possible.  This number can differ between the four bands because band-dependent criteria are used to select individual frames for inclusion in the coadded Atlas Images.','0');
INSERT DBColumns VALUES('WISE_allsky','w3cov','','','','Mean pixel coverage in W3. This column gives the mean pixel value from the W3 Atlas Tile Coverage Map within the "standard" aperture, a circular area with a radius of 8.25" centered on the position of this source.  W3cov may differ from the integer frame coverage value given in w3m for two reasons. First, individual pixels in the measurement area may be masked or otherwise unusable, reducing the effective pixel count and thus the mean coverage value. Second, the effective sky area sampled by a pixels in single-exposure image varies across the focal plane because of field distortion. Distortion is corrected when coadding to generate the Atlas Images. Therefore, the effective number of pixels contributing to a pixel in the Atlas Coverage Map may be slightly smaller or larger than expected if there was no distortion.','0');
INSERT DBColumns VALUES('WISE_allsky','w3frtr','','','','Fraction of pixels affected by transients. This column gives the fraction of all W3 pixels in the stack of individual W3 exposures used to characterize this source that may be affected by transient events. This number is computed by counting the number of pixels in the single exposure Bit Mask images with value "21" that are present within the profile-fitting area, a circular region with radius of 7.25", centered on the position of this source, and dividing by the total number of pixels in the same area that are available for measurement.','0');
INSERT DBColumns VALUES('WISE_allsky','w3flux','DN','','','The "raw" W3 source flux measured in profile-fit photometry in units of digital numbers. This value may be negative. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigflux','DN','','','Uncertainty in the "raw" W3 source flux measurement in profile-fit photometry in units of digital numbers. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sky','DN','','','The trimmed average of the W3 sky background value in digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70". Both profile-fit and aperture photometry source brightness measurements are made relative to this sky background value.  For profile-fit photometry, the sky background is measured on the individual single-exposure images that are used for source characterization. For aperture photometry, the sky background is measured on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigsky','DN','','','The uncertainty in the W3 sky background value in units of digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70".','0');
INSERT DBColumns VALUES('WISE_allsky','w3conf','DN','','','Estimated confusion noise in the W3 sky background annulus, in digital numbers. This number is the difference between the measured noise in the sky background w3sigsk and the noise measured in the same region on the Atlas Uncertainty Maps.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag','mag','','','W3 "standard" aperture magnitude. This is the curve-of-growth corrected source brightness measured in an 8.25" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". The curve-of-growth correction is given in w3mcor.  This column is null if an aperture measurement was not possible in W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag','mag','','','Uncertainty in the W3 "standard" aperture magnitude.  This column is null if the W3 "standard" aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mcor','mag','','','W3 aperture curve-of-growth correction, in magnitudes. This correction is subtracted from the nominal 8.25" aperture photometry brightness, w3mag_2, to give the "standard-aperture" magnitude.','0');
INSERT DBColumns VALUES('WISE_allsky','w3magp','mag','','','Inverse-variance-weighted mean W3 magnitude computed from profile-fit measurements on the w3m individual frames covering this source. This differs from w3mpro in that it is computed by combining the profile-fit measurements from individual frames, whereas w3mpro is computed by fitting all W3 frames simultaneously and incorporating a robust error model.  This column is "null" if w3m=0, the mean flux is negative or if no individual frame measurements are possible.  CAUTION: This is not a robust measurement of source brightness. It is provided as an internal repeatability diagnostic only. Users should always defer to w3mpro for the optimal flux measurement for point sources.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigp1','mag','','','Standard deviation of the population of W3 fluxes measured on the w3m individual frames covering this source, in magnitudes. This provides a measure of the characteristic uncertainty of the measurement of this source on individual frames.  This column is "null" if w3m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigp2','mag','','','Standard deviation of the mean of the distribution of W3 fluxes (w3magp) computed from profile-fit measurements on the w3m individual frames covering this source, in magnitudes. This is equivalent to w3sigp1/sqrt(w3m).  This column is "null" if w3m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w3dmag','mag','','','Difference between maximum and minimum magnitude of the source from all usable single-exposure frames, W3. Single-exposure measurements with w3rchi2 values greater than 3.0 times the median are rejected from this computation.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mjdmin','MJD','','','The earliest modified Julian Date (mJD) of the W3 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mjdmax','MJD','','','The latest modified Julian Date (mJD) of the W3 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mjdmean','MJD','','','The average modified Julian Date (mJD) of the W3 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w3rsemi','arcsec','','','Semi-major axis of the elliptical aperture used to measure source in W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3ba','','','','Axis ratio (b/a) of the elliptical aperture used to measure source in W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3pa','deg','','','Position angle (degrees E of N) of the elliptical aperture major axis used to measure source in W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3gmag','mag','','','W3 magnitude of source measured in the elliptical aperture described by w3rsemi, w3ba, and w3pa.','0');
INSERT DBColumns VALUES('WISE_allsky','w3siggmag','mag','','','Uncertainty in the W3 magnitude of source measured in elliptical aperture.  ("w3gerr" in WISE catalog)','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg','','','','W3 "standard" aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag value is an integer that is the combination of one or more of the following values that signify different conditions: 0 - No contamination; 1 - Source confusion - another source falls within the measurement aperture; 2 - Presence of bad pixels in the measurement aperture; 4 - Non-zero bit flag tripped (other than 2 or 18); 8 - All pixels are flagged as unusable, or the aperture flux is negative. In the former case, the aperture magnitude is "null". In the latter case, the aperture magnitude is a 95% confidence upper limit; 16 - Saturation - there are one or more saturated pixels in the measurement aperture; 32 - The magnitude is a 95% confidence upper limit.','0');
INSERT DBColumns VALUES('WISE_allsky','w3gflg','','','','W3 elliptical aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the "standard" aperture photometry quality flag, w3flg.','0');
INSERT DBColumns VALUES('WISE_allsky','ph_qual_det3','','','','Combination of WISE "PH_QUAL" and "DET_BIT" columns.  Bit 0 (1, 0x1): (ph_qual = A) - Source is detected in this band with a flux signal-to-noise ratio w3snr &gt; 10; Bit 1 (2, 0x2): (ph_qual = B) - Source is detected in this band with a flux signal-to-noise ratio 3 &lt; w3snr &lt; 10; Bit 2 (4, 0x4): (ph_qual = C): Source is detected in this band with a flux signal-to-noise ratio 2 &lt; w3snr &lt; 3; Bit 3 (8, 0x8): (ph_qual = D): ??; Bit 4 (16, 0x10): (ph_qual = U): Upper limit on magnitude. Source measurement has w3snr &lt; 2. The profile-fit magnitude w3mpro is a 95% confidence upper limit; Bit 5 (32, 0x20): (ph_qual = X): A profile-fit measurement was not possible at this location in this band. The value of w3mpro and w3sigmpro will be "null" in this band; Bit 6 (64, 0x40): (ph_qual = Z) A profile-fit source flux measurement was made at this location, but the flux uncertainty could not be measured. The value of w3sigmpro will be "null" in this band. The value of w3mpro will be "null" if the measured flux is negative, but will not be "null" if the flux is positive. If a non-null magnitude is presented, it should be treated as a brightness upper limit. This occurs in rare circumstances for very bright, heavily saturated sources; Bit 7 (128, 0x80): "DET_BIT" column: Was the source detected at w3snr  &gt;  2?','0');
INSERT DBColumns VALUES('WISE_allsky','w3ndf','','','','Number of degrees of freedom in the flux variability chi-square, W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mlq','','','','Probability measure that the source is variable in W3 flux. The value is -log10(Q), where Q = 1 - P(chi-suared). P is the cumulative chi-square distribution probability for the flux sample measured on the individual single-exposure images. The value is clipped at 9.  The Q value is the fraction of all cases to be expected to be at least as large as that observed if the null hypothesis is true. The null hypothesis is that the flux is emitted by a non-variable astrophysical object. It may be false because the object is a true variable. It may also be false because the flux measurement is corrupted by artifacts such as cosmic rays, scattered light, etc. The smaller the Q value, the more implausible the null hypothesis, i.e., the more likely it is that the flux is either variable or corrupted or both.','0');
INSERT DBColumns VALUES('WISE_allsky','w3cc_map','','','','Contamination and confusion map for this source in W3. This column contains the integer equivalent of the 9-bit binary number that specifies if the W3 measurement is believed to be contaminated by or a spurious detection of an image artifact. The elements of the binary array are:  [S  0  0  0  G  H  0  P  D].  The leftmost bit, S, differentiates whether the band-detection is believed to be a real detection contaminated by an artifact ("0") or a spurious detection of an artifact ("1"). The remaining bits are set to "1" to denote contamination by different types of artifacts according to the letters: D - Diffraction spike. Source may be a spurious detection of or contaminated by a diffraction spike a nearby bright star on the same image.  P - Persistence. Source may be a spurious detection of or contaminated by a short-term latent (persistence) image left by a bright source.  H - Halo. Source may be a spurious detection of or contaminated by the scattered light halo associated with a bright star.  G - Optical ghost. Source may be a spurious detection of or contaminated by an optical ghost image caused by a nearby bright source on the same image.','0');
INSERT DBColumns VALUES('WISE_allsky','var_flg3','','','','Variability flag for W3.  Related to the probability that the source flux measured on the individual WISE exposures was not constant with time. The probability calculation uses the standard deviation of the single exposure flux measurements, w?sigp1, as well as the band-to-band flux correlation significance, q12,q23,q34.  The probability is computed for a band only when there are at least six single-exposure measurements available that satisfy minimum quality criteria. A value of 16 indicates insufficient or inadequate data to make a determination of possible variability. Values of 0 through 9 indicate increasing probabilities of variation. Values of 0 through 5 are most likely not variables. Sources with values of 6 and 7 are likely flux variables, but are the most susceptible to false-positive variability. Var_flg values greater than 7 have the highest probability of being true flux variables in a band.  CAUTION: Estimation of flux variability is unreliable for sources that are extended (ext_flg &gt; 0), and sources whose measurements are contaminated by image artifacts in a band (cc_flags[b] != ''0'').','0');
INSERT DBColumns VALUES('WISE_allsky','moon_lev3','','','','Scattered moonlight contamination flag; the fraction of single-exposure frames on which the source was measured that were possibly contaminated by scattered moonlight.  The value is given by [ceiling(#frmmoon/#frames*10)], with a maximum value of 9, where #frmmoon is the number of affected frames and #frames is the total number of frames on which the source was measured.','0');
INSERT DBColumns VALUES('WISE_allsky','satnum3','','','','Minimum sample at which saturation occurs; indicates the minimum SUTR sample in which any pixel in the profile-fitting area in all of the single-exposure images used to characterize this source was flagged as having reached the saturation level in the on-board WISE payload processing. If no pixels are flagged as saturated, the value is 0.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mpro','mag','','','W4 magnitude measured with profile-fitting photometry, or the magnitude of the 95% confidence brightness upper limit if the W4 flux measurement has SNR &lt; 2. This column is null if the source is nominally detected in W4, but no useful brightness estimate could be made.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmpro','mag','','','W4 profile-fit photometric measurement uncertainty in mag units. This column is null if the W4 profile-fit magnitude is a 95% confidence upper limit or if the source is not measurable.','0');
INSERT DBColumns VALUES('WISE_allsky','w4snr','','','','W4 profile-fit measurement signal-to-noise ratio. This value is the ratio of the flux (w4flux) to flux uncertainty (w4sigflux)in the W4 profile-fit photometry measurement. This column is null if w4flux is negative, or if w4flux or w4sigflux are null.','0');
INSERT DBColumns VALUES('WISE_allsky','w4rchi2','','','','Reduced chi-squared of the W4 profile-fit photometry measurement. This column is null if the W4 magnitude is a 95% confidence upper limit (i.e. the source is not detected).','0');
INSERT DBColumns VALUES('WISE_allsky','w4sat','','','','Saturated pixel fraction, W4. The fraction of all pixels within the profile-fitting area in the stack of single-exposure images used to characterize this source that are flagged as saturated. A value larger than 0.0 indicates one or more pixels of saturation. Saturation begins to occur for point sources brighter than [W4]~8 mag. Saturation may occur in fainter sources because of a charged particle strike.','0');
INSERT DBColumns VALUES('WISE_allsky','w4nm','','','','Integer frame detection count. This column gives the number of individual 7.7s exposures on which this source was detected with SNR &gt; 3 in the W4 profile-fit measurement. This number can be zero for sources that are well-detected on the coadded Atlas Image, but too faint for detection on the single exposures.','0');
INSERT DBColumns VALUES('WISE_allsky','w4m','','','','Integer frame coverage. This column gives the number of individual 7.7s W4 exposures on which a profile-fit measurement of this source was possible.  This number can differ between the four bands because band-dependent criteria are used to select individual frames for inclusion in the coadded Atlas Images.','0');
INSERT DBColumns VALUES('WISE_allsky','w4cov','','','','Mean pixel coverage in W4. This column gives the mean pixel value from the W4 Atlas Tile Coverage Map within the "standard" aperture, a circular area with a radius of 8.25" centered on the position of this source.  W4cov may differ from the integer frame coverage value given in w4m for two reasons. First, individual pixels in the measurement area may be masked or otherwise unusable, reducing the effective pixel count and thus the mean coverage value. Second, the effective sky area sampled by a pixels in single-exposure image varies across the focal plane because of field distortion. Distortion is corrected when coadding to generate the Atlas Images. Therefore, the effective number of pixels contributing to a pixel in the Atlas Coverage Map may be slightly smaller or larger than expected if there was no distortion.','0');
INSERT DBColumns VALUES('WISE_allsky','w4frtr','','','','Fraction of pixels affected by transients. This column gives the fraction of all W4 pixels in the stack of individual W4 exposures used to characterize this source that may be affected by transient events. This number is computed by counting the number of pixels in the single exposure Bit Mask images with value "21" that are present within the profile-fitting area, a circular region with radius of 7.25", centered on the position of this source, and dividing by the total number of pixels in the same area that are available for measurement.','0');
INSERT DBColumns VALUES('WISE_allsky','w4flux','DN','','','The "raw" W4 source flux measured in profile-fit photometry in units of digital numbers. This value may be negative. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigflux','DN','','','Uncertainty in the "raw" W4 source flux measurement in profile-fit photometry in units of digital numbers. This column is null if no useful profile-fit measurement of the source is possible because of masked or otherwise unusable pixels.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sky','DN','','','The trimmed average of the W4 sky background value in digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70". Both profile-fit and aperture photometry source brightness measurements are made relative to this sky background value.  For profile-fit photometry, the sky background is measured on the individual single-exposure images that are used for source characterization. For aperture photometry, the sky background is measured on the Atlas Image.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigsky','DN','','','The uncertainty in the W4 sky background value in units of digital numbers measured in an annulus with an inner radius of 50" and outer radius of 70".','0');
INSERT DBColumns VALUES('WISE_allsky','w4conf','DN','','','Estimated confusion noise in the W4 sky background annulus, in digital numbers. This number is the difference between the measured noise in the sky background w4sigsk and the noise measured in the same region on the Atlas Uncertainty Maps.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag','mag','','','W4 "standard" aperture magnitude. This is the curve-of-growth corrected source brightness measured in an 8.25" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". The curve-of-growth correction is given in w4mcor.  This column is null if an aperture measurement was not possible in W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag','mag','','','Uncertainty in the W4 "standard" aperture magnitude.  This column is null if the W4 "standard" aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mcor','mag','','','W4 aperture curve-of-growth correction, in magnitudes. This correction is subtracted from the nominal 8.25" aperture photometry brightness, w4mag_2, to give the "standard-aperture" magnitude.','0');
INSERT DBColumns VALUES('WISE_allsky','w4magp','mag','','','Inverse-variance-weighted mean W4 magnitude computed from profile-fit measurements on the w4m individual frames covering this source. This differs from w4mpro in that it is computed by combining the profile-fit measurements from individual frames, whereas w4mpro is computed by fitting all W4 frames simultaneously and incorporating a robust error model.  This column is "null" if w4m=0, the mean flux is negative or if no individual frame measurements are possible.  CAUTION: This is not a robust measurement of source brightness. It is provided as an internal repeatability diagnostic only. Users should always defer to w4mpro for the optimal flux measurement for point sources.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigp1','mag','','','Standard deviation of the population of W4 fluxes measured on the w4m individual frames covering this source, in magnitudes. This provides a measure of the characteristic uncertainty of the measurement of this source on individual frames.  This column is "null" if w4m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigp2','mag','','','Standard deviation of the mean of the distribution of W4 fluxes (w4magp) computed from profile-fit measurements on the w4m individual frames covering this source, in magnitudes. This is equivalent to w4sigp1/sqrt(w4m).  This column is "null" if w4m &lt; 2 or if no individual frame measurements are possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w4dmag','mag','','','Difference between maximum and minimum magnitude of the source from all usable single-exposure frames, W4. Single-exposure measurements with w4rchi2 values greater than 3.0 times the median are rejected from this computation.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mjdmin','MJD','','','The earliest modified Julian Date (mJD) of the W4 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mjdmax','MJD','','','The latest modified Julian Date (mJD) of the W4 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mjdmean','MJD','','','The average modified Julian Date (mJD) of the W4 single-exposures covering the source.','0');
INSERT DBColumns VALUES('WISE_allsky','w4rsemi','arcsec','','','Semi-major axis of the elliptical aperture used to measure source in W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4ba','','','','Axis ratio (b/a) of the elliptical aperture used to measure source in W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4pa','deg','','','Position angle (degrees E of N) of the elliptical aperture major axis used to measure source in W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4gmag','mag','','','W4 magnitude of source measured in the elliptical aperture described by w4rsemi, w4ba, and w4pa.','0');
INSERT DBColumns VALUES('WISE_allsky','w4siggmag','mag','','','Uncertainty in the W4 magnitude of source measured in elliptical aperture.  ("w4gerr" in WISE catalog)','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg','','','','W4 "standard" aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag value is an integer that is the combination of one or more of the following values that signify different conditions: 0 - No contamination; 1 - Source confusion - another source falls within the measurement aperture; 2 - Presence of bad pixels in the measurement aperture; 4 - Non-zero bit flag tripped (other than 2 or 18); 8 - All pixels are flagged as unusable, or the aperture flux is negative. In the former case, the aperture magnitude is "null". In the latter case, the aperture magnitude is a 95% confidence upper limit; 16 - Saturation - there are one or more saturated pixels in the measurement aperture; 32 - The magnitude is a 95% confidence upper limit.','0');
INSERT DBColumns VALUES('WISE_allsky','w4gflg','','','','W4 elliptical aperture measurement quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the "standard" aperture photometry quality flag, w4flg.','0');
INSERT DBColumns VALUES('WISE_allsky','ph_qual_det4','','','','Combination of WISE "PH_QUAL" and "DET_BIT" columns.  Bit 0 (1, 0x1): (ph_qual = A) - Source is detected in this band with a flux signal-to-noise ratio w4snr &gt; 10; Bit 1 (2, 0x2): (ph_qual = B) - Source is detected in this band with a flux signal-to-noise ratio 3 &lt; w4snr &lt; 10; Bit 2 (4, 0x4): (ph_qual = C): Source is detected in this band with a flux signal-to-noise ratio 2 &lt; w4snr &lt; 3; Bit 3 (8, 0x8): (ph_qual = D): ??; Bit 4 (16, 0x10): (ph_qual = U): Upper limit on magnitude. Source measurement has w4snr &lt; 2. The profile-fit magnitude w4mpro is a 95% confidence upper limit; Bit 5 (32, 0x20): (ph_qual = X): A profile-fit measurement was not possible at this location in this band. The value of w4mpro and w4sigmpro will be "null" in this band; Bit 6 (64, 0x40): (ph_qual = Z) A profile-fit source flux measurement was made at this location, but the flux uncertainty could not be measured. The value of w4sigmpro will be "null" in this band. The value of w4mpro will be "null" if the measured flux is negative, but will not be "null" if the flux is positive. If a non-null magnitude is presented, it should be treated as a brightness upper limit. This occurs in rare circumstances for very bright, heavily saturated sources; Bit 7 (128, 0x80): "DET_BIT" column: Was the source detected at w4snr  &gt;  2?','0');
INSERT DBColumns VALUES('WISE_allsky','w4ndf','','','','Number of degrees of freedom in the flux variability chi-square, W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mlq','','','','Probability measure that the source is variable in W4 flux. The value is -log10(Q), where Q = 1 - P(chi-suared). P is the cumulative chi-square distribution probability for the flux sample measured on the individual single-exposure images. The value is clipped at 9.  The Q value is the fraction of all cases to be expected to be at least as large as that observed if the null hypothesis is true. The null hypothesis is that the flux is emitted by a non-variable astrophysical object. It may be false because the object is a true variable. It may also be false because the flux measurement is corrupted by artifacts such as cosmic rays, scattered light, etc. The smaller the Q value, the more implausible the null hypothesis, i.e., the more likely it is that the flux is either variable or corrupted or both.','0');
INSERT DBColumns VALUES('WISE_allsky','w4cc_map','','','','Contamination and confusion map for this source in W4. This column contains the integer equivalent of the 9-bit binary number that specifies if the W4 measurement is believed to be contaminated by or a spurious detection of an image artifact. The elements of the binary array are:  [S  0  0  0  G  H  0  P  D].  The leftmost bit, S, differentiates whether the band-detection is believed to be a real detection contaminated by an artifact ("0") or a spurious detection of an artifact ("1"). The remaining bits are set to "1" to denote contamination by different types of artifacts according to the letters: D - Diffraction spike. Source may be a spurious detection of or contaminated by a diffraction spike a nearby bright star on the same image.  P - Persistence. Source may be a spurious detection of or contaminated by a short-term latent (persistence) image left by a bright source.  H - Halo. Source may be a spurious detection of or contaminated by the scattered light halo associated with a bright star.  G - Optical ghost. Source may be a spurious detection of or contaminated by an optical ghost image caused by a nearby bright source on the same image.','0');
INSERT DBColumns VALUES('WISE_allsky','var_flg4','','','','Variability flag for W4.  Related to the probability that the source flux measured on the individual WISE exposures was not constant with time. The probability calculation uses the standard deviation of the single exposure flux measurements, w?sigp1, as well as the band-to-band flux correlation significance, q12,q23,q34.  The probability is computed for a band only when there are at least six single-exposure measurements available that satisfy minimum quality criteria. A value of 16 indicates insufficient or inadequate data to make a determination of possible variability. Values of 0 through 9 indicate increasing probabilities of variation. Values of 0 through 5 are most likely not variables. Sources with values of 6 and 7 are likely flux variables, but are the most susceptible to false-positive variability. Var_flg values greater than 7 have the highest probability of being true flux variables in a band.  CAUTION: Estimation of flux variability is unreliable for sources that are extended (ext_flg &gt; 0), and sources whose measurements are contaminated by image artifacts in a band (cc_flags[b] != ''0'').','0');
INSERT DBColumns VALUES('WISE_allsky','moon_lev4','','','','Scattered moonlight contamination flag; the fraction of single-exposure frames on which the source was measured that were possibly contaminated by scattered moonlight.  The value is given by [ceiling(#frmmoon/#frames*10)], with a maximum value of 9, where #frmmoon is the number of affected frames and #frames is the total number of frames on which the source was measured.','0');
INSERT DBColumns VALUES('WISE_allsky','satnum4','','','','Minimum sample at which saturation occurs; indicates the minimum SUTR sample in which any pixel in the profile-fitting area in all of the single-exposure images used to characterize this source was flagged as having reached the saturation level in the on-board WISE payload processing. If no pixels are flagged as saturated, the value is 0.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_1','mag','','','W1 5.5" radius aperture magnitude. This is the calibrated source brightness measured in a 5.5" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". No curve-of-growth correction has been applied.  This column is null if an aperture measurement was not possible in W1.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_1','mag','','','Uncertainty in the W1 5.5" radius aperture magnitude.  This column is null if the the 5.5" radius aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_1','','','','W1 5.5" radius aperture magnitude quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the standard aperture photometry quality flag, w1flg.','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_2','mag','','','Like w1mag_1 but with 8.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_2','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_2','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_3','mag','','','Like w1mag_1 but with 11" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_3','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_3','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_4','mag','','','Like w1mag_1 but with 13.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_4','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_4','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_5','mag','','','Like w1mag_1 but with 16.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_5','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_5','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_6','mag','','','Like w1mag_1 but with 19.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_6','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_6','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_7','mag','','','Like w1mag_1 but with 22" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_7','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_7','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1mag_8','mag','','','Like w1mag_1 but with 24.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w1sigmag_8','mag','','','Like w1sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w1flg_8','','','','Like w1flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_1','mag','','','W2 5.5" radius aperture magnitude. This is the calibrated source brightness measured in a 5.5" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". No curve-of-growth correction has been applied.  This column is null if an aperture measurement was not possible in W2.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_1','mag','','','Uncertainty in the W2 5.5" radius aperture magnitude.  This column is null if the the 5.5" radius aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_1','','','','W2 5.5" radius aperture magnitude quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the standard aperture photometry quality flag, w2flg.','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_2','mag','','','Like w2mag_1 but with 8.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_2','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_2','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_3','mag','','','Like w2mag_1 but with 11" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_3','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_3','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_4','mag','','','Like w2mag_1 but with 13.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_4','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_4','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_5','mag','','','Like w2mag_1 but with 16.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_5','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_5','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_6','mag','','','Like w2mag_1 but with 19.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_6','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_6','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_7','mag','','','Like w2mag_1 but with 22" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_7','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_7','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2mag_8','mag','','','Like w2mag_1 but with 24.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w2sigmag_8','mag','','','Like w2sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w2flg_8','','','','Like w2flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_1','mag','','','W3 5.5" radius aperture magnitude. This is the calibrated source brightness measured in a 5.5" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". No curve-of-growth correction has been applied.  This column is null if an aperture measurement was not possible in W3.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_1','mag','','','Uncertainty in the W3 5.5" radius aperture magnitude.  This column is null if the the 5.5" radius aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_1','','','','W3 5.5" radius aperture magnitude quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the standard aperture photometry quality flag, w3flg.','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_2','mag','','','Like w3mag_1 but with 8.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_2','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_2','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_3','mag','','','Like w3mag_1 but with 11" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_3','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_3','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_4','mag','','','Like w3mag_1 but with 13.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_4','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_4','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_5','mag','','','Like w3mag_1 but with 16.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_5','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_5','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_6','mag','','','Like w3mag_1 but with 19.25" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_6','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_6','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_7','mag','','','Like w3mag_1 but with 22" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_7','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_7','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3mag_8','mag','','','Like w3mag_1 but with 24.75" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w3sigmag_8','mag','','','Like w3sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w3flg_8','','','','Like w3flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_1','mag','','','W4 11" radius aperture magnitude. This is the calibrated source brightness measured in a 5.5" radius circular aperture centered on the source position on the Atlas Image. If the source is not detected in the aperture measurement, this is the 95% confidence upper limit to the brightness. The background sky reference level is measured in an annular region with inner radius of 50" and outer radius of 70". No curve-of-growth correction has been applied.  This column is null if an aperture measurement was not possible in W4.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_1','mag','','','Uncertainty in the W4 5.5" radius aperture magnitude.  This column is null if the the 5.5" radius aperture magnitude is an upper limit, or if an aperture measurement was not possible.','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_1','','','','W4 5.5" radius aperture magnitude quality flag. This flag indicates if one or more image pixels in the measurement aperture for this band is confused with nearby objects, is contaminated by saturated or otherwise unusable pixels, or is an upper limit. The flag values are as described for the standard aperture photometry quality flag, w4flg.','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_2','mag','','','Like w4mag_1 but with 16.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_2','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_2','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_3','mag','','','Like w4mag_1 but with 22" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_3','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_3','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_4','mag','','','Like w4mag_1 but with 27.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_4','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_4','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_5','mag','','','Like w4mag_1 but with 33" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_5','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_5','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_6','mag','','','Like w4mag_1 but with 38.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_6','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_6','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_7','mag','','','Like w4mag_1 but with 44" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_7','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_7','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4mag_8','mag','','','Like w4mag_1 but with 49.5" aperture.','0');
INSERT DBColumns VALUES('WISE_allsky','w4sigmag_8','mag','','','Like w4sigmag_1','0');
INSERT DBColumns VALUES('WISE_allsky','w4flg_8','','','','Like w4flg_1','0');
INSERT DBColumns VALUES('WISE_allsky','rjce','','','','Dereddening index - computed column used in APOGEE target selection','0');
INSERT DBColumns VALUES('wiseForcedTarget','objID','','','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('wiseForcedTarget','ra','deg','','','SDSS right ascension, J2000','0');
INSERT DBColumns VALUES('wiseForcedTarget','dec','deg','','','SDSS declination, J2000','0');
INSERT DBColumns VALUES('wiseForcedTarget','has_wise_phot','','','','Does WISE forced photometry exist for this source?','0');
INSERT DBColumns VALUES('wiseForcedTarget','x','','','','FITS pixel coordinate in the unWISE tile','0');
INSERT DBColumns VALUES('wiseForcedTarget','y','','','','FITS pixel coordinate in the unWISE tile','0');
INSERT DBColumns VALUES('wiseForcedTarget','treated_as_pointsource','','','','Was this source treated as a point source for photometry purposes?','0');
INSERT DBColumns VALUES('wiseForcedTarget','coadd_id','','','','unWISE tile identification, RRRR[pm]DDD, RRRR = int(10 * RA), DDD = int(10 * Dec), [pm] = sign(Dec), eg 2052p620','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_nanomaggies','Vega mag','','','W1 flux. Fluxes are presented in the Vega system, NOT AB. 1 nmgy means Vega mag 22.5','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_nanomaggies_ivar','1/(Vega mag)^2','','','Inverse-variance uncertainty for w1_nanomaggies','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_mag','Vega mag','','','W1 magnitude. w1_nanomaggies converted to (Vega) magnitudes.','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_mag_err','Vega mag','','','W1 magnitude uncertainty','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_prochi2','','','','Profile-weighted chi-squared (goodness of fit)','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_pronpix','','','','Profile-weighted number of WISE exposures in coadd','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_profracflux','','','','Profile-weighted fraction of flux coming from other sources; blendedness measure.','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_proflux','','','','Profile-weighted flux coming from other sources','0');
INSERT DBColumns VALUES('wiseForcedTarget','w1_npix','','','','Number of pixels used in fit','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_nanomaggies','Vega mag','','','W2 flux. Fluxes are presented in the Vega system, NOT AB. 1 nmgy means Vega mag 22.5','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_nanomaggies_ivar','1/(Vega mag)^2','','','Inverse-variance uncertainty for w2_nanomaggies','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_mag','Vega mag','','','W2 magnitude. w2_nanomaggies converted to (Vega) magnitudes.','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_mag_err','Vega mag','','','W2 magnitude uncertainty','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_prochi2','','','','Profile-weighted chi-squared (goodness of fit)','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_pronpix','','','','Profile-weighted number of WISE exposures in coadd','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_profracflux','','','','Profile-weighted fraction of flux coming from other sources; blendedness measure.','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_proflux','','','','Profile-weighted flux coming from other sources','0');
INSERT DBColumns VALUES('wiseForcedTarget','w2_npix','','','','Number of pixels used in fit','0');
INSERT DBColumns VALUES('Photoz','objID','','ID_MAIN','','unique ID pointing to GalaxyTag table','0');
INSERT DBColumns VALUES('Photoz','z','','REDSHIFT_PHOT','','photometric redshift; estimated by robust fit to nearest neighbors in a reference set','0');
INSERT DBColumns VALUES('Photoz','zErr','','REDSHIFT_PHOT ERROR','','estimated error of the photometric redshift; if zErr=-9999, the fit failed, but the neighbors'' average redshift might still be available','0');
INSERT DBColumns VALUES('Photoz','nnCount','','NUMBER','','number of nearest neighbors after excluding the outliers; maximal value is 100, a much smaller value indicates a poor estimate','0');
INSERT DBColumns VALUES('Photoz','nnVol','','NUMBER','','gives the color space bounding volume of the nnCount nearest neighbors; a large value indicates a poor estimate','0');
INSERT DBColumns VALUES('Photoz','photoErrorClass','','CODE_MISC','','the photometric error class of the galaxy from 1 to 7, 1 being the best; a negative value shows that the object to be estimated is outside of the k-nearest neighbor box; zErr is a reliable estimate only if photoErrorClass=1','0');
INSERT DBColumns VALUES('Photoz','nnObjID','','ID_IDENTIFIER','','objID of the (first) nearest neighbor','0');
INSERT DBColumns VALUES('Photoz','nnSpecz','','REDSHIFT','','spectroscopic redshift	of the (first) nearest neighbor','0');
INSERT DBColumns VALUES('Photoz','nnFarObjID','','ID_IDENTIFIER','','objID of the farthest neighbor','0');
INSERT DBColumns VALUES('Photoz','nnAvgZ','','REDSHIFT','','average redshift of the nearest neighbors; if significantly different from z, this might be a better estimate than z','0');
INSERT DBColumns VALUES('Photoz','distMod','','PHOT_DIST-MOD','','the distance modulus for Omega=0.2739, Lambda=0.726, h=0.705 cosmology','0');
INSERT DBColumns VALUES('Photoz','lumDist','','PHOT_LUM-DIST','','the luminosity distance in Mpc for Omega=0.2739, Lambda=0.726, h=0.705 cosmology','0');
INSERT DBColumns VALUES('Photoz','chisq','','STAT_LIKELIHOOD','','the chi-square value for the minimum chi-square template fit (non-reduced, 4 degrees of freedom)','0');
INSERT DBColumns VALUES('Photoz','rnorm','','STAT_MISC','','the residual Euclidean norm value for the minimum chi-square template fit','0');
INSERT DBColumns VALUES('Photoz','bestFitTemplateID','','ID_IDENTIFIER','','identifier of the best-fit template; if bestFitTemplateID=0 all the following columns are invalid and may be filled with the value -9999','0');
INSERT DBColumns VALUES('Photoz','synthU','','PHOT_SYNTH-MAG PHOT_SDSS_U','','synthetic u'' magnitude calculated from the fitted template','0');
INSERT DBColumns VALUES('Photoz','synthG','','PHOT_SYNTH-MAG PHOT_SDSS_G','','synthetic g'' magnitude calculated from the fitted template','0');
INSERT DBColumns VALUES('Photoz','synthR','','PHOT_SYNTH-MAG PHOT_SDSS_R','','synthetic r'' magnitude calculated from the fitted template','0');
INSERT DBColumns VALUES('Photoz','synthI','','PHOT_SYNTH-MAG PHOT_SDSS_I','','synthetic i'' magnitude calculated from the fitted template','0');
INSERT DBColumns VALUES('Photoz','synthZ','','PHOT_SYNTH-MAG PHOT_SDSS_Z','','synthetic z'' magnitude calculated from the fitted template','0');
INSERT DBColumns VALUES('Photoz','kcorrU','','PHOT_K-CORRECTION','','k correction for z=0','0');
INSERT DBColumns VALUES('Photoz','kcorrG','','PHOT_K-CORRECTION','','k correction for z=0','0');
INSERT DBColumns VALUES('Photoz','kcorrR','','PHOT_K-CORRECTION','','k correction for z=0','0');
INSERT DBColumns VALUES('Photoz','kcorrI','','PHOT_K-CORRECTION','','k correction for z=0','0');
INSERT DBColumns VALUES('Photoz','kcorrZ','','PHOT_K-CORRECTION','','k correction for z=0','0');
INSERT DBColumns VALUES('Photoz','kcorrU01','','PHOT_K-CORRECTION','','k correction for z=0.1','0');
INSERT DBColumns VALUES('Photoz','kcorrG01','','PHOT_K-CORRECTION','','k correction for z=0.1','0');
INSERT DBColumns VALUES('Photoz','kcorrR01','','PHOT_K-CORRECTION','','k correction for z=0.1','0');
INSERT DBColumns VALUES('Photoz','kcorrI01','','PHOT_K-CORRECTION','','k correction for z=0.1','0');
INSERT DBColumns VALUES('Photoz','kcorrZ01','','PHOT_K-CORRECTION','','k correction for z=0.1','0');
INSERT DBColumns VALUES('Photoz','absMagU','','PHOT_ABS-MAG PHOT_SDSS_U','','rest frame u'' abs magnitude','0');
INSERT DBColumns VALUES('Photoz','absMagG','','PHOT_ABS-MAG PHOT_SDSS_G','','rest frame g'' abs magnitude','0');
INSERT DBColumns VALUES('Photoz','absMagR','','PHOT_ABS-MAG PHOT_SDSS_R','','rest frame r'' abs magnitude','0');
INSERT DBColumns VALUES('Photoz','absMagI','','PHOT_ABS-MAG PHOT_SDSS_I','','rest frame i'' abs magnitude','0');
INSERT DBColumns VALUES('Photoz','absMagZ','','PHOT_ABS-MAG PHOT_SDSS_Z','','rest frame z'' abs magnitude','0');
INSERT DBColumns VALUES('PhotozErrorMap','CellID','','ID_MAIN','','unique ID of the cell in the grid','0');
INSERT DBColumns VALUES('PhotozErrorMap','rMag','','PHOT_SDSS_R','','center of the cell in the cModelMag_r magnitude, with dereddening; linear size of a cell: 0.5','0');
INSERT DBColumns VALUES('PhotozErrorMap','gMag_Minus_rMag','','PHOT_SDSS_GR_COLOR','','center of the cell in g-r color, using modelMag magnitudes with dereddening; linear size of a cell: 0.01','0');
INSERT DBColumns VALUES('PhotozErrorMap','rMag_Minus_iMag','','PHOT_SDSS_RI_COLOR','','center of the cell in r-i color, using modelMag magnitudes with dereddening; linear size of a cell: 0.01','0');
INSERT DBColumns VALUES('PhotozErrorMap','countInCell','','NUMBER','','number of training set objects in the cell; if 0, all following values are filled with -9999','0');
INSERT DBColumns VALUES('PhotozErrorMap','avgPhotoZ','','REDSHIFT_PHOT','','average of photometric redshift estimate for training set objects in the cell','0');
INSERT DBColumns VALUES('PhotozErrorMap','avgSpectroZ','','REDSHIFT','','average of spectroscopic redshift for training set objects in the cell','0');
INSERT DBColumns VALUES('PhotozErrorMap','avgRMS','','REDSHIFT ERROR','','square root of average squared error in photometric redshift estimation (PhotoZ-SpectroZ), for training set objects in the cell','0');
INSERT DBColumns VALUES('PhotozErrorMap','avgEstimatedError','','REDSHIFT ERROR','','average of the estimated photometric redshift error (zErr), for training set objects in the cell','0');
INSERT DBColumns VALUES('PhotozErrorMap','avgNeighborZStDev','','REDSHIFT ERROR','','average of the standard deviation of the k nearest neighbors'' redshift, for training set objects in the cell','0');
INSERT DBColumns VALUES('galSpecExtra','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('galSpecExtra','bptclass','','','','Emission line classification based on the BPT diagram using the methodology described in Brinchmann et al (2004). -1 means unclassifiable, 1 is star-forming, 2 means low S/N star-forming, 3 is composite, 4 AGN (excluding liners) and 5 is a low S/N LINER.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_p2p5','','','','The 2.5 percentile of the Oxygen abundance derived using Charlot &amp; Longhetti models. The values are reported as 12 + Log O/H. See Tremonti et al (2004) and Brinchmann et al (2004) for details.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_p16','','','','The 16 percentile of the Oxygen abundance derived using Charlot &amp; Longhetti models. The values are reported as 12 + Log O/H. See Tremonti et al (2004) and Brinchmann et al (2004) for details.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_p50','','','','The median estimate of the Oxygen abundance derived using Charlot &amp; Longhetti models. The values are reported as 12 + Log O/H. See Tremonti et al (2004) and Brinchmann et al (2004) for details.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_p84','','','','The 84th percentile of the Oxygen abundance derived using Charlot &amp; Longhetti models. The values are reported as 12 + Log O/H. See Tremonti et al (2004) and Brinchmann et al (2004) for details.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_p97p5','','','','The 97.5 percentile of the Oxygen abundance derived using Charlot &amp; Longhetti models. The values are reported as 12 + Log O/H. See Tremonti et al (2004) and Brinchmann et al (2004) for details.','0');
INSERT DBColumns VALUES('galSpecExtra','oh_entropy','','','','The entropy (Sum p*lg(p)) of the PDF of 12 + Log O/H','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_tot_p2p5','Log solar masses','','','The 2.5 percentile of the Log total stellar mass PDF using model photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_tot_p16','Log solar masses','','','The 16th percentile of the Log total stellar mass PDF using model photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_tot_p50','Log solar masses','','','The median estimate of the Log total stellar mass PDF using model photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_tot_p84','Log solar masses','','','The 84th percentile of the Log total stellar mass PDF using model photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_tot_p97p5','Log solar masses','','','The 97.5 percentile of the Log total stellar mass PDF using model photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_fib_p2p5','Log solar masses','','','The 2.5 percentile of the Log stellar mass within the fibre PDF using fibre photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_fib_p16','Log solar masses','','','The 16th percentile of the Log stellar mass within the fibre PDF using fibre photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_fib_p50','Log solar masses','','','The median estimate of the Log stellar mass within the fibre PDF using fibre photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_fib_p84','Log solar masses','','','The 84th percentile of the Log stellar mass within the fibre PDF using fibre photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','lgm_fib_p97p5','Log solar masses','','','The 97.5 percentile of the Log stellar mass within the fibre PDF using fibre photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_p2p5','Log Msun/yr','','','The 2.5 percentile of the Log total SFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_p16','Log Msun/yr','','','The 16th percentile of the Log total SFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_p50','Log Msun/yr','','','The median estimate of the Log total SFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_p84','Log Msun/yr','','','The 84th percentile of the Log total SFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_p97p5','Log Msun/yr','','','The 97.5 percentile of the Log total SFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_tot_entropy','','','','The entropy (Sum p*lg(p)) of the PDF of the total SFR','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_p2p5','Log Msun/yr','','','The 2.5 percentile of the Log SFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_p16','Log Msun/yr','','','The 16th percentile of the Log SFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_p50','Log Msun/yr','','','The median estimate of the Log SFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_p84','Log Msun/yr','','','The 84th percentile of the Log SFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_p97p5','Log Msun/yr','','','The 97.5 percentile of the Log SFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','sfr_fib_entropy','','','','The entropy (Sum p*lg(p)) of the PDF of the fiber SFR','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_p2p5','Log Msun/yr','','','The 2.5 percentile of the Log total SPECSFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_p16','Log Msun/yr','','','The 16th percentile of the Log total SPECSFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_p50','Log Msun/yr','','','The median estimate of the Log total SPECSFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_p84','Log Msun/yr','','','The 84th percentile of the Log total SPECSFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_p97p5','Log Msun/yr','','','The 97.5 percentile of the Log total SPECSFR PDF. This is derived by combining emission line measurements from within the fibre where possible and aperture corrections are done by fitting models ala Gallazzi et al (2005), Salim et al (2007) to the photometry outside the fibre. For those objects where the emission lines within the fibre do not provide an estimate of the SFR, model fits were made to the integrated photometry.','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_tot_entropy','','','','The entropy (Sum p*lg(p)) of the PDF of the total SPECSFR','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_p2p5','Log Msun/yr','','','The 2.5 percentile of the Log SPECSFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_p16','Log Msun/yr','','','The 16th percentile of the Log SPECSFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_p50','Log Msun/yr','','','The median estimate of the Log SPECSFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_p84','Log Msun/yr','','','The 84th percentile of the Log SPECSFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_p97p5','Log Msun/yr','','','The 97.5 percentile of the Log SPECSFR within the fiber PDF. For galaxies of the star-forming class, emission lines were used (c.f. Brinchmann et al 2004) while for others models were fit to the fibre photometry..','0');
INSERT DBColumns VALUES('galSpecExtra','specsfr_fib_entropy','','','','The entropy (Sum p*lg(p)) of the PDF of the fiber SPECSFR','0');
INSERT DBColumns VALUES('galSpecIndx','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn1','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn1_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn1_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn1_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn1_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn2','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn2_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn2_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn2_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_cn2_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4227','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4227_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4227_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4227_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4227_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_g4300','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_g4300_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_g4300_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_g4300_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_g4300_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4383','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4383_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4383_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4383_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4383_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4455','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4455_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4455_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4455_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_ca4455_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4531','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4531_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4531_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4531_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe4531_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_c4668','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_c4668_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_c4668_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_c4668_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_c4668_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hb','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hb_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hb_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hb_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hb_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5015','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5015_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5015_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5015_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5015_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg1','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg1_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg1_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg1_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg1_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg2','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg2_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg2_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg2_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mg2_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mgb','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mgb_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mgb_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mgb_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_mgb_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5270','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5270_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5270_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5270_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5270_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5335','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5335_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5335_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5335_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5335_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5406','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5406_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5406_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5406_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5406_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5709','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5709_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5709_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5709_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5709_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5782','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5782_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5782_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5782_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_fe5782_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_nad','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_nad_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_nad_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_nad_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_nad_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio1','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio1_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio1_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio1_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio1_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio2','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio2_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio2_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio2_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_tio2_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_a','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_a_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_a_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_a_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_a_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_a','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_a_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_a_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_a_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_a_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_f','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_f_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_f_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_f_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hd_f_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_f','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_f_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_f_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_f_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','lick_hg_f_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8498','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8498_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8498_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8498_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8498_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8542','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8542_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8542_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8542_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8542_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8662','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8662_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8662_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8662_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_caii8662_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_mgi8807','A','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_mgi8807_err','A','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_mgi8807_model','A','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_mgi8807_sub','A','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','dtt_mgi8807_sub_err','A','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cnb','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cnb_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cnb_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cnb_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cnb_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hk','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hk_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hk_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hk_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hk_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cai','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cai_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cai_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cai_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_cai_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_g','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_g_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_g_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_g_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_g_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hb','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hb_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hb_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hb_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_hb_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mgg','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mgg_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mgg_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mgg_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mgg_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mh','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mh_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mh_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mh_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_mh_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_fc','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_fc_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_fc_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_fc_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_fc_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_nad','mag','','','Restframe index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_nad_err','mag','','','Error on index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','bh_nad_model','mag','','','Index of best fit model spectrum','0');
INSERT DBColumns VALUES('galSpecIndx','bh_nad_sub','mag','','','Restframe index measurement on the data after subtracting all 3-sigma emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','bh_nad_sub_err','mag','','','Error in the above index measurement','0');
INSERT DBColumns VALUES('galSpecIndx','d4000','','','','4000AA break, Bruzual (1983) definition','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_err','','','','Uncertainty estimate for 4000AA break, Bruzual (1983) definition','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_model','','','','4000AA break, Bruzual (1983) definition measured off best-fit CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_sub','','','','4000AA break, Bruzual (1983) definition after correction for emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_sub_err','','','','Uncertainty estimate for 4000AA break, Bruzual (1983) definition after correction for emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n','','','','4000AA break, Balogh et al (1999) definition','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_err','','','','Uncertainty estimate for 4000AA break, Balogh et al (1999) definition','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_model','','','','4000AA break, Balogh et al (1999) definition measured off best-fit CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_sub','','','','4000AA break, Balogh et al (1999) definition after correction for emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_sub_err','','','','Uncertainty estimate for 4000AA break, Balogh et al (1999) definition after correction for emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_red','','','','The flux in the red window of the Bruzual (1983) definition of D4000','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_blue','','','','The flux in the blue window of the Bruzual (1983) definition of D4000','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_red','','','','The flux in the red window of the Balogh et al (1999) definition of D4000','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_blue','','','','The flux in the blue window of the Balogh et al (1999) definition of D4000','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_sub_red','','','','The flux in the red window of the Bruzual (1983) definition of D4000 after subtraction of emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_sub_blue','','','','The flux in the blue window of the Bruzual (1983) definition of D4000 after subtraction of emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_sub_red','','','','The flux in the red window of the Balogh et al (1999) definition of D4000 after subtraction of emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','d4000_n_sub_blue','','','','The flux in the blue window of the Balogh et al (1999)q definition of D4000 after subtraction of emission lines','0');
INSERT DBColumns VALUES('galSpecIndx','tauv_model_040','','','','Dust attenuation of the best fit Z=0.004 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_coef_040','','','','The scaling coefficients of the best fit Z=0.004 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_chisq_040','','','','The chi^2 of the best fit Z=0.004 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','tauv_model_080','','','','Dust attenuation of the best fit Z=0.008 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_coef_080','','','','The scaling coefficients of the best fit Z=0.008 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_chisq_080','','','','The chi^2 of the best fit Z=0.008 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','tauv_model_170','','','','Dust attenuation of the best fit Z=0.017 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_coef_170','','','','The scaling coefficients of the best fit Z=0.017 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_chisq_170','','','','The chi^2 of the best fit Z=0.017 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','tauv_model_400','','','','Dust attenuation of the best fit Z=0.04 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_coef_400','','','','The scaling coefficients of the best fit Z=0.04 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','model_chisq_400','','','','The chi^2 of the best fit Z=0.04 CB08 model','0');
INSERT DBColumns VALUES('galSpecIndx','best_model_z','','','','Metallicity of best fitting (min chisq) model Z = 0.004 / 0.017 / 0.050 (0.2 1.0, 2.5 x solar)','0');
INSERT DBColumns VALUES('galSpecIndx','tauv_cont','','','','V-band optical depth (TauV = A_V / 1.086) affecting the stars from best fit model (best of 4 Z''s)','0');
INSERT DBColumns VALUES('galSpecIndx','model_coef','','','','Coeficients of best fit model (best of 4 Z''s)','0');
INSERT DBColumns VALUES('galSpecIndx','model_chisq','','','','Reduced chi-squared of best fit model (best of 4 Z''s)','0');
INSERT DBColumns VALUES('galSpecInfo','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('galSpecInfo','plateid','','','','Plate number','0');
INSERT DBColumns VALUES('galSpecInfo','mjd','','','','Modified Julian Date of plate observation','0');
INSERT DBColumns VALUES('galSpecInfo','fiberid','','','','Fiber number (1 - 640)','0');
INSERT DBColumns VALUES('galSpecInfo','ra','degrees','','','Right Ascention of drilled fiber position','0');
INSERT DBColumns VALUES('galSpecInfo','dec','degrees','','','Declination of drilled fiber position','0');
INSERT DBColumns VALUES('galSpecInfo','primtarget','','','','Primary Target Flag (MAIN galaxy = 64)','0');
INSERT DBColumns VALUES('galSpecInfo','sectarget','','','','Secondary Target Flag (QA = 8)','0');
INSERT DBColumns VALUES('galSpecInfo','targettype','','','','Text version of primary target (GALAXY/QA/QSO/ROSAT_D)','0');
INSERT DBColumns VALUES('galSpecInfo','spectrotype','','','','Schlegel classification of spectrum ... code is only run where this is set to "GALAXY"','0');
INSERT DBColumns VALUES('galSpecInfo','subclass','','','','Schlegel subclass from PCA analysis -- not alwasy correct!! AGN/BROADLINE/STARBURST/STARFORMING','0');
INSERT DBColumns VALUES('galSpecInfo','z','','','','Redshift from Schlegel','0');
INSERT DBColumns VALUES('galSpecInfo','z_err','','','','Redshift error','0');
INSERT DBColumns VALUES('galSpecInfo','z_warning','','','','Bad redshift if this is non-zero -- see Schlegel data model','0');
INSERT DBColumns VALUES('galSpecInfo','v_disp','km/s','','','Velocity dispersion from Schlegel','0');
INSERT DBColumns VALUES('galSpecInfo','v_disp_err','km/s','','','Velocity dispersion error (negative for invalid fit)','0');
INSERT DBColumns VALUES('galSpecInfo','sn_median','','','','Median S/N per pixel of the whole spectrum','0');
INSERT DBColumns VALUES('galSpecInfo','e_bv_sfd','','','','E(B-V) of foreground reddening from SFD maps','0');
INSERT DBColumns VALUES('galSpecInfo','release','','','','Data Release (dr1/dr2/dr3/dr4)','0');
INSERT DBColumns VALUES('galSpecInfo','reliable','','','','has "reliable" line measurements and physical parameters','0');
INSERT DBColumns VALUES('galSpecLine','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('galSpecLine','sigma_balmer','km/s','','','Velocity dispersion (sigma not FWHM) measured simultaneously in all of the Balmer lines','0');
INSERT DBColumns VALUES('galSpecLine','sigma_balmer_err','km/s','','','Error in the above','0');
INSERT DBColumns VALUES('galSpecLine','sigma_forbidden','km/s','','','Velocity dispersion (sigma not FWHM) measured simultaneously in all the forbidden lines','0');
INSERT DBColumns VALUES('galSpecLine','sigma_forbidden_err','km/s','','','Error in the above','0');
INSERT DBColumns VALUES('galSpecLine','v_off_balmer','km/s','','','Velocity offset of the Balmer lines from the measured redshift','0');
INSERT DBColumns VALUES('galSpecLine','v_off_balmer_err','km/s','','','Error in the above','0');
INSERT DBColumns VALUES('galSpecLine','v_off_forbidden','km/s','','','Velocity offset of the forbidden lines from the measured redshift','0');
INSERT DBColumns VALUES('galSpecLine','v_off_forbidden_err','km/s','','','Error in the above','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3726_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oii_3729_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','neiii_3869_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','h_delta_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','h_gamma_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4363_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','h_beta_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_4959_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_5007_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','hei_5876_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','oi_6300_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6548_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','h_alpha_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','nii_6584_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6717_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','sii_6731_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_cont','1e-17 erg/s/cm^2/AA','','','Continuum at line center from 200 pixel median smoothing of the emission-line subtracted continuum','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_cont_err','1e-17 erg/s/cm^2/AA','','','Error in the continuum computed from the variance in the band pass','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_reqw','Ang','','','The equivalent width of the continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative). In this case the continuum comes from a running 200 pixel median and does not properly account for stellar absorption. In general the EQW measurements provide a better measure of the true equivalent width. The purpose of this measurement is to help characterize the stellar absorption effecting the line. (EW_stellar = REQW - EQW)','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_reqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_eqw','Ang','','','The equivalent width of the CB08 continuum-subtracted emission line computed from straight integration over the bandpasses listed below (emisison is negative) . This properly takes into account stellar absorption. Note that it will not be correct in the case of blended lines (ie NII &amp; H-alpha) -- instead use FLUX/CONT.','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_eqw_err','Ang','','','Error in the equivalent width described above','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_flux','1e-17 erg/s/cm^2','','','Flux from Gaussian fit to continuum subtracted data. (Note that the fit is done simultaneously to all the lines so de-blending happens automatically)','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_flux_err','1e-17 erg/s/cm^2','','','Error in the flux','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_inst_res','km/s','','','Instrumental resolution at the line center (measured for each spectrum from the ARC lamps)','0');
INSERT DBColumns VALUES('galSpecLine','ariii7135_chisq','','','','Reduced chi-squared of the line fit over the bandpass used for the EW measurement','0');
INSERT DBColumns VALUES('galSpecLine','oii_sigma','km/s','','','The width of the [O II] line in a free fit (ie. not tied to other emission lines)','0');
INSERT DBColumns VALUES('galSpecLine','oii_flux','1e-17 erg/s/cm^2','','','The flux of the [O II] doublet from a free fit.','0');
INSERT DBColumns VALUES('galSpecLine','oii_flux_err','1e-17 erg/s/cm^2','','','The estimated uncertainty on OII_FLUX','0');
INSERT DBColumns VALUES('galSpecLine','oii_voff','km/s','','','The velocity offset of the [O II] doublet from a free fit','0');
INSERT DBColumns VALUES('galSpecLine','oii_chi2','','','','chi^2 of the fit to the [O II] line in free fit','0');
INSERT DBColumns VALUES('galSpecLine','oiii_sigma','km/s','','','The width of the [O III]5007 line in a free fit (ie. not tied to other emission lines)','0');
INSERT DBColumns VALUES('galSpecLine','oiii_flux','1e-17 erg/s/cm^2','','','The flux of the [O III]5007 line from a free fit.','0');
INSERT DBColumns VALUES('galSpecLine','oiii_flux_err','1e-17 erg/s/cm^2','','','The estimated uncertainty on OIII_FLUX','0');
INSERT DBColumns VALUES('galSpecLine','oiii_voff','km/s','','','The velocity offset of the [O III]5007 line from a free fit','0');
INSERT DBColumns VALUES('galSpecLine','oiii_chi2','','','','chi^2 of the fit to the [O III]5007 line in free fit','0');
INSERT DBColumns VALUES('galSpecLine','spectofiber','','','','The multiplicative scale factor applied to the original flux and error spectra prior to measurement of the emission lines to improve the spectrophotometric accuracy.  The rescaling insures that a synthetic r-band magnitude computed from the spectrum matches the r-band fiber magnitude measured by the photometric pipeline.','0');
INSERT DBColumns VALUES('detectionIndex','thingId','','','','thing ID number','0');
INSERT DBColumns VALUES('detectionIndex','objId','','','','object ID number (from run, camcol, field, id, rerun)','0');
INSERT DBColumns VALUES('detectionIndex','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('thingIndex','thingId','','','','thing ID number','0');
INSERT DBColumns VALUES('thingIndex','sdssPolygonID','','','','id number of polygon containing object in sdssPolygons','0');
INSERT DBColumns VALUES('thingIndex','fieldID','','','','field identification of primary field','0');
INSERT DBColumns VALUES('thingIndex','objID','','','','id of object for primary (or best) observation','0');
INSERT DBColumns VALUES('thingIndex','isPrimary','','','','Non-zero if there is a detection of this object in the primary field covering this balkan.','0');
INSERT DBColumns VALUES('thingIndex','nDetect','','','','Number of detections of this object.','0');
INSERT DBColumns VALUES('thingIndex','nEdge','','','','Number of fields in which this is a RUN_EDGE object (observation close to edge)','0');
INSERT DBColumns VALUES('thingIndex','ra','','','','DR8 Right ascension, J2000 deg','0');
INSERT DBColumns VALUES('thingIndex','dec','','','','DR8 Declination, J2000 deg','0');
INSERT DBColumns VALUES('thingIndex','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('Neighbors','objID','','ID_CATALOG','','The unique objId of the center object','0');
INSERT DBColumns VALUES('Neighbors','neighborObjID','','ID_CATALOG','','The objId of the neighbor','0');
INSERT DBColumns VALUES('Neighbors','distance','arcmins','POS_ANG_DIST_GENERAL','','Distance between center and neighbor','0');
INSERT DBColumns VALUES('Neighbors','type','','CLASS_OBJECT','','Object type of the center','0');
INSERT DBColumns VALUES('Neighbors','neighborType','','CLASS_OBJECT','','Object type of the neighbor','0');
INSERT DBColumns VALUES('Neighbors','mode','','CODE_MISC','','object is primary, secondary, family, outside','0');
INSERT DBColumns VALUES('Neighbors','neighborMode','','CODE_MISC','','is neighbor primary, secondary, family, outside','0');
INSERT DBColumns VALUES('Zone','zoneID','','EXTENSION_AREA','','id counts from -90 degrees == 0','0');
INSERT DBColumns VALUES('Zone','ra','deg','POS_EQ_RA_MAIN','','ra of object','0');
INSERT DBColumns VALUES('Zone','dec','deg','POS_EQ_DEC_MAIN','','declination of object','0');
INSERT DBColumns VALUES('Zone','objID','','ID_CATALOG','','object ID','0');
INSERT DBColumns VALUES('Zone','type','','CLASS_OBJECT','','object type (star, galaxy)','0');
INSERT DBColumns VALUES('Zone','mode','','CODE_MISC','','mode is primary, secondary, family, outside','0');
INSERT DBColumns VALUES('Zone','cx','','POS_EQ_CART_X','','Cartesian x of the object','0');
INSERT DBColumns VALUES('Zone','cy','','POS_EQ_CART_Y','','Cartesian y of the object','0');
INSERT DBColumns VALUES('Zone','cz','','POS_EQ_CART_Z','','Cartesian z of the object','0');
INSERT DBColumns VALUES('Zone','native','','CODE_MISC','','true if obj is local, false if from the destination dataset','0');
INSERT DBColumns VALUES('PlateX','plateID','','ID_PLATE','','Unique ID, composite of plate number and MJD','0');
INSERT DBColumns VALUES('PlateX','firstRelease','','','','Name of release that this plate/mjd/rerun was first distributed in','0');
INSERT DBColumns VALUES('PlateX','plate','','','','Plate number','0');
INSERT DBColumns VALUES('PlateX','mjd','days','','','MJD of observation (last)','0');
INSERT DBColumns VALUES('PlateX','mjdList','','','','List of contributing MJDs [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','survey','','','','Name of survey [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','programName','','','','Name of program [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','instrument','','','','Instrument used (SDSS or BOSS spectrograph)','0');
INSERT DBColumns VALUES('PlateX','chunk','','','','Name of tiling chunk  [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','plateRun','','','','Drilling run for plate [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','designComments','','','','Comments on the plate design from plate plans [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','plateQuality','','','','Characterization of plate quality','0');
INSERT DBColumns VALUES('PlateX','qualityComments','','','','Comments on reason for plate quality','0');
INSERT DBColumns VALUES('PlateX','plateSN2','','','','Overall signal to noise measure for plate (only set for SDSS plates)','0');
INSERT DBColumns VALUES('PlateX','deredSN2','','','','Dereddened overall signal to noise measure for plate (only set for BOSS plates)','0');
INSERT DBColumns VALUES('PlateX','ra','deg','','','RA, J2000 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dec','deg','','','Dec, J2000 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','run2d','','','','2D reduction rerun of plate','0');
INSERT DBColumns VALUES('PlateX','run1d','','','','1D reduction rerun of plate','0');
INSERT DBColumns VALUES('PlateX','runsspp','','','','SSPP reduction rerun of plate  ("none" if not run)','0');
INSERT DBColumns VALUES('PlateX','tile','','','','Tile number for SDSS-I, -II plates (-1 for SDSS-III) [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','designID','','','','Design number number for SDSS-III plates (-1 for SDSS-I, -II) [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','locationID','','','','Location number number for SDSS-III plates (-1 for SDSS-I, -II) [from platelist product]','0');
INSERT DBColumns VALUES('PlateX','iopVersion','','','','IOP Version [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','camVersion','','','','Camera code version  [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','taiHMS','','','','Time in string format [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dateObs','','','','Date of 1st row [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','timeSys','','','','Time System [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','cx','','','','x of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('PlateX','cy','','','','y of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('PlateX','cz','','','','z of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('PlateX','cartridgeID','','','','ID of cartridge used for the observation [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','tai','sec','','','Mean time (TAI) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','taiBegin','sec','','','Beginning time (TAI) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','taiEnd','sec','','','Ending time (TAI) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','airmass','','','','Airmass at central TAI time [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','mapMjd','days','','','Map MJD [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','mapName','','','','ID of mapping file [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','plugFile','','','','Full name of mapping file [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','expTime','sec','','','Total Exposure time [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','expTimeB1','sec','','','exposure time in B1 spectrograph [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','expTimeB2','sec','','','exposure time in B2 spectrograph [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','expTimeR1','sec','','','exposure time in R1 spectrograph [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','expTimeR2','sec','','','exposure time in R2 spectrograph [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','vers2d','','','','idlspec2d version used during 2d reduction [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','verscomb','','','','idlspec2d version used during combination of multiple exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','vers1d','','','','idlspec2d version used during redshift fitting [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','snturnoff','','','','Signal to noise measure for MS turnoff stars on plate (-9999 if not appropriate)','0');
INSERT DBColumns VALUES('PlateX','nturnoff','','','','Number of MS turnoff stars on plate','0');
INSERT DBColumns VALUES('PlateX','nExp','','','','Number of exposures total [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','nExpB1','','','','Number of exposures in B1 spectrograph  [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','nExpB2','','','','Number of exposures in B2 spectrograph  [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','nExpR1','','','','Number of exposures in R1 spectrograph  [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','nExpR2','','','','Number of exposures in R2 spectrograph  [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn1_g','','','','(S/N)^2 at g=20.20 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn1_r','','','','(S/N)^2 at r=20.25 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn1_i','','','','(S/N)^2 at i=19.90 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn2_g','','','','(S/N)^2 at g=20.20 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn2_r','','','','(S/N)^2 at r=20.25 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sn2_i','','','','(S/N)^2 at i=19.90 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn1_g','','','','Dereddened (S/N)^2 at g=20.20 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn1_r','','','','Dereddened (S/N)^2 at r=20.25 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn1_i','','','','Dereddened (S/N)^2 at i=19.90 for spectrograph #1 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn2_g','','','','Dereddened (S/N)^2 at g=20.20 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn2_r','','','','Dereddened (S/N)^2 at r=20.25 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','dered_sn2_i','','','','Dereddened (S/N)^2 at i=19.90 for spectrograph #2 [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','helioRV','km/s','','','Heliocentric velocity correction [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','gOffStd','mag','','','Mean g-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','gRMSStd','mag','','','Standard deviation of g-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rOffStd','mag','','','Mean r-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rRMSStd','mag','','','Standard deviation of r-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','iOffStd','mag','','','Mean i-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','iRMSStd','mag','','','Standard deviation of i-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','grOffStd','mag','','','Mean g-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','grRMSStd','mag','','','Standard deviation of g-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','riOffStd','mag','','','Mean r-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','riRMSStd','mag','','','Standard deviation of r-band mag difference (spectro - photo) for standards [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','gOffGal','mag','','','Mean g-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','gRMSGal','mag','','','Standard deviation of g-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rOffGal','mag','','','Mean r-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rRMSGal','mag','','','Standard deviation of r-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','iOffGal','mag','','','Mean i-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','iRMSGal','mag','','','Standard deviation of i-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','grOffGal','mag','','','Mean g-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','grRMSGal','mag','','','Standard deviation of g-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','riOffGal','mag','','','Mean r-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','riRMSGal','mag','','','Standard deviation of r-band mag difference (spectro - photo) for galaxies [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','nGuide','','','','Number of guider camera frames taken during the exposure [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','seeing20','','','','20th-percentile of seeing during exposure (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','seeing50','','','','50th-percentile of seeing during exposure (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','seeing80','','','','80th-percentile of seeing during exposure (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rmsoff20','','','','20th-percentile of RMS offset of guide fibers (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rmsoff50','','','','50th-percentile of RMS offset of guide fibers (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','rmsoff80','','','','80th-percentile of RMS offset of guide fibers (arcsec) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','airtemp','deg Celsius','','','Air temperature in the dome [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','sfd_used','','','','Were the SFD dust maps applied to the output spectrum? (0 = no, 1 = yes)','0');
INSERT DBColumns VALUES('PlateX','xSigma','','','','sigma of gaussian fit to spatial profile[from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','xSigMin','','','','minimum of xSigma for all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','xSigMax','','','','maximum of xSigma for all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','wSigma','','','','sigma of gaussian fit to arc-line profiles in wavelength direction [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','wSigMin','','','','minimum of wSigma for all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','wSigMax','','','','maximum of wSigma for all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','xChi2','','','','[from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','xChi2Min','','','','[from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','xChi2Max','','','','[from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','skyChi2','','','','average chi-squared from sky subtraction from all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','skyChi2Min','','','','minimum skyChi2 over all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','skyChi2Max','','','','maximum skyChi2 over all exposures [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','fBadPix','','','','Fraction of pixels that are bad (total) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','fBadPix1','','','','Fraction of pixels that are bad (spectrograph #1) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','fBadPix2','','','','Fraction of pixels that are bad (spectrograph #2) [from spPlate header]','0');
INSERT DBColumns VALUES('PlateX','status2d','','','','Status of 2D extraction','0');
INSERT DBColumns VALUES('PlateX','statuscombine','','','','Status of combination of multiple MJDs','0');
INSERT DBColumns VALUES('PlateX','status1d','','','','Status of 1D reductions','0');
INSERT DBColumns VALUES('PlateX','nTotal','','','','Number of objects total [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','nGalaxy','','','','Number of objects classified as galaxy [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','nQSO','','','','Number of objects classified as QSO [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','nStar','','','','Number of objects classified as Star [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','nSky','','','','Number of sky objects  [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','nUnknown','','','','Number of objects with zWarning set non-zero (such objects still classified as star, galaxy or QSO) [calculated from spZbest file]','0');
INSERT DBColumns VALUES('PlateX','isBest','','','','is this plateX entry the best observation of the plate','0');
INSERT DBColumns VALUES('PlateX','isPrimary','','','','is this plateX entry both good and the best observation of the plate','0');
INSERT DBColumns VALUES('PlateX','isTile','','','','is this plate the best representative  of its tile (only set for "legacy" program plates)','0');
INSERT DBColumns VALUES('PlateX','ha','deg','POS_EQ_RA','','hour angle of design [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','mjdDesign','','MJD','','MJD designed for [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','theta','','POS_POS-ANG','','cartridge position angle [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','fscanVersion','','','','version of fiber scanning software [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','fmapVersion','','','','version of fiber mapping software [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','fscanMode','','','','''slow'', ''fast'', or ''extreme'' [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','fscanSpeed','','','','speed of scan [from plPlugMapM file]','0');
INSERT DBColumns VALUES('PlateX','htmID','','','','20 deep Hierarchical Triangular Mesh ID','0');
INSERT DBColumns VALUES('PlateX','loadVersion','','','','Load Version','0');
INSERT DBColumns VALUES('SpecObjAll','specObjID','','ID_CATALOG','','Unique database ID based on PLATE, MJD, FIBERID, RUN2D','0');
INSERT DBColumns VALUES('SpecObjAll','bestObjID','','ID_MAIN','','Object ID of photoObj match (position-based)','0');
INSERT DBColumns VALUES('SpecObjAll','fluxObjID','','ID_MAIN','','Object ID of photoObj match (flux-based)','0');
INSERT DBColumns VALUES('SpecObjAll','targetObjID','','ID_CATALOG','','Object ID of original target','0');
INSERT DBColumns VALUES('SpecObjAll','plateID','','','','Database ID of Plate','0');
INSERT DBColumns VALUES('SpecObjAll','sciencePrimary','','','','Best version of spectrum at this location (defines default view SpecObj)','0');
INSERT DBColumns VALUES('SpecObjAll','sdssPrimary','','','','Best version of spectrum at this location among SDSS plates (defines default view SpecObj)','0');
INSERT DBColumns VALUES('SpecObjAll','legacyPrimary','','','','Best version of spectrum at this location, among Legacy plates','0');
INSERT DBColumns VALUES('SpecObjAll','seguePrimary','','','','Best version of spectrum at this location, among SEGUE plates','0');
INSERT DBColumns VALUES('SpecObjAll','segue1Primary','','','','Best version of spectrum at this location, among SEGUE-1 plates','0');
INSERT DBColumns VALUES('SpecObjAll','segue2Primary','','','','Best version of spectrum at this location, among SEGUE-1 plates','0');
INSERT DBColumns VALUES('SpecObjAll','bossPrimary','','','','Best version of spectrum at this location, among BOSS plates','0');
INSERT DBColumns VALUES('SpecObjAll','bossSpecObjID','','','','Index of BOSS observation in spAll flat file','0');
INSERT DBColumns VALUES('SpecObjAll','firstRelease','','','','Name of first release this object was associated with','0');
INSERT DBColumns VALUES('SpecObjAll','survey','','','','Survey name','0');
INSERT DBColumns VALUES('SpecObjAll','instrument','','','','Instrument used (SDSS or BOSS spectrograph)','0');
INSERT DBColumns VALUES('SpecObjAll','programname','','','','Program name','0');
INSERT DBColumns VALUES('SpecObjAll','chunk','','','','Chunk name','0');
INSERT DBColumns VALUES('SpecObjAll','platerun','','','','Plate drill run name','0');
INSERT DBColumns VALUES('SpecObjAll','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('SpecObjAll','plate','','','','Plate number','0');
INSERT DBColumns VALUES('SpecObjAll','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('SpecObjAll','run1d','','','','1D Reduction version of spectrum','0');
INSERT DBColumns VALUES('SpecObjAll','run2d','','','','2D Reduction version of spectrum','0');
INSERT DBColumns VALUES('SpecObjAll','tile','','','','Tile number','0');
INSERT DBColumns VALUES('SpecObjAll','designID','','','','Design ID number','0');
INSERT DBColumns VALUES('SpecObjAll','legacy_target1','','','','for Legacy program, target selection information at plate design','0');
INSERT DBColumns VALUES('SpecObjAll','legacy_target2','','','','for Legacy program target selection information at plate design, secondary/qa/calibration','0');
INSERT DBColumns VALUES('SpecObjAll','special_target1','','','','for Special program target selection information at plate design','0');
INSERT DBColumns VALUES('SpecObjAll','special_target2','','','','for Special program target selection information at plate design, secondary/qa/calibration','0');
INSERT DBColumns VALUES('SpecObjAll','segue1_target1','','','','SEGUE-1 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('SpecObjAll','segue1_target2','','','','SEGUE-1 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('SpecObjAll','segue2_target1','','','','SEGUE-2 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('SpecObjAll','segue2_target2','','','','SEGUE-2 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('SpecObjAll','boss_target1','','','','BOSS target selection information at plate','0');
INSERT DBColumns VALUES('SpecObjAll','eboss_target0','','','','EBOSS target selection information, for SEQUELS plates','0');
INSERT DBColumns VALUES('SpecObjAll','eboss_target1','','','','EBOSS target selection information, for eBOSS plates','0');
INSERT DBColumns VALUES('SpecObjAll','eboss_target2','','','','EBOSS target selection information, for TDSS, SPIDERS, ELG, etc. plates','0');
INSERT DBColumns VALUES('SpecObjAll','eboss_target_id','','','','EBOSS unique target identifier for every spectroscopic target,','0');
INSERT DBColumns VALUES('SpecObjAll','ancillary_target1','','','','BOSS ancillary science target selection information at plate design','0');
INSERT DBColumns VALUES('SpecObjAll','ancillary_target2','','','','BOSS ancillary target selection information at plate design','0');
INSERT DBColumns VALUES('SpecObjAll','thing_id_targeting','','','','thing_id value from the version of resolve from which the targeting was created','0');
INSERT DBColumns VALUES('SpecObjAll','thing_id','','','','Unique identifier from global resolve','0');
INSERT DBColumns VALUES('SpecObjAll','primTarget','','','','target selection information at plate design, primary science selection (for backwards compatibility)','0');
INSERT DBColumns VALUES('SpecObjAll','secTarget','','','','target selection information at plate design, secondary/qa/calib selection  (for backwards compatibility)','0');
INSERT DBColumns VALUES('SpecObjAll','spectrographID','','','','which spectrograph (1,2)','0');
INSERT DBColumns VALUES('SpecObjAll','sourceType','','','','For Legacy, SEGUE-2 and BOSS science targets, type of object targeted as (target bits contain full information and are recommended)','0');
INSERT DBColumns VALUES('SpecObjAll','targetType','','','','Nature of target: SCIENCE, STANDARD, or SKY','0');
INSERT DBColumns VALUES('SpecObjAll','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('SpecObjAll','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('SpecObjAll','cx','','POS_EQ_CART_X','','x of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecObjAll','cy','','POS_EQ_CART_Y','','y of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecObjAll','cz','','POS_EQ_CART_Z','','z of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecObjAll','xFocal','mm','','','X focal plane position (+RA direction)','0');
INSERT DBColumns VALUES('SpecObjAll','yFocal','mm','','','Y focal plane position (+Dec direction)','0');
INSERT DBColumns VALUES('SpecObjAll','lambdaEff','Angstroms','','','Effective wavelength that hole was drilled for (accounting for atmopheric refraction)','0');
INSERT DBColumns VALUES('SpecObjAll','blueFiber','','','','Set to 1 if this hole was designated a "blue fiber", 0 if designated a "red fiber" (high redshift LRGs are preferentially in "red fibers")','0');
INSERT DBColumns VALUES('SpecObjAll','zOffset','microns','','','Washer thickness used (for backstopping BOSS quasar targets, so they are closer to 4000 Angstrom focal plan)','0');
INSERT DBColumns VALUES('SpecObjAll','z','','','','Final Redshift','0');
INSERT DBColumns VALUES('SpecObjAll','zErr','','','','Redshift error','0');
INSERT DBColumns VALUES('SpecObjAll','zWarning','','','','Bitmask of warning values; 0 means all is well','0');
INSERT DBColumns VALUES('SpecObjAll','class','','','','Spectroscopic class (GALAXY, QSO, or STAR)','0');
INSERT DBColumns VALUES('SpecObjAll','subClass','','','','Spectroscopic subclass','0');
INSERT DBColumns VALUES('SpecObjAll','rChi2','','','','Reduced chi-squared of best fit','0');
INSERT DBColumns VALUES('SpecObjAll','DOF','','','','Degrees of freedom in best fit','0');
INSERT DBColumns VALUES('SpecObjAll','rChi2Diff','','','','Difference in reduced chi-squared between best and second best fit','0');
INSERT DBColumns VALUES('SpecObjAll','z_noqso','','','','Best redshift when excluding QSO fit (right redshift to use for galaxy targets)','0');
INSERT DBColumns VALUES('SpecObjAll','zErr_noqso','','','','Error in "z_noqso" redshift','0');
INSERT DBColumns VALUES('SpecObjAll','zWarning_noqso','','','','Warnings in "z_noqso" redshift','0');
INSERT DBColumns VALUES('SpecObjAll','class_noqso','','','','Classification in "z_noqso" redshift','0');
INSERT DBColumns VALUES('SpecObjAll','subClass_noqso','','','','Sub-classification in "z_noqso" redshift','0');
INSERT DBColumns VALUES('SpecObjAll','rChi2Diff_noqso','','','','Reduced chi-squared difference from next best redshift, for "z_noqso" redshift','0');
INSERT DBColumns VALUES('SpecObjAll','z_person','','','','Person-assigned redshift, if this object has been inspected','0');
INSERT DBColumns VALUES('SpecObjAll','class_person','','','','Person-assigned classification, if this object has been inspected','0');
INSERT DBColumns VALUES('SpecObjAll','comments_person','','','','Comments from person for inspected objects','0');
INSERT DBColumns VALUES('SpecObjAll','tFile','','','','File name of best fit template source','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_0','','','','Which column of the template file corresponds to template #0','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_1','','','','Which column of the template file corresponds to template #1','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_2','','','','Which column of the template file corresponds to template #2','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_3','','','','Which column of the template file corresponds to template #3','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_4','','','','Which column of the template file corresponds to template #4','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_5','','','','Which column of the template file corresponds to template #5','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_6','','','','Which column of the template file corresponds to template #6','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_7','','','','Which column of the template file corresponds to template #7','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_8','','','','Which column of the template file corresponds to template #8','0');
INSERT DBColumns VALUES('SpecObjAll','tColumn_9','','','','Which column of the template file corresponds to template #9','0');
INSERT DBColumns VALUES('SpecObjAll','nPoly','','','','Number of polynomial terms used in the fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_0','','','','Coefficient for template #0 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_1','','','','Coefficient for template #1 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_2','','','','Coefficient for template #2 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_3','','','','Coefficient for template #3 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_4','','','','Coefficient for template #4 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_5','','','','Coefficient for template #5 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_6','','','','Coefficient for template #6 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_7','','','','Coefficient for template #7 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_8','','','','Coefficient for template #8 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','theta_9','','','','Coefficient for template #9 of fit','0');
INSERT DBColumns VALUES('SpecObjAll','velDisp','km/s','','','Velocity dispersion','0');
INSERT DBColumns VALUES('SpecObjAll','velDispErr','km/s','','','Error in velocity dispersion','0');
INSERT DBColumns VALUES('SpecObjAll','velDispZ','','','','Redshift associated with best fit velocity dispersion','0');
INSERT DBColumns VALUES('SpecObjAll','velDispZErr','','','','Error in redshift associated with best fit velocity dispersion','0');
INSERT DBColumns VALUES('SpecObjAll','velDispChi2','','','','Chi-squared associated with velocity dispersion fit','0');
INSERT DBColumns VALUES('SpecObjAll','velDispNPix','','','','Number of pixels overlapping best template in velocity dispersion fit','0');
INSERT DBColumns VALUES('SpecObjAll','velDispDOF','','','','Number of degrees of freedom in velocity dispersion fit','0');
INSERT DBColumns VALUES('SpecObjAll','waveMin','Angstroms','','','Minimum observed (vacuum) wavelength','0');
INSERT DBColumns VALUES('SpecObjAll','waveMax','Angstroms','','','Maximum observed (vacuum) wavelength','0');
INSERT DBColumns VALUES('SpecObjAll','wCoverage','','','','Coverage in wavelength, in units of log10 wavelength','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian_u','','','','Median signal-to-noise over all good pixels in u-band','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian_g','','','','Median signal-to-noise over all good pixels in g-band','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian_r','','','','Median signal-to-noise over all good pixels in r-band','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian_i','','','','Median signal-to-noise over all good pixels in i-band','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian_z','','','','Median signal-to-noise over all good pixels in z-band','0');
INSERT DBColumns VALUES('SpecObjAll','snMedian','','','','Median signal-to-noise over all good pixels','0');
INSERT DBColumns VALUES('SpecObjAll','chi68p','','','','68-th percentile value of abs(chi) of the best-fit synthetic spectrum to the actual spectrum (around 1.0 for a good fit)','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_1','','','','Fraction of pixels deviant by more than 1 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_2','','','','Fraction of pixels deviant by more than 2 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_3','','','','Fraction of pixels deviant by more than 3 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_4','','','','Fraction of pixels deviant by more than 4 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_5','','','','Fraction of pixels deviant by more than 5 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_6','','','','Fraction of pixels deviant by more than 6 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_7','','','','Fraction of pixels deviant by more than 7 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_8','','','','Fraction of pixels deviant by more than 8 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_9','','','','Fraction of pixels deviant by more than 9 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigma_10','','','','Fraction of pixels deviant by more than 10 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_1','','','','Fraction of pixels high by more than 1 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_2','','','','Fraction of pixels high by more than 2 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_3','','','','Fraction of pixels high by more than 3 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_4','','','','Fraction of pixels high by more than 4 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_5','','','','Fraction of pixels high by more than 5 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_6','','','','Fraction of pixels high by more than 6 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_7','','','','Fraction of pixels high by more than 7 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_8','','','','Fraction of pixels high by more than 8 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_9','','','','Fraction of pixels high by more than 9 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigHi_10','','','','Fraction of pixels high by more than 10 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_1','','','','Fraction of pixels low by more than 1 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_2','','','','Fraction of pixels low by more than 2 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_3','','','','Fraction of pixels low by more than 3 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_4','','','','Fraction of pixels low by more than 4 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_5','','','','Fraction of pixels low by more than 5 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_6','','','','Fraction of pixels low by more than 6 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_7','','','','Fraction of pixels low by more than 7 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_8','','','','Fraction of pixels low by more than 8 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_9','','','','Fraction of pixels low by more than 9 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','fracNSigLo_10','','','','Fraction of pixels low by more than 10 sigma relative to best-fit','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFlux_u','nanomaggies','','','Spectrum projected onto u filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFlux_g','nanomaggies','','','Spectrum projected onto g filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFlux_r','nanomaggies','','','Spectrum projected onto r filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFlux_i','nanomaggies','','','Spectrum projected onto i filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFlux_z','nanomaggies','','','Spectrum projected onto z filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFlux_u','nanomaggies','','','Best-fit template spectrum projected onto u filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFlux_g','nanomaggies','','','Best-fit template spectrum projected onto g filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFlux_r','nanomaggies','','','Best-fit template spectrum projected onto r filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFlux_i','nanomaggies','','','Best-fit template spectrum projected onto i filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFlux_z','nanomaggies','','','Best-fit template spectrum projected onto z filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFluxIvar_u','1/nanomaggies^2','','','Inverse variance of spectrum projected onto u filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFluxIvar_g','1/nanomaggies^2','','','Inverse variance of spectrum projected onto g filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFluxIvar_r','1/nanomaggies^2','','','Inverse variance of spectrum projected onto r filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFluxIvar_i','1/nanomaggies^2','','','Inverse variance of spectrum projected onto i filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroFluxIvar_z','1/nanomaggies^2','','','Inverse variance of spectrum projected onto z filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFluxIvar_u','1/nanomaggies^2','','','Inverse variance of best-fit template spectrum projected onto u filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFluxIvar_g','1/nanomaggies^2','','','Inverse variance of best-fit template spectrum projected onto g filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFluxIvar_r','1/nanomaggies^2','','','Inverse variance of best-fit template spectrum projected onto r filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFluxIvar_i','1/nanomaggies^2','','','Inverse variance of best-fit template spectrum projected onto i filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSynFluxIvar_z','1/nanomaggies^2','','','Inverse variance of best-fit template spectrum projected onto z filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSkyFlux_u','nanomaggies','','','Sky spectrum projected onto u filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSkyFlux_g','nanomaggies','','','Sky spectrum projected onto g filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSkyFlux_r','nanomaggies','','','Sky spectrum projected onto r filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSkyFlux_i','nanomaggies','','','Sky spectrum projected onto i filter','0');
INSERT DBColumns VALUES('SpecObjAll','spectroSkyFlux_z','nanomaggies','','','Sky spectrum projected onto z filter','0');
INSERT DBColumns VALUES('SpecObjAll','anyAndMask','','','','For each bit, records whether any pixel in the spectrum has that bit set in its ANDMASK','0');
INSERT DBColumns VALUES('SpecObjAll','anyOrMask','','','','For each bit, records whether any pixel in the spectrum has that bit set in its ORMASK','0');
INSERT DBColumns VALUES('SpecObjAll','plateSN2','','','','Overall signal-to-noise-squared measure for plate (only set for SDSS spectrograph)','0');
INSERT DBColumns VALUES('SpecObjAll','deredSN2','','','','Dereddened signal-to-noise-squared measure for plate (only set for BOSS spectrograph)','0');
INSERT DBColumns VALUES('SpecObjAll','snTurnoff','','','','Signal to noise measure for MS turnoff stars on plate (-9999 if not appropriate)','0');
INSERT DBColumns VALUES('SpecObjAll','sn1_g','','','','(S/N)^2 at g=20.20 for spectrograph #1','0');
INSERT DBColumns VALUES('SpecObjAll','sn1_r','','','','(S/N)^2 at r=20.25 for spectrograph #1','0');
INSERT DBColumns VALUES('SpecObjAll','sn1_i','','','','(S/N)^2 at i=19.90 for spectrograph #1','0');
INSERT DBColumns VALUES('SpecObjAll','sn2_g','','','','(S/N)^2 at g=20.20 for spectrograph #2','0');
INSERT DBColumns VALUES('SpecObjAll','sn2_r','','','','(S/N)^2 at r=20.25 for spectrograph #2','0');
INSERT DBColumns VALUES('SpecObjAll','sn2_i','','','','(S/N)^2 at i=19.90 for spectrograph #2','0');
INSERT DBColumns VALUES('SpecObjAll','elodieFileName','','','','File name for best-fit Elodie star','0');
INSERT DBColumns VALUES('SpecObjAll','elodieObject','','','','Star name (mostly Henry Draper names)','0');
INSERT DBColumns VALUES('SpecObjAll','elodieSpType','','','','Spectral type','0');
INSERT DBColumns VALUES('SpecObjAll','elodieBV','mag','','','(B-V) color','0');
INSERT DBColumns VALUES('SpecObjAll','elodieTEff','Kelvin','','','Effective temperature','0');
INSERT DBColumns VALUES('SpecObjAll','elodieLogG','','','','log10(gravity)','0');
INSERT DBColumns VALUES('SpecObjAll','elodieFeH','','','','Metallicity ([Fe/H])','0');
INSERT DBColumns VALUES('SpecObjAll','elodieZ','','','','Redshift','0');
INSERT DBColumns VALUES('SpecObjAll','elodieZErr','','','','Redshift error (negative for invalid fit)','0');
INSERT DBColumns VALUES('SpecObjAll','elodieZModelErr','','','','Standard deviation in redshift among the 12 best-fit stars','0');
INSERT DBColumns VALUES('SpecObjAll','elodieRChi2','','','','Reduced chi^2','0');
INSERT DBColumns VALUES('SpecObjAll','elodieDOF','','','','Degrees of freedom for fit','0');
INSERT DBColumns VALUES('SpecObjAll','htmID','','CODE_HTM','','20 deep Hierarchical Triangular Mesh ID','0');
INSERT DBColumns VALUES('SpecObjAll','loadVersion','','ID_TRACER','','Load Version','0');
INSERT DBColumns VALUES('SpecObjAll','img','','IMAGE?','','Spectrum Image','0');
INSERT DBColumns VALUES('SpecPhotoAll','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('SpecPhotoAll','mjd','MJD','TIME_DATE','','MJD of observation','0');
INSERT DBColumns VALUES('SpecPhotoAll','plate','','ID_PLATE','','Plate ID','0');
INSERT DBColumns VALUES('SpecPhotoAll','tile','','ID_PLATE','','Tile ID','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberID','','ID_FIBER','','Fiber ID','0');
INSERT DBColumns VALUES('SpecPhotoAll','z','','REDSHIFT','','Final Redshift','0');
INSERT DBColumns VALUES('SpecPhotoAll','zErr','','REDSHIFT ERROR','','Redshift error','0');
INSERT DBColumns VALUES('SpecPhotoAll','class','','','','Spectroscopic class (GALAXY, QSO, or STAR)','0');
INSERT DBColumns VALUES('SpecPhotoAll','subClass','','','','Spectroscopic subclass','0');
INSERT DBColumns VALUES('SpecPhotoAll','zWarning','','CODE_QUALITY','SpeczWarning','Warning Flags','0');
INSERT DBColumns VALUES('SpecPhotoAll','ra','deg','POS_EQ_RA_MAIN','','ra in J2000 from SpecObj','0');
INSERT DBColumns VALUES('SpecPhotoAll','dec','deg','POS_EQ_DEC_MAIN','','dec in J2000 from SpecObj','0');
INSERT DBColumns VALUES('SpecPhotoAll','cx','','POS_EQ_CART_X?','','x of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecPhotoAll','cy','','POS_EQ_CART_Y?','','y of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecPhotoAll','cz','','POS_EQ_CART_Z?','','z of Normal unit vector in J2000','0');
INSERT DBColumns VALUES('SpecPhotoAll','htmID','','CODE_HTM','','20 deep Hierarchical Triangular Mesh ID','0');
INSERT DBColumns VALUES('SpecPhotoAll','sciencePrimary','','','','Best version of spectrum at this location (defines default view SpecObj)','0');
INSERT DBColumns VALUES('SpecPhotoAll','legacyPrimary','','','','Best version of spectrum at this location, among Legacy plates','0');
INSERT DBColumns VALUES('SpecPhotoAll','seguePrimary','','','','Best version of spectrum at this location, among SEGUE plates (defines default view SpecObj)','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue1Primary','','','','Best version of spectrum at this location, among SEGUE-1 plates','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue2Primary','','','','Best version of spectrum at this location, among SEGUE-2 plates','0');
INSERT DBColumns VALUES('SpecPhotoAll','bossPrimary','','','','Best version of spectrum at this location, among BOSS plates','0');
INSERT DBColumns VALUES('SpecPhotoAll','sdssPrimary','','','','Best version of spectrum at this location among SDSS plates','0');
INSERT DBColumns VALUES('SpecPhotoAll','survey','','','','Survey name','0');
INSERT DBColumns VALUES('SpecPhotoAll','programname','','','','Program name','0');
INSERT DBColumns VALUES('SpecPhotoAll','legacy_target1','','','PrimTarget','for Legacy program, target selection information at plate design','0');
INSERT DBColumns VALUES('SpecPhotoAll','legacy_target2','','','SecTarget','for Legacy program target selection information at plate design, secondary/qa/calibration','0');
INSERT DBColumns VALUES('SpecPhotoAll','special_target1','','','SpecialTarget1','for Special program target selection information at plate design','0');
INSERT DBColumns VALUES('SpecPhotoAll','special_target2','','','SpecialTarget2','for Special program target selection information at plate design, secondary/qa/calibration','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue1_target1','','','Segue1Target1','SEGUE-1 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue1_target2','','','Segue1Target2','SEGUE-1 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue2_target1','','','Segue2Target1','SEGUE-2 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('SpecPhotoAll','segue2_target2','','','Segue2Target2','SEGUE-2 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('SpecPhotoAll','boss_target1','','','BossTarget1','BOSS target selection information at plate','0');
INSERT DBColumns VALUES('SpecPhotoAll','ancillary_target1','','','AncillaryTarget1','BOSS ancillary science target selection information at plate design','0');
INSERT DBColumns VALUES('SpecPhotoAll','ancillary_target2','','','AncillaryTarget2','BOSS ancillary target selection information at plate design','0');
INSERT DBColumns VALUES('SpecPhotoAll','plateID','','ID_PLATE','','Link to plate on which the spectrum was taken','0');
INSERT DBColumns VALUES('SpecPhotoAll','sourceType','','CLASS_OBJECT','sourceType','type of object targeted as','0');
INSERT DBColumns VALUES('SpecPhotoAll','targetObjID','','ID_CATALOG','','ID of target PhotoObj','0');
INSERT DBColumns VALUES('SpecPhotoAll','objID','','ID_CATALOG','','Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('SpecPhotoAll','skyVersion','','CODE_MISC','','0 = OPDB target, 1 = OPDB best','0');
INSERT DBColumns VALUES('SpecPhotoAll','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('SpecPhotoAll','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('SpecPhotoAll','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('SpecPhotoAll','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('SpecPhotoAll','obj','','ID_NUMBER','','The object id within a field. Usually changes between reruns of the same field.','0');
INSERT DBColumns VALUES('SpecPhotoAll','mode','','CLASS_OBJECT','','1: primary, 2: secondary, 3: family object.','0');
INSERT DBColumns VALUES('SpecPhotoAll','nChild','','NUMBER','','Number of children if this is a deblened composite object. BRIGHT (in a flags sense) objects also have nchild==1, the non-BRIGHT sibling.','0');
INSERT DBColumns VALUES('SpecPhotoAll','type','','CLASS_OBJECT','PhotoType','Morphological type classification of the object.','0');
INSERT DBColumns VALUES('SpecPhotoAll','flags','','CODE_MISC','PhotoFlags','Photo Object Attribute Flags','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMag_u','mag','PHOT_SDSS_U','','PSF flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMag_g','mag','PHOT_SDSS_G','','PSF flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMag_r','mag','PHOT_SDSS_R','','PSF flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMag_i','mag','PHOT_SDSS_I','','PSF flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMag_z','mag','PHOT_SDSS_Z','','PSF flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMagErr_u','mag','PHOT_SDSS_U ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMagErr_g','mag','PHOT_SDSS_G ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMagErr_r','mag','PHOT_SDSS_R ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMagErr_i','mag','PHOT_SDSS_I ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','psfMagErr_z','mag','PHOT_SDSS_Z ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMag_u','mag','PHOT_SDSS_U','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMag_g','mag','PHOT_SDSS_G','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMag_r','mag','PHOT_SDSS_R','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMag_i','mag','PHOT_SDSS_I','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMag_z','mag','PHOT_SDSS_Z','','Flux in 3 arcsec diameter fiber radius','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMagErr_u','mag','PHOT_SDSS_U ERROR','','Flux in 3 arcsec diameter fiber radius error','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMagErr_g','mag','PHOT_SDSS_G ERROR','','Flux in 3 arcsec diameter fiber radius error','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMagErr_r','mag','PHOT_SDSS_R ERROR','','Flux in 3 arcsec diameter fiber radius error','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMagErr_i','mag','PHOT_SDSS_I ERROR','','Flux in 3 arcsec diameter fiber radius error','0');
INSERT DBColumns VALUES('SpecPhotoAll','fiberMagErr_z','mag','PHOT_SDSS_Z ERROR','','Flux in 3 arcsec diameter fiber radius error','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMag_u','mag','PHOT_SDSS_U','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMag_g','mag','PHOT_SDSS_G','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMag_r','mag','PHOT_SDSS_R','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMag_i','mag','PHOT_SDSS_I','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMag_z','mag','PHOT_SDSS_Z','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMagErr_u','mag','PHOT_SDSS_U ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMagErr_g','mag','PHOT_SDSS_G ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMagErr_r','mag','PHOT_SDSS_R ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMagErr_i','mag','PHOT_SDSS_I ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','petroMagErr_z','mag','PHOT_SDSS_Z ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMag_u','mag','PHOT_SDSS_U FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMag_g','mag','PHOT_SDSS_G FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMag_r','mag','PHOT_SDSS_R FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMag_i','mag','PHOT_SDSS_I FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMag_z','mag','PHOT_SDSS_Z FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMagErr_u','mag','PHOT_SDSS_U ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMagErr_g','mag','PHOT_SDSS_G ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMagErr_r','mag','PHOT_SDSS_R ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMagErr_i','mag','PHOT_SDSS_I ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecPhotoAll','modelMagErr_z','mag','PHOT_SDSS_Z ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMag_u','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMag_g','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMag_r','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMag_i','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMag_z','mag','','','DeV+Exp magnitude','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMagErr_u','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMagErr_g','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMagErr_r','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMagErr_i','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('SpecPhotoAll','cModelMagErr_z','mag','','','DeV+Exp magnitude error','0');
INSERT DBColumns VALUES('SpecPhotoAll','mRrCc_r','','FIT_PARAM','','Adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('SpecPhotoAll','mRrCcErr_r','','FIT_PARAM ERROR','','Error in adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('SpecPhotoAll','score','','','','Quality of field (0-1)','0');
INSERT DBColumns VALUES('SpecPhotoAll','resolveStatus','','','','Resolve status of object','0');
INSERT DBColumns VALUES('SpecPhotoAll','calibStatus_u','','','','Calibration status in u-band','0');
INSERT DBColumns VALUES('SpecPhotoAll','calibStatus_g','','','','Calibration status in g-band','0');
INSERT DBColumns VALUES('SpecPhotoAll','calibStatus_r','','','','Calibration status in r-band','0');
INSERT DBColumns VALUES('SpecPhotoAll','calibStatus_i','','','','Calibration status in i-band','0');
INSERT DBColumns VALUES('SpecPhotoAll','calibStatus_z','','','','Calibration status in z-band','0');
INSERT DBColumns VALUES('SpecPhotoAll','photoRa','deg','POS_EQ_RA_MAIN','','J2000 right ascension (r'') from Best','0');
INSERT DBColumns VALUES('SpecPhotoAll','photoDec','deg','POS_EQ_DEC_MAIN','','J2000 declination (r'') from Best','0');
INSERT DBColumns VALUES('SpecPhotoAll','extinction_u','mag','PHOT_EXTINCTION_GAL','','Reddening in each filter','0');
INSERT DBColumns VALUES('SpecPhotoAll','extinction_g','mag','PHOT_EXTINCTION_GAL','','Reddening in each filter','0');
INSERT DBColumns VALUES('SpecPhotoAll','extinction_r','mag','PHOT_EXTINCTION_GAL','','Reddening in each filter','0');
INSERT DBColumns VALUES('SpecPhotoAll','extinction_i','mag','PHOT_EXTINCTION_GAL','','Reddening in each filter','0');
INSERT DBColumns VALUES('SpecPhotoAll','extinction_z','mag','PHOT_EXTINCTION_GAL','','Reddening in each filter','0');
INSERT DBColumns VALUES('SpecPhotoAll','fieldID','','ID_FIELD','','Link to the field this object is in','0');
INSERT DBColumns VALUES('SpecPhotoAll','dered_u','mag','PHOT_SDSS_U','','Simplified mag, corrected for reddening: modelMag-reddening','0');
INSERT DBColumns VALUES('SpecPhotoAll','dered_g','mag','PHOT_SDSS_G','','Simplified mag, corrected for reddening: modelMag-reddening','0');
INSERT DBColumns VALUES('SpecPhotoAll','dered_r','mag','PHOT_SDSS_R','','Simplified mag, corrected for reddening: modelMag-reddening','0');
INSERT DBColumns VALUES('SpecPhotoAll','dered_i','mag','PHOT_SDSS_I','','Simplified mag, corrected for reddening: modelMag-reddening','0');
INSERT DBColumns VALUES('SpecPhotoAll','dered_z','mag','PHOT_SDSS_Z','','Simplified mag, corrected for reddening: modelMag-reddening','0');
INSERT DBColumns VALUES('SpecDR7','specObjID','','ID_CATALOG','','Unique DR8 ID based on PLATE, MJD, FIBERID, RUN2D','0');
INSERT DBColumns VALUES('SpecDR7','dr7ObjID','','ID_MAIN','','Unique DR7 PhotoPrimary ID composed from [skyVersion,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('SpecDR7','ra','deg','POS_EQ_RA_MAIN','','J2000 right ascension (r'')','0');
INSERT DBColumns VALUES('SpecDR7','dec','deg','POS_EQ_DEC_MAIN','','J2000 declination (r'')','0');
INSERT DBColumns VALUES('SpecDR7','cx','','POS_EQ_CART_X','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('SpecDR7','cy','','POS_EQ_CART_Y','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('SpecDR7','cz','','POS_EQ_CART_Z','','unit vector for ra+dec','0');
INSERT DBColumns VALUES('SpecDR7','skyVersion','','CODE_MISC','','0 = OPDB target, 1 = OPDB best','0');
INSERT DBColumns VALUES('SpecDR7','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('SpecDR7','rerun','','CODE_MISC','','Rerun number','0');
INSERT DBColumns VALUES('SpecDR7','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('SpecDR7','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('SpecDR7','obj','','ID_NUMBER','','The object id within a field. Usually changes between reruns of the same field.','0');
INSERT DBColumns VALUES('SpecDR7','nChild','','NUMBER','','Number of children if this is a composite object that has been deblended. BRIGHT (in a flags sense) objects also have nchild == 1, the non-BRIGHT sibling.','0');
INSERT DBColumns VALUES('SpecDR7','type','','CLASS_OBJECT','PhotoType','Morphological type classification of the object.','0');
INSERT DBColumns VALUES('SpecDR7','probPSF','','STAT_PROBABILITY','','Probability that the object is a star. Currently 0 if type == 3 (galaxy), 1 if type == 6 (star).','0');
INSERT DBColumns VALUES('SpecDR7','insideMask','','CODE_MISC','InsideMask','Flag to indicate whether object is inside a mask and why','0');
INSERT DBColumns VALUES('SpecDR7','flags','','CODE_MISC','PhotoFlags','Photo Object Attribute Flags','0');
INSERT DBColumns VALUES('SpecDR7','psfMag_u','mag','PHOT_SDSS_U','','PSF flux','0');
INSERT DBColumns VALUES('SpecDR7','psfMag_g','mag','PHOT_SDSS_G','','PSF flux','0');
INSERT DBColumns VALUES('SpecDR7','psfMag_r','mag','PHOT_SDSS_R','','PSF flux','0');
INSERT DBColumns VALUES('SpecDR7','psfMag_i','mag','PHOT_SDSS_I','','PSF flux','0');
INSERT DBColumns VALUES('SpecDR7','psfMag_z','mag','PHOT_SDSS_Z','','PSF flux','0');
INSERT DBColumns VALUES('SpecDR7','psfMagErr_u','mag','PHOT_SDSS_U ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecDR7','psfMagErr_g','mag','PHOT_SDSS_G ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecDR7','psfMagErr_r','mag','PHOT_SDSS_R ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecDR7','psfMagErr_i','mag','PHOT_SDSS_I ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecDR7','psfMagErr_z','mag','PHOT_SDSS_Z ERROR','','PSF flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroMag_u','mag','PHOT_SDSS_U','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroMag_g','mag','PHOT_SDSS_G','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroMag_r','mag','PHOT_SDSS_R','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroMag_i','mag','PHOT_SDSS_I','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroMag_z','mag','PHOT_SDSS_Z','','Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroMagErr_u','mag','PHOT_SDSS_U ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroMagErr_g','mag','PHOT_SDSS_G ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroMagErr_r','mag','PHOT_SDSS_R ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroMagErr_i','mag','PHOT_SDSS_I ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroMagErr_z','mag','PHOT_SDSS_Z ERROR','','Petrosian flux error','0');
INSERT DBColumns VALUES('SpecDR7','petroR50_r','arcsec','EXTENSION_RAD','','Radius containing 50% of Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','petroR90_r','arcsec','EXTENSION_RAD','','Radius containing 90% of Petrosian flux','0');
INSERT DBColumns VALUES('SpecDR7','modelMag_u','mag','PHOT_SDSS_U FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecDR7','modelMag_g','mag','PHOT_SDSS_G FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecDR7','modelMag_r','mag','PHOT_SDSS_R FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecDR7','modelMag_i','mag','PHOT_SDSS_I FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecDR7','modelMag_z','mag','PHOT_SDSS_Z FIT_PARAM','','better of DeV/Exp magnitude fit','0');
INSERT DBColumns VALUES('SpecDR7','modelMagErr_u','mag','PHOT_SDSS_U ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecDR7','modelMagErr_g','mag','PHOT_SDSS_G ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecDR7','modelMagErr_r','mag','PHOT_SDSS_R ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecDR7','modelMagErr_i','mag','PHOT_SDSS_I ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecDR7','modelMagErr_z','mag','PHOT_SDSS_Z ERROR','','better of DeV/Exp magnitude fit error','0');
INSERT DBColumns VALUES('SpecDR7','mRrCc_r','','FIT_PARAM','','Adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('SpecDR7','mRrCcErr_r','','FIT_PARAM ERROR','','Error in adaptive (&lt;r^2&gt; + &lt;c^2&gt;)','0');
INSERT DBColumns VALUES('SpecDR7','lnLStar_r','','FIT_GOODNESS','','Star ln(likelihood)','0');
INSERT DBColumns VALUES('SpecDR7','lnLExp_r','','FIT_GOODNESS','','Exponential disk fit ln(likelihood)','0');
INSERT DBColumns VALUES('SpecDR7','lnLDeV_r','','FIT_GOODNESS','','DeVaucouleurs fit ln(likelihood)','0');
INSERT DBColumns VALUES('SpecDR7','status','','CODE_MISC','PhotoStatus','Status of the object in the survey','0');
INSERT DBColumns VALUES('SpecDR7','primTarget','','CODE_MISC','PrimTarget','Bit mask of primary target categories the object was selected in.','0');
INSERT DBColumns VALUES('SpecDR7','secTarget','','CODE_MISC','SecTarget','Bit mask of secondary target categories the object was selected in.','0');
INSERT DBColumns VALUES('SpecDR7','extinction_u','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('SpecDR7','extinction_g','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('SpecDR7','extinction_r','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('SpecDR7','extinction_i','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('SpecDR7','extinction_z','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('SpecDR7','htmID','','CODE_HTM','','20-deep hierarchical trangular mesh ID of this object','0');
INSERT DBColumns VALUES('SpecDR7','fieldID','','ID_FIELD','','Link to the field this object is in','0');
INSERT DBColumns VALUES('SpecDR7','size','','','','computed: =SQRT(mRrCc_r/2.0)','0');
INSERT DBColumns VALUES('SpecDR7','pmRa','mas/year','POS_PM_RA','','Proper motion in right ascension.','0');
INSERT DBColumns VALUES('SpecDR7','pmDec','mas/year','POS_PM_DEC','','Proper motion in declination.','0');
INSERT DBColumns VALUES('SpecDR7','pmL','mas/year','POS_PM','','Proper motion in galactic longitude.','0');
INSERT DBColumns VALUES('SpecDR7','pmB','mas/year','POS_PM','','Proper motion in galactic latitude.','0');
INSERT DBColumns VALUES('SpecDR7','pmRaErr','mas/year','POS_PM_RA_ERR','','Error in proper motion in right ascension.','0');
INSERT DBColumns VALUES('SpecDR7','pmDecErr','mas/year','POS_PM_DEC_ERR','','Error in proper motion in declination.','0');
INSERT DBColumns VALUES('SpecDR7','delta','arcsec','POS_ANG_DIST_GENERAL','','Distance between this object and the nearest matching USNO-B object.','0');
INSERT DBColumns VALUES('SpecDR7','match','','CODE_MISC','','Number of objects in USNO-B which matched this object within a 1 arcsec radius.  If negative, then the nearest matching USNO-B object itself matched more than 1 SDSS object.','0');
INSERT DBColumns VALUES('sdssEbossFirefly','SPECOBJID','no unit','','','Unique database ID based on PLATE, MJD, FIBERID, RUN2D','0');
INSERT DBColumns VALUES('sdssEbossFirefly','RUN2D','no unit','','','version of the 2d reduction pipeline','0');
INSERT DBColumns VALUES('sdssEbossFirefly','RUN1D','no unit','','','version of the 1d reduction pipeline','0');
INSERT DBColumns VALUES('sdssEbossFirefly','PLATE','no unit','','','Plate number','0');
INSERT DBColumns VALUES('sdssEbossFirefly','MJD','days','','','MJD of observation','0');
INSERT DBColumns VALUES('sdssEbossFirefly','FIBERID','no unit','','','Fiber identification number','0');
INSERT DBColumns VALUES('sdssEbossFirefly','RA','degrees','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('sdssEbossFirefly','DEC','degrees','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Z_NOQSO','no unit','','','Best redshift','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Z_ERR_NOQSO','no unit','','','Error in redshift','0');
INSERT DBColumns VALUES('sdssEbossFirefly','CLASS_NOQSO','no unit','','','Classification in redshift','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_lightW','age in years (light weighted)','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_lightW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_lightW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_lightW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_lightW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_lightW','metallicity in solar metallicities (light weighted)','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_lightW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_lightW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_lightW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_lightW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_massW','age in years (mass weighted)','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_massW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_massW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_massW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_age_massW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_massW','metallicity in solar metallicities (mass weighted)','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_massW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_massW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_massW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_metallicity_massW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_total_mass','mass in solar mass','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_total_mass_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_total_mass_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_total_mass_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_total_mass_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_spm_EBV','E(B-V) mag','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_MILES_nComponentsSSP','number of components','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_lightW','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_lightW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_lightW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_lightW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_lightW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_lightW','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_lightW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_lightW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_lightW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_lightW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_massW','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_massW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_massW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_massW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_age_massW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_massW','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_massW_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_massW_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_massW_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_metallicity_massW_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_total_mass','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_total_mass_up_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_total_mass_low_1sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_total_mass_up_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_total_mass_low_2sig','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_spm_EBV','','','','','0');
INSERT DBColumns VALUES('sdssEbossFirefly','Chabrier_ELODIE_nComponentsSSP','','','','','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','zErr','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','zNum','','','','Index of chi^2 minimum corresponding to z_noqso','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_median','dex (solar masses)','','','median (50th percentile of PDF) of log stellar mass (best estimator)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_err','dex (solar masses)','','','1-sigma error in log stellar mass (84th minus 16th percential)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_p2p5','dex (solar masses)','','','2.5th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_p16','dex (solar masses)','','','16th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_p84','dex (solar masses)','','','84th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','mstellar_p97p5','dex (solar masses)','','','97.5th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_median','km/s','','','median (50th percentile of PDF) of velocity dispersion (best estimator)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_err','km/s','','','1-sigma error in velocity dispersion (84th minus 16th percential)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_p2p5','km/s','','','2.5th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_p16','km/s','','','16th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_p84','km/s','','','84th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','vdisp_p97p5','km/s','','','97.5th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_0','','','','Coefficient for 0th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_1','','','','Coefficient for 1th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_2','','','','Coefficient for 2th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_3','','','','Coefficient for 3th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_4','','','','Coefficient for 4th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_5','','','','Coefficient for 5th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_6','','','','Coefficient for 6th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','calpha_norm','','','','Overall normalization for best-fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscBC03','warning','','','','Output warnings: 0 if everything is fine.','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','zErr','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','zNum','','','','Index of chi^2 minimum corresponding to z_noqso','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_median','dex (solar masses)','','','median (50th percentile of PDF) of log stellar mass (best estimator)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_err','dex (solar masses)','','','1-sigma error in log stellar mass (84th minus 16th percential)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_p2p5','dex (solar masses)','','','2.5th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_p16','dex (solar masses)','','','16th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_p84','dex (solar masses)','','','84th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','mstellar_p97p5','dex (solar masses)','','','97.5th percentile of PDF of log stellar mass','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_median','km/s','','','median (50th percentile of PDF) of velocity dispersion (best estimator)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_err','km/s','','','1-sigma error in velocity dispersion (84th minus 16th percential)','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_p2p5','km/s','','','2.5th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_p16','km/s','','','16th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_p84','km/s','','','84th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','vdisp_p97p5','km/s','','','97.5th percentile of PDF of velocity dispersion','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_0','','','','Coefficient for 0th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_1','','','','Coefficient for 1th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_2','','','','Coefficient for 2th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_3','','','','Coefficient for 3th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_4','','','','Coefficient for 4th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_5','','','','Coefficient for 5th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_6','','','','Coefficient for 6th eigenspectrum in fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','calpha_norm','','','','Overall normalization for best-fit','0');
INSERT DBColumns VALUES('stellarMassPCAWiscM11','warning','','','','Output warnings: 0 if everything is fine.','0');
INSERT DBColumns VALUES('stellarMassPassivePort','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassPassivePort','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassPassivePort','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassPassivePort','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassPassivePort','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPassivePort','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassPassivePort','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','zErr','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassPassivePort','minLogMass','dex (solar masses)','','','1-sigma minimum stellar mass (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','maxLogMass','dex (solar masses)','','','1-sigma maximum stellar mass (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','medianPDF','dex (solar masses)','','','Median value in mass PDF (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','PDF16','dex (solar masses)','','','16% lower limit on stellar mass in PDF','0');
INSERT DBColumns VALUES('stellarMassPassivePort','PDF84','dex (solar masses)','','','84% upper limit on stellar mass in PDF','0');
INSERT DBColumns VALUES('stellarMassPassivePort','peakPDF','dex (solar masses)','','','Peak of PDF (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','logMass_noMassLoss','dex (solar masses)','','','Best-fit stellar mass of galaxy (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','minLogMass_noMassLoss','dex (solar masses)','','','1-sigma minimum stellar mass (where chi-squared is within minimum + 1), not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassPassivePort','maxLogMass_noMassLoss','dex (solar masses)','','','1-sigma maximum stellar mass (where chi-squared is within minimum + 1), not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassPassivePort','medianPDF_noMassLoss','dex (solar masses)','','','Median value in mass PDF, not accounting for mass loss (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','PDF16_noMassLoss','dex (solar masses)','','','16% lower limit on stellar mass in PDF, not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassPassivePort','PDF84_noMassLoss','dex (solar masses)','','','84% upper limit on stellar mass in PDF, not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassPassivePort','peakPDF_noMassLoss','dex (solar masses)','','','Peak of PDF, not accounting for mass loss (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','reducedChi2','','','','Reduced chi squared of best fit','0');
INSERT DBColumns VALUES('stellarMassPassivePort','age','Gyrs','','','Age of best fit','0');
INSERT DBColumns VALUES('stellarMassPassivePort','minAge','Gyrs','','','1-sigma minimum age (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','maxAge','Gyrs','','','1-sigma maximum age (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','SFR','solar masses per year','','','Star-formation rate of best fit','0');
INSERT DBColumns VALUES('stellarMassPassivePort','minSFR','solar masses per year','','','1-sigma minimum star-formation rate of best fit (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','maxSFR','solar masses per year','','','1-sigma maximum star-formation rate of best fit (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','absMagK','','','','Absolute magnitude in K inferred from model','0');
INSERT DBColumns VALUES('stellarMassPassivePort','SFH','','','','Star-formation history model used','0');
INSERT DBColumns VALUES('stellarMassPassivePort','Metallicity','','','','Metallicity of best fit template (0.004, 0.01, 0.02, 0.04, or "composite")','0');
INSERT DBColumns VALUES('stellarMassPassivePort','reddeninglaw','','','','ID of best fit reddening law (0 = no reddening)','0');
INSERT DBColumns VALUES('stellarMassPassivePort','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','zErr','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','minLogMass','dex (solar masses)','','','1-sigma minimum stellar mass (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','maxLogMass','dex (solar masses)','','','1-sigma maximum stellar mass (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','medianPDF','dex (solar masses)','','','Median value in mass PDF (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','PDF16','dex (solar masses)','','','16% lower limit on stellar mass in PDF','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','PDF84','dex (solar masses)','','','84% upper limit on stellar mass in PDF','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','peakPDF','dex (solar masses)','','','Peak of PDF (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','logMass_noMassLoss','dex (solar masses)','','','Best-fit stellar mass of galaxy (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','minLogMass_noMassLoss','dex (solar masses)','','','1-sigma minimum stellar mass (where chi-squared is within minimum + 1), not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','maxLogMass_noMassLoss','dex (solar masses)','','','1-sigma maximum stellar mass (where chi-squared is within minimum + 1), not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','medianPDF_noMassLoss','dex (solar masses)','','','Median value in mass PDF, not accounting for mass loss (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','PDF16_noMassLoss','dex (solar masses)','','','16% lower limit on stellar mass in PDF, not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','PDF84_noMassLoss','dex (solar masses)','','','84% upper limit on stellar mass in PDF, not accounting for mass loss','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','peakPDF_noMassLoss','dex (solar masses)','','','Peak of PDF, not accounting for mass loss (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','reducedChi2','','','','Reduced chi squared of best fit','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','age','Gyrs','','','Age of best fit','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','minAge','Gyrs','','','1-sigma minimum age (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','maxAge','Gyrs','','','1-sigma maximum age (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','SFR','solar masses per year','','','Star-formation rate of best fit','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','minSFR','solar masses per year','','','1-sigma minimum star-formation rate of best fit (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','maxSFR','solar masses per year','','','1-sigma maximum star-formation rate of best fit (where chi-squared is within minimum + 1)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','absMagK','','','','Absolute magnitude in K inferred from model','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','SFH','','','','Star-formation history model used ("const" or "tau=X" or "trunc=X", where X is the exponential decline rate, or the time until truncation of the model)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','Metallicity','','','','Metallicity of best fit template (0.004, 0.01, 0.02, 0.04, or "composite")','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','reddeninglaw','','','','ID of best fit reddening law (0 = no reddening)','0');
INSERT DBColumns VALUES('stellarMassStarformingPort','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','specObjID','','','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','MJD','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','z_err','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ke_u','','','','K+E corrections at z_0=0.55 in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ke_g','','','','K+E corrections at z_0=0.55 in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ke_r','','','','K+E corrections at z_0=0.55 in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ke_i','','','','K+E corrections at z_0=0.55 in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ke_z','','','','K+E corrections at z_0=0.55 in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','cModelAbsMag_u','','','','Cmodel absolute magnitudes in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','cModelAbsMag_g','','','','Cmodel absolute magnitudes in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','cModelAbsMag_r','','','','Cmodel absolute magnitudes in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','cModelAbsMag_i','','','','Cmodel absolute magnitudes in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','cModelAbsMag_z','','','','Cmodel absolute magnitudes in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_u','','','','Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_g','','','','Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_r','','','','Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_i','','','','Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_z','','','','Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_median_u','','','','Median Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_median_g','','','','Median Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_median_r','','','','Median Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_median_i','','','','Median Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_median_z','','','','Median Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_err_u','','','','1-sigma error associated to M2L_Median in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_err_g','','','','1-sigma error associated to M2L_Median in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_err_r','','','','1-sigma error associated to M2L_Median in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_err_i','','','','1-sigma error associated to M2L_Median in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_err_z','','','','1-sigma error associated to M2L_Median in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_min_u','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_min_g','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_min_r','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_min_i','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_min_z','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_max_u','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_max_g','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_max_r','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_max_i','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','m2l_max_z','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','logMass_median','dex (solar masses)','','','Median stellar mass of galaxy. It corresponds to the value of PDF at which 50% of the stellar mass probability is accumulated (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','logMass_err','dex (solar masses)','','','1-sigma error associated with LogMass_Median','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','logMass_min','dex (solar masses)','','','Minimum stellar mass (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','logMass_max','dex (solar masses)','','','Maximum stellar mass (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','chi2','','','','Unreduced chi-square of best fit','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','t_age','Gyr','','','Best-fit look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','t_age_mean','Gyr','','','Mean look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','t_age_err','Gyr','','','1-sigma error for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','t_age_min','Gyr','','','Minimum value (lower 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','t_age_max','Gyr','','','Maximum value (higher 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','metallicity','','','','Best-fit metallicity, where Z_sun=0.019','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','metallicity_mean','','','','Mean metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','metallicity_err','','','','1-sigma error for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','metallicity_min','','','','Minimum value (lower 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','metallicity_max','','','','Maximum value (higher 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust1','','','','Best-fit value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust1_mean','','','','Mean value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust1_err','','','','1-sigma error for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust1_min','','','','Minimum value dust attenuation around young stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust1_max','','','','Maximum value dust attenuation around young stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust2','','','','Best-fit value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust2_mean','','','','Mean value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust2_err','','','','1-sigma error for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust2_min','','','','Minimum value for dust attenuation around old stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','dust2_max','','','','Maximum value for dust attenuation around old stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','tau','Gyr','','','Best-fit star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','tau_mean','Gyr','','','Mean star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','tau_err','Gyr','','','1-sigma star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','tau_min','Gyr','','','Minimum value (lower 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','tau_max','Gyr','','','Maximum value (higher 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','age','Gyr','','','Best-fit mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','age_mean','Gyr','','','Mean mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','age_min','Gyr','','','Minimum value (lower 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','age_max','Gyr','','','Maximum value (higher 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ssfr','log Gyr<sup>-1</sup>','','','Best-fit specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ssfr_mean','log Gyr<sup>-1</sup>','','','Mean specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ssfr_min','log Gyr<sup>-1</sup>','','','Minimum value (lower 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyDust','ssfr_max','log Gyr<sup>-1</sup>','','','Maximum value (higher 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','specObjID','','','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','MJD','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','z_err','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ke_u','','','','K+E corrections at z_0=0.55 in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ke_g','','','','K+E corrections at z_0=0.55 in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ke_r','','','','K+E corrections at z_0=0.55 in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ke_i','','','','K+E corrections at z_0=0.55 in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ke_z','','','','K+E corrections at z_0=0.55 in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','cModelAbsMag_u','','','','Cmodel absolute magnitudes in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','cModelAbsMag_g','','','','Cmodel absolute magnitudes in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','cModelAbsMag_r','','','','Cmodel absolute magnitudes in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','cModelAbsMag_i','','','','Cmodel absolute magnitudes in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','cModelAbsMag_z','','','','Cmodel absolute magnitudes in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_u','','','','Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_g','','','','Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_r','','','','Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_i','','','','Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_z','','','','Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_median_u','','','','Median Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_median_g','','','','Median Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_median_r','','','','Median Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_median_i','','','','Median Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_median_z','','','','Median Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_err_u','','','','1-sigma error associated to M2L_Median in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_err_g','','','','1-sigma error associated to M2L_Median in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_err_r','','','','1-sigma error associated to M2L_Median in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_err_i','','','','1-sigma error associated to M2L_Median in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_err_z','','','','1-sigma error associated to M2L_Median in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_min_u','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_min_g','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_min_r','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_min_i','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_min_z','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_max_u','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_max_g','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_max_r','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_max_i','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','m2l_max_z','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','logMass_median','dex (solar masses)','','','Median stellar mass of galaxy. It corresponds to the value of PDF at which 50% of the stellar mass probability is accumulated (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','logMass_err','dex (solar masses)','','','1-sigma error associated with LogMass_Median','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','logMass_min','dex (solar masses)','','','Minimum stellar mass (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','logMass_max','dex (solar masses)','','','Maximum stellar mass (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','chi2','','','','Unreduced chi-square of best fit','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','t_age','Gyr','','','Best-fit look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','t_age_mean','Gyr','','','Mean look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','t_age_err','Gyr','','','1-sigma error for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','t_age_min','Gyr','','','Minimum value (lower 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','t_age_max','Gyr','','','Maximum value (higher 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','metallicity','','','','Best-fit metallicity, where Z_sun=0.019','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','metallicity_mean','','','','Mean metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','metallicity_err','','','','1-sigma error for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','metallicity_min','','','','Minimum value (lower 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','metallicity_max','','','','Maximum value (higher 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust1','','','','Best-fit value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust1_mean','','','','Mean value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust1_err','','','','1-sigma error for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust1_min','','','','Minimum value dust attenuation around young stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust1_max','','','','Maximum value dust attenuation around young stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust2','','','','Best-fit value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust2_mean','','','','Mean value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust2_err','','','','1-sigma error for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust2_min','','','','Minimum value for dust attenuation around old stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','dust2_max','','','','Maximum value for dust attenuation around old stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','tau','Gyr','','','Best-fit star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','tau_mean','Gyr','','','Mean star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','tau_err','Gyr','','','1-sigma star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','tau_min','Gyr','','','Minimum value (lower 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','tau_max','Gyr','','','Maximum value (higher 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','age','Gyr','','','Best-fit mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','age_mean','Gyr','','','Mean mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','age_min','Gyr','','','Minimum value (lower 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','age_max','Gyr','','','Maximum value (higher 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ssfr','log Gyr<sup>-1</sup>','','','Best-fit specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ssfr_mean','log Gyr<sup>-1</sup>','','','Mean specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ssfr_min','log Gyr<sup>-1</sup>','','','Minimum value (lower 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranEarlyNoDust','ssfr_max','log Gyr<sup>-1</sup>','','','Maximum value (higher 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','specObjID','','','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','MJD','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','z_err','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ke_u','','','','K+E corrections at z_0=0.55 in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ke_g','','','','K+E corrections at z_0=0.55 in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ke_r','','','','K+E corrections at z_0=0.55 in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ke_i','','','','K+E corrections at z_0=0.55 in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ke_z','','','','K+E corrections at z_0=0.55 in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','cModelAbsMag_u','','','','Cmodel absolute magnitudes in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','cModelAbsMag_g','','','','Cmodel absolute magnitudes in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','cModelAbsMag_r','','','','Cmodel absolute magnitudes in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','cModelAbsMag_i','','','','Cmodel absolute magnitudes in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','cModelAbsMag_z','','','','Cmodel absolute magnitudes in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_u','','','','Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_g','','','','Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_r','','','','Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_i','','','','Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_z','','','','Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_median_u','','','','Median Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_median_g','','','','Median Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_median_r','','','','Median Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_median_i','','','','Median Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_median_z','','','','Median Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_err_u','','','','1-sigma error associated to M2L_Median in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_err_g','','','','1-sigma error associated to M2L_Median in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_err_r','','','','1-sigma error associated to M2L_Median in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_err_i','','','','1-sigma error associated to M2L_Median in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_err_z','','','','1-sigma error associated to M2L_Median in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_min_u','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_min_g','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_min_r','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_min_i','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_min_z','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_max_u','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_max_g','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_max_r','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_max_i','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','m2l_max_z','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','logMass_median','dex (solar masses)','','','Median stellar mass of galaxy. It corresponds to the value of PDF at which 50% of the stellar mass probability is accumulated (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','logMass_err','dex (solar masses)','','','1-sigma error associated with LogMass_Median','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','logMass_min','dex (solar masses)','','','Minimum stellar mass (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','logMass_max','dex (solar masses)','','','Maximum stellar mass (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','chi2','','','','Unreduced chi-square of best fit','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','t_age','Gyr','','','Best-fit look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','t_age_mean','Gyr','','','Mean look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','t_age_err','Gyr','','','1-sigma error for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','t_age_min','Gyr','','','Minimum value (lower 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','t_age_max','Gyr','','','Maximum value (higher 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','metallicity','','','','Best-fit metallicity, where Z_sun=0.019','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','metallicity_mean','','','','Mean metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','metallicity_err','','','','1-sigma error for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','metallicity_min','','','','Minimum value (lower 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','metallicity_max','','','','Maximum value (higher 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust1','','','','Best-fit value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust1_mean','','','','Mean value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust1_err','','','','1-sigma error for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust1_min','','','','Minimum value dust attenuation around young stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust1_max','','','','Maximum value dust attenuation around young stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust2','','','','Best-fit value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust2_mean','','','','Mean value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust2_err','','','','1-sigma error for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust2_min','','','','Minimum value for dust attenuation around old stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','dust2_max','','','','Maximum value for dust attenuation around old stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','tau','Gyr','','','Best-fit star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','tau_mean','Gyr','','','Mean star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','tau_err','Gyr','','','1-sigma star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','tau_min','Gyr','','','Minimum value (lower 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','tau_max','Gyr','','','Maximum value (higher 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','age','Gyr','','','Best-fit mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','age_mean','Gyr','','','Mean mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','age_min','Gyr','','','Minimum value (lower 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','age_max','Gyr','','','Maximum value (higher 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ssfr','log Gyr<sup>-1</sup>','','','Best-fit specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ssfr_mean','log Gyr<sup>-1</sup>','','','Mean specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ssfr_min','log Gyr<sup>-1</sup>','','','Minimum value (lower 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideDust','ssfr_max','log Gyr<sup>-1</sup>','','','Maximum value (higher 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','specObjID','','','','Unique ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','plate','','','','Plate number','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','MJD','days','','','MJD of observation','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','z_err','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ke_u','','','','K+E corrections at z_0=0.55 in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ke_g','','','','K+E corrections at z_0=0.55 in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ke_r','','','','K+E corrections at z_0=0.55 in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ke_i','','','','K+E corrections at z_0=0.55 in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ke_z','','','','K+E corrections at z_0=0.55 in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','cModelAbsMag_u','','','','Cmodel absolute magnitudes in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','cModelAbsMag_g','','','','Cmodel absolute magnitudes in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','cModelAbsMag_r','','','','Cmodel absolute magnitudes in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','cModelAbsMag_i','','','','Cmodel absolute magnitudes in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','cModelAbsMag_z','','','','Cmodel absolute magnitudes in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_u','','','','Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_g','','','','Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_r','','','','Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_i','','','','Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_z','','','','Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_median_u','','','','Median Mass-to-light ratio in the u-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_median_g','','','','Median Mass-to-light ratio in the g-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_median_r','','','','Median Mass-to-light ratio in the r-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_median_i','','','','Median Mass-to-light ratio in the i-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_median_z','','','','Median Mass-to-light ratio in the z-band, K+E corrected at z_0=0.55. It corresponds to the value of PDF at which 50% of the M/L probability is accumulated','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_err_u','','','','1-sigma error associated to M2L_Median in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_err_g','','','','1-sigma error associated to M2L_Median in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_err_r','','','','1-sigma error associated to M2L_Median in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_err_i','','','','1-sigma error associated to M2L_Median in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_err_z','','','','1-sigma error associated to M2L_Median in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_min_u','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_min_g','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_min_r','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_min_i','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_min_z','','','','Minimum Mass-to-light ratio (lower 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_max_u','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the u-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_max_g','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the g-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_max_r','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the r-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_max_i','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the i-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','m2l_max_z','','','','Maximum Mass-to-light ratio (higher 68% confidence level) in the z-band','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','logMass','dex (solar masses)','','','Best-fit stellar mass of galaxy','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','logMass_median','dex (solar masses)','','','Median stellar mass of galaxy. It corresponds to the value of PDF at which 50% of the stellar mass probability is accumulated (log base 10 in solar masses)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','logMass_err','dex (solar masses)','','','1-sigma error associated with LogMass_Median','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','logMass_min','dex (solar masses)','','','Minimum stellar mass (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','logMass_max','dex (solar masses)','','','Maximum stellar mass (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','chi2','','','','Unreduced chi-square of best fit','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','nFilter','','','','Number of filters used in the fit (default is 5 for ugriz)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','t_age','Gyr','','','Best-fit look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','t_age_mean','Gyr','','','Mean look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','t_age_err','Gyr','','','1-sigma error for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','t_age_min','Gyr','','','Minimum value (lower 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','t_age_max','Gyr','','','Maximum value (higher 68% confidence level) for look-back formation time','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','metallicity','','','','Best-fit metallicity, where Z_sun=0.019','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','metallicity_mean','','','','Mean metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','metallicity_err','','','','1-sigma error for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','metallicity_min','','','','Minimum value (lower 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','metallicity_max','','','','Maximum value (higher 68% confidence level) for metallicity','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust1','','','','Best-fit value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust1_mean','','','','Mean value for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust1_err','','','','1-sigma error for dust attenuation around young stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust1_min','','','','Minimum value dust attenuation around young stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust1_max','','','','Maximum value dust attenuation around young stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust2','','','','Best-fit value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust2_mean','','','','Mean value for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust2_err','','','','1-sigma error for dust attenuation around old stars','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust2_min','','','','Minimum value for dust attenuation around old stars (lower 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','dust2_max','','','','Maximum value for dust attenuation around old stars (higher 68% confidence level)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','tau','Gyr','','','Best-fit star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','tau_mean','Gyr','','','Mean star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','tau_err','Gyr','','','1-sigma star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','tau_min','Gyr','','','Minimum value (lower 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','tau_max','Gyr','','','Maximum value (higher 68% confidence level) for star formation history e-folding time (tau)','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','age','Gyr','','','Best-fit mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','age_mean','Gyr','','','Mean mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','age_min','Gyr','','','Minimum value (lower 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','age_max','Gyr','','','Maximum value (higher 68% confidence level) for mass-weighted average age of the stellar population','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ssfr','log Gyr<sup>-1</sup>','','','Best-fit specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ssfr_mean','log Gyr<sup>-1</sup>','','','Mean specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ssfr_min','log Gyr<sup>-1</sup>','','','Minimum value (lower 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('stellarMassFSPSGranWideNoDust','ssfr_max','log Gyr<sup>-1</sup>','','','Maximum value (higher 68% confidence level) for specific star formation rate','0');
INSERT DBColumns VALUES('emissionLinesPort','specObjID','','ID_CATALOG','','Unique ID','0');
INSERT DBColumns VALUES('emissionLinesPort','plate','','','','Plate number','0');
INSERT DBColumns VALUES('emissionLinesPort','fiberID','','','','Fiber ID','0');
INSERT DBColumns VALUES('emissionLinesPort','mjd','days','','','MJD of observation','0');
INSERT DBColumns VALUES('emissionLinesPort','ra','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('emissionLinesPort','dec','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('emissionLinesPort','z','','','','Redshift used (corresponds to z_noqso in specObjAll)','0');
INSERT DBColumns VALUES('emissionLinesPort','zErr','','','','Error in z (corresponds to zErr_noqso in specObjAll)','0');
INSERT DBColumns VALUES('emissionLinesPort','zNum','','','','Index of chi^2 minimum corresponding to z_noqso','0');
INSERT DBColumns VALUES('emissionLinesPort','velStars','km/s','','','stellar velocity','0');
INSERT DBColumns VALUES('emissionLinesPort','redshift','','','','GANDALF-corrected redshift','0');
INSERT DBColumns VALUES('emissionLinesPort','sigmaStars','km/s','','','Stellar velocity dispersion','0');
INSERT DBColumns VALUES('emissionLinesPort','sigmaStarsErr','km/s','','','Error on measurement of stellar velocity dispersion','0');
INSERT DBColumns VALUES('emissionLinesPort','chisq','','','','chi-squared of best-fit template','0');
INSERT DBColumns VALUES('emissionLinesPort','bpt','','','','Classification from Kauffmann et al. (2003), Kewley et al. (2001) and Schawinski et al. (2007) for objects with the emission lines H&amp;beta;, [OIII], H&amp;alpha;, [NII] available with A/N &gt; 1.5. Possible values: "BLANK" (if emission lines not available), "Star Forming", "Seyfert", "LINER", "Seyfert/LINER", "Composite"','0');
INSERT DBColumns VALUES('emissionLinesPort','ebmv','mag','','','E(B-V) for internal reddening estimated from emission lines','0');
INSERT DBColumns VALUES('emissionLinesPort','ebmv_err','mag','','','Error in E(B-V)for internal reddening estimated from emission lines','0');
INSERT DBColumns VALUES('emissionLinesPort','Error_Warning','','','','Set to 1 if error calculation failed (errors all set to zero in that case); otherwise, set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeII_3203','km/s','','','Velocity of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeII_3203_Err','km/s','','','Error in velocity of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeII_3203','km/s','','','Velocity dispersion of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeII_3203_Err','km/s','','','Error in velocity dispersion of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeII_3203','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeII_3203_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeII_3203','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeII_3203_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeII_3203','Angstroms','','','Equivalent width of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeII_3203_Err','Angstroms','','','Error in equivalent width of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeII_3203','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeII_3203_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_HeII_3203','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_HeII_3203','km/s','','','Amplitude-over-noise of emission line HeII 3203','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeV_3345','km/s','','','Velocity of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeV_3345_Err','km/s','','','Error in velocity of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeV_3345','km/s','','','Velocity dispersion of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeV_3345_Err','km/s','','','Error in velocity dispersion of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeV_3345','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeV_3345_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeV_3345','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeV_3345_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeV_3345','Angstroms','','','Equivalent width of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeV_3345_Err','Angstroms','','','Error in equivalent width of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeV_3345','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeV_3345_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NeV_3345','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NeV_3345','km/s','','','Amplitude-over-noise of emission line [NeV] 3345','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeV_3425','km/s','','','Velocity of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeV_3425_Err','km/s','','','Error in velocity of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeV_3425','km/s','','','Velocity dispersion of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeV_3425_Err','km/s','','','Error in velocity dispersion of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeV_3425','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeV_3425_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeV_3425','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeV_3425_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeV_3425','Angstroms','','','Equivalent width of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeV_3425_Err','Angstroms','','','Error in equivalent width of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeV_3425','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeV_3425_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NeV_3425','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NeV_3425','km/s','','','Amplitude-over-noise of emission line [NeV] 3425','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OII_3726','km/s','','','Velocity of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OII_3726_Err','km/s','','','Error in velocity of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OII_3726','km/s','','','Velocity dispersion of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OII_3726_Err','km/s','','','Error in velocity dispersion of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OII_3726','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OII_3726_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OII_3726','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OII_3726_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OII_3726','Angstroms','','','Equivalent width of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OII_3726_Err','Angstroms','','','Error in equivalent width of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OII_3726','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OII_3726_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OII_3726','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OII_3726','km/s','','','Amplitude-over-noise of emission line [OII] 3726','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OII_3728','km/s','','','Velocity of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OII_3728_Err','km/s','','','Error in velocity of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OII_3728','km/s','','','Velocity dispersion of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OII_3728_Err','km/s','','','Error in velocity dispersion of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OII_3728','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OII_3728_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OII_3728','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OII_3728_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OII_3728','Angstroms','','','Equivalent width of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OII_3728_Err','Angstroms','','','Error in equivalent width of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OII_3728','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OII_3728_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OII_3728','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OII_3728','km/s','','','Amplitude-over-noise of emission line [OII] 3728','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeIII_3868','km/s','','','Velocity of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeIII_3868_Err','km/s','','','Error in velocity of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeIII_3868','km/s','','','Velocity dispersion of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeIII_3868_Err','km/s','','','Error in velocity dispersion of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeIII_3868','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeIII_3868_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeIII_3868','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeIII_3868_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeIII_3868','Angstroms','','','Equivalent width of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeIII_3868_Err','Angstroms','','','Error in equivalent width of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeIII_3868','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeIII_3868_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NeIII_3868','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NeIII_3868','km/s','','','Amplitude-over-noise of emission line [NeIII] 3868','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeIII_3967','km/s','','','Velocity of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NeIII_3967_Err','km/s','','','Error in velocity of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeIII_3967','km/s','','','Velocity dispersion of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NeIII_3967_Err','km/s','','','Error in velocity dispersion of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeIII_3967','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NeIII_3967_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeIII_3967','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NeIII_3967_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeIII_3967','Angstroms','','','Equivalent width of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NeIII_3967_Err','Angstroms','','','Error in equivalent width of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeIII_3967','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NeIII_3967_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NeIII_3967','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NeIII_3967','km/s','','','Amplitude-over-noise of emission line [NeIII] 3967','0');
INSERT DBColumns VALUES('emissionLinesPort','V_H5_3889','km/s','','','Velocity of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','V_H5_3889_Err','km/s','','','Error in velocity of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_H5_3889','km/s','','','Velocity dispersion of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_H5_3889_Err','km/s','','','Error in velocity dispersion of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_H5_3889','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_H5_3889_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_H5_3889','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_H5_3889_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_H5_3889','Angstroms','','','Equivalent width of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_H5_3889_Err','Angstroms','','','Error in equivalent width of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_H5_3889','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_H5_3889_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_H5_3889','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_H5_3889','km/s','','','Amplitude-over-noise of emission line H5 3889','0');
INSERT DBColumns VALUES('emissionLinesPort','V_He_3970','km/s','','','Velocity of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','V_He_3970_Err','km/s','','','Error in velocity of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_He_3970','km/s','','','Velocity dispersion of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_He_3970_Err','km/s','','','Error in velocity dispersion of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_He_3970','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_He_3970_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_He_3970','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_He_3970_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_He_3970','Angstroms','','','Equivalent width of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_He_3970_Err','Angstroms','','','Error in equivalent width of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_He_3970','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_He_3970_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_He_3970','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_He_3970','km/s','','','Amplitude-over-noise of emission line He 3970','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hd_4101','km/s','','','Velocity of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hd_4101_Err','km/s','','','Error in velocity of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hd_4101','km/s','','','Velocity dispersion of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hd_4101_Err','km/s','','','Error in velocity dispersion of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hd_4101','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hd_4101_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hd_4101','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hd_4101_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hd_4101','Angstroms','','','Equivalent width of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hd_4101_Err','Angstroms','','','Error in equivalent width of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hd_4101','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hd_4101_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_Hd_4101','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_Hd_4101','km/s','','','Amplitude-over-noise of emission line Hd 4101','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hg_4340','km/s','','','Velocity of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hg_4340_Err','km/s','','','Error in velocity of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hg_4340','km/s','','','Velocity dispersion of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hg_4340_Err','km/s','','','Error in velocity dispersion of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hg_4340','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hg_4340_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hg_4340','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hg_4340_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hg_4340','Angstroms','','','Equivalent width of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hg_4340_Err','Angstroms','','','Error in equivalent width of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hg_4340','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hg_4340_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_Hg_4340','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_Hg_4340','km/s','','','Amplitude-over-noise of emission line Hg 4340','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_4363','km/s','','','Velocity of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_4363_Err','km/s','','','Error in velocity of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_4363','km/s','','','Velocity dispersion of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_4363_Err','km/s','','','Error in velocity dispersion of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_4363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_4363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_4363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_4363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_4363','Angstroms','','','Equivalent width of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_4363_Err','Angstroms','','','Error in equivalent width of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_4363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_4363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OIII_4363','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OIII_4363','km/s','','','Amplitude-over-noise of emission line [OIII] 4363','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeII_4685','km/s','','','Velocity of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeII_4685_Err','km/s','','','Error in velocity of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeII_4685','km/s','','','Velocity dispersion of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeII_4685_Err','km/s','','','Error in velocity dispersion of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeII_4685','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeII_4685_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeII_4685','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeII_4685_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeII_4685','Angstroms','','','Equivalent width of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeII_4685_Err','Angstroms','','','Error in equivalent width of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeII_4685','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeII_4685_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_HeII_4685','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_HeII_4685','km/s','','','Amplitude-over-noise of emission line HeII 4685','0');
INSERT DBColumns VALUES('emissionLinesPort','V_ArIV_4711','km/s','','','Velocity of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','V_ArIV_4711_Err','km/s','','','Error in velocity of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_ArIV_4711','km/s','','','Velocity dispersion of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_ArIV_4711_Err','km/s','','','Error in velocity dispersion of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_ArIV_4711','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_ArIV_4711_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_ArIV_4711','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_ArIV_4711_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_ArIV_4711','Angstroms','','','Equivalent width of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_ArIV_4711_Err','Angstroms','','','Error in equivalent width of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_ArIV_4711','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_ArIV_4711_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_ArIV_4711','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_ArIV_4711','km/s','','','Amplitude-over-noise of emission line [ArIV] 4711','0');
INSERT DBColumns VALUES('emissionLinesPort','V_ArIV_4740','km/s','','','Velocity of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','V_ArIV_4740_Err','km/s','','','Error in velocity of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_ArIV_4740','km/s','','','Velocity dispersion of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_ArIV_4740_Err','km/s','','','Error in velocity dispersion of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_ArIV_4740','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_ArIV_4740_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_ArIV_4740','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_ArIV_4740_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_ArIV_4740','Angstroms','','','Equivalent width of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_ArIV_4740_Err','Angstroms','','','Error in equivalent width of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_ArIV_4740','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_ArIV_4740_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_ArIV_4740','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_ArIV_4740','km/s','','','Amplitude-over-noise of emission line [ArIV] 4740','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hb_4861','km/s','','','Velocity of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Hb_4861_Err','km/s','','','Error in velocity of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hb_4861','km/s','','','Velocity dispersion of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Hb_4861_Err','km/s','','','Error in velocity dispersion of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hb_4861','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Hb_4861_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hb_4861','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Hb_4861_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hb_4861','Angstroms','','','Equivalent width of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Hb_4861_Err','Angstroms','','','Error in equivalent width of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hb_4861','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Hb_4861_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_Hb_4861','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_Hb_4861','km/s','','','Amplitude-over-noise of emission line Hb 4861','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_4958','km/s','','','Velocity of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_4958_Err','km/s','','','Error in velocity of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_4958','km/s','','','Velocity dispersion of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_4958_Err','km/s','','','Error in velocity dispersion of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_4958','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_4958_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_4958','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_4958_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_4958','Angstroms','','','Equivalent width of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_4958_Err','Angstroms','','','Error in equivalent width of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_4958','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_4958_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OIII] 4958','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OIII_4958','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_5006','km/s','','','Velocity of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OIII_5006_Err','km/s','','','Error in velocity of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_5006','km/s','','','Velocity dispersion of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OIII_5006_Err','km/s','','','Error in velocity dispersion of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_5006','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OIII_5006_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_5006','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OIII_5006_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_5006','Angstroms','','','Equivalent width of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OIII_5006_Err','Angstroms','','','Error in equivalent width of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_5006','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OIII_5006_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OIII_5006','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OIII_5006','km/s','','','Amplitude-over-noise of emission line [OIII] 5006','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NI_5197','km/s','','','Velocity of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NI_5197_Err','km/s','','','Error in velocity of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NI_5197','km/s','','','Velocity dispersion of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NI_5197_Err','km/s','','','Error in velocity dispersion of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NI_5197','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NI_5197_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NI_5197','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NI_5197_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NI_5197','Angstroms','','','Equivalent width of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NI_5197_Err','Angstroms','','','Error in equivalent width of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NI_5197','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NI_5197_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NI_5197','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NI_5197','km/s','','','Amplitude-over-noise of emission line [NI] 5197','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NI_5200','km/s','','','Velocity of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NI_5200_Err','km/s','','','Error in velocity of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NI_5200','km/s','','','Velocity dispersion of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NI_5200_Err','km/s','','','Error in velocity dispersion of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NI_5200','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NI_5200_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NI_5200','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NI_5200_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NI_5200','Angstroms','','','Equivalent width of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NI_5200_Err','Angstroms','','','Error in equivalent width of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NI_5200','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NI_5200_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NI_5200','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NI_5200','km/s','','','Amplitude-over-noise of emission line [NI] 5200','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeI_5875','km/s','','','Velocity of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','V_HeI_5875_Err','km/s','','','Error in velocity of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeI_5875','km/s','','','Velocity dispersion of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_HeI_5875_Err','km/s','','','Error in velocity dispersion of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeI_5875','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_HeI_5875_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeI_5875','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_HeI_5875_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeI_5875','Angstroms','','','Equivalent width of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_HeI_5875_Err','Angstroms','','','Error in equivalent width of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeI_5875','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_HeI_5875_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_HeI_5875','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_HeI_5875','km/s','','','Amplitude-over-noise of emission line HeI 5875','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OI_6300','km/s','','','Velocity of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OI_6300_Err','km/s','','','Error in velocity of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OI_6300','km/s','','','Velocity dispersion of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OI_6300_Err','km/s','','','Error in velocity dispersion of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OI_6300','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OI_6300_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OI_6300','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OI_6300_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OI_6300','Angstroms','','','Equivalent width of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OI_6300_Err','Angstroms','','','Error in equivalent width of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OI_6300','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OI_6300_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OI_6300','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OI_6300','km/s','','','Amplitude-over-noise of emission line [OI] 6300','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OI_6363','km/s','','','Velocity of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','V_OI_6363_Err','km/s','','','Error in velocity of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OI_6363','km/s','','','Velocity dispersion of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_OI_6363_Err','km/s','','','Error in velocity dispersion of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OI_6363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_OI_6363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OI_6363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_OI_6363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OI_6363','Angstroms','','','Equivalent width of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_OI_6363_Err','Angstroms','','','Error in equivalent width of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OI_6363','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_OI_6363_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_OI_6363','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_OI_6363','km/s','','','Amplitude-over-noise of emission line [OI] 6363','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NII_6547','km/s','','','Velocity of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NII_6547_Err','km/s','','','Error in velocity of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NII_6547','km/s','','','Velocity dispersion of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NII_6547_Err','km/s','','','Error in velocity dispersion of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NII_6547','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NII_6547_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NII_6547','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NII_6547_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NII_6547','Angstroms','','','Equivalent width of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NII_6547_Err','Angstroms','','','Error in equivalent width of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NII_6547','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NII_6547_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NII] 6547','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NII_6547','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Ha_6562','km/s','','','Velocity of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','V_Ha_6562_Err','km/s','','','Error in velocity of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Ha_6562','km/s','','','Velocity dispersion of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_Ha_6562_Err','km/s','','','Error in velocity dispersion of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Ha_6562','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_Ha_6562_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Ha_6562','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Ha_6562_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Ha_6562','Angstroms','','','Equivalent width of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_Ha_6562_Err','Angstroms','','','Error in equivalent width of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Ha_6562','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_Ha_6562_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_Ha_6562','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_Ha_6562','km/s','','','Amplitude-over-noise of emission line Ha 6562','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NII_6583','km/s','','','Velocity of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','V_NII_6583_Err','km/s','','','Error in velocity of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NII_6583','km/s','','','Velocity dispersion of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_NII_6583_Err','km/s','','','Error in velocity dispersion of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NII_6583','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_NII_6583_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NII_6583','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_NII_6583_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NII_6583','Angstroms','','','Equivalent width of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_NII_6583_Err','Angstroms','','','Error in equivalent width of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NII_6583','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_NII_6583_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_NII_6583','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_NII_6583','km/s','','','Amplitude-over-noise of emission line [NII] 6583','0');
INSERT DBColumns VALUES('emissionLinesPort','V_SII_6716','km/s','','','Velocity of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','V_SII_6716_Err','km/s','','','Error in velocity of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_SII_6716','km/s','','','Velocity dispersion of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_SII_6716_Err','km/s','','','Error in velocity dispersion of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_SII_6716','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_SII_6716_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_SII_6716','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_SII_6716_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_SII_6716','Angstroms','','','Equivalent width of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_SII_6716_Err','Angstroms','','','Error in equivalent width of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_SII_6716','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_SII_6716_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_SII_6716','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_SII_6716','km/s','','','Amplitude-over-noise of emission line [SII] 6716','0');
INSERT DBColumns VALUES('emissionLinesPort','V_SII_6730','km/s','','','Velocity of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','V_SII_6730_Err','km/s','','','Error in velocity of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_SII_6730','km/s','','','Velocity dispersion of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Sigma_SII_6730_Err','km/s','','','Error in velocity dispersion of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_SII_6730','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Amplitude of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Amplitude_SII_6730_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in amplitude of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_SII_6730','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Flux of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_SII_6730_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s','','','Error in flux of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_SII_6730','Angstroms','','','Equivalent width of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','EW_SII_6730_Err','Angstroms','','','Error in equivalent width of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_SII_6730','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Continuum flux at wavelength of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Flux_Cont_SII_6730_Err','10<sup>-17</sup> ergs/cm<sup>2</sup>/s/A','','','Error in continuum flux at wavelength of emission line [SII] 6730','0');
INSERT DBColumns VALUES('emissionLinesPort','Fit_Warning_SII_6730','','','','Set to 1 if the emission line falls on a sky line (5577, 6300 or 6363), measurements set to zero in this case; otherwise, this flag is set to 0','0');
INSERT DBColumns VALUES('emissionLinesPort','AoN_SII_6730','km/s','','','Amplitude-over-noise of emission line [SII] 6730','0');
INSERT DBColumns VALUES('Target','targetID','','ID_CATALOG','','hash of run, rerun, camcol, field, object (skyVersion=0)','0');
INSERT DBColumns VALUES('Target','run','','OBS_RUN','','imaging run','0');
INSERT DBColumns VALUES('Target','rerun','','CODE_MISC','','rerun number','0');
INSERT DBColumns VALUES('Target','camcol','','INST_ID','','imaging camcol','0');
INSERT DBColumns VALUES('Target','field','','ID_FIELD','','imaging field','0');
INSERT DBColumns VALUES('Target','obj','','ID_NUMBER','','imaging object id','0');
INSERT DBColumns VALUES('Target','regionID','','ID_CATALOG','','ID of sector, 0 if unset','0');
INSERT DBColumns VALUES('Target','ra','deg','POS_EQ_RA_MAIN','','right ascension','0');
INSERT DBColumns VALUES('Target','dec','deg','POS_EQ_DEC_MAIN','','declination','0');
INSERT DBColumns VALUES('Target','duplicate','','CODE_MISC','','duplicate spectrum by mistake','0');
INSERT DBColumns VALUES('Target','htmID','','CODE_HTM','','htm index','0');
INSERT DBColumns VALUES('Target','cx','','POS_EQ_CART_X','','x projection of vector on unit sphere','0');
INSERT DBColumns VALUES('Target','cy','','POS_EQ_CART_Y','','y projection of vector on unit sphere','0');
INSERT DBColumns VALUES('Target','cz','','POS_EQ_CART_Z','','z projection of vector on unit sphere','0');
INSERT DBColumns VALUES('Target','bestObjID','','CODE_MISC','','hashed ID of object in best version of the sky','0');
INSERT DBColumns VALUES('Target','specObjID','','CODE_MISC','','hashed ID of specobj in best version of the sky','0');
INSERT DBColumns VALUES('Target','bestMode','','CLASS_OBJECT','','mode from BEST PhotoObj','0');
INSERT DBColumns VALUES('Target','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('TargetInfo','targetObjID','','ID_CATALOG','','ID of object in Target (foreign key to Target.TargetObjID)','0');
INSERT DBColumns VALUES('TargetInfo','targetID','','ID_CATALOG','','ID of entry in Target table','0');
INSERT DBColumns VALUES('TargetInfo','skyVersion','','ID_VERSION','','skyVersion','0');
INSERT DBColumns VALUES('TargetInfo','primTarget','','CODE_MISC','PrimTarget','primTarget from TARGET','0');
INSERT DBColumns VALUES('TargetInfo','secTarget','','CODE_MISC','SecTarget','secTarget from TARGET','0');
INSERT DBColumns VALUES('TargetInfo','priority','','CODE_QUALITY','','target selection priority','0');
INSERT DBColumns VALUES('TargetInfo','programType','','OBS_TYPE','ProgramType','spectroscopic program type','0');
INSERT DBColumns VALUES('TargetInfo','programName','','ID_SURVEY','','character string of program (from plate inventory db)','0');
INSERT DBColumns VALUES('TargetInfo','targetMode','','CLASS_OBJECT','','mode from TARGET PhotoObj','0');
INSERT DBColumns VALUES('TargetInfo','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssTargetParam','targetVersion','','ID_VERSION','','version of target selection software','0');
INSERT DBColumns VALUES('sdssTargetParam','paramFile','','ID_VERSION','','version of target selection software','0');
INSERT DBColumns VALUES('sdssTargetParam','name','','','','parameter name','0');
INSERT DBColumns VALUES('sdssTargetParam','value','','','','value used for the parameter','0');
INSERT DBColumns VALUES('sdssTileAll','tile','','ID_PLATE','','(unique) tile number','0');
INSERT DBColumns VALUES('sdssTileAll','tileRun','','ID_VERSION','','run of the tiling software','0');
INSERT DBColumns VALUES('sdssTileAll','raCen','deg','POS_EQ_RA','','right ascension of tile center','0');
INSERT DBColumns VALUES('sdssTileAll','decCen','deg','POS_EQ_DEC','','declination of the tile center','0');
INSERT DBColumns VALUES('sdssTileAll','htmID','','CODE_HTM','','htm tree info','0');
INSERT DBColumns VALUES('sdssTileAll','cx','','POS_EQ_CART_X','','x projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTileAll','cy','','POS_EQ_CART_Y','','y projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTileAll','cz','','POS_EQ_CART_Z','','z projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTileAll','untiled','','CODE_MISC','','1: this tile later "untiled," releasing targets to be assigned to another tile, 0: otherwise','0');
INSERT DBColumns VALUES('sdssTileAll','nTargets','','NUMBER','','number of targets assigned to this tile','0');
INSERT DBColumns VALUES('sdssTileAll','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssTilingRun','tileRun','','OBS_RUN','','(unique) tiling run number','0');
INSERT DBColumns VALUES('sdssTilingRun','ctileVersion','','ID_VERSION','','version of ctile software','0');
INSERT DBColumns VALUES('sdssTilingRun','tilepId','','OBJ_ID','','unique id for tiling run','0');
INSERT DBColumns VALUES('sdssTilingRun','programName','','OBJ_ID','','character string of program','0');
INSERT DBColumns VALUES('sdssTilingRun','primTargetMask','','CODE_MISC','PrimTarget','bit mask for target types to be tiled','0');
INSERT DBColumns VALUES('sdssTilingRun','secTargetMask','','CODE_MISC','SecTarget','bit mask for target types to be tiled','0');
INSERT DBColumns VALUES('sdssTilingRun','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssTilingGeometry','tilingGeometryID','','','','unique identifier for this tilingRegion','0');
INSERT DBColumns VALUES('sdssTilingGeometry','tileRun','','OBJ_RUN','','run of tiling software','0');
INSERT DBColumns VALUES('sdssTilingGeometry','stripe','','EXTENSION_AREA','','stripe containing the boundary','0');
INSERT DBColumns VALUES('sdssTilingGeometry','nsbx','','CODE_MISC','','b: official stripe boundaries should be included, x: use the full rectangle','0');
INSERT DBColumns VALUES('sdssTilingGeometry','isMask','','CODE_MISC','','1: tiling mask, 0: tiling boundary','0');
INSERT DBColumns VALUES('sdssTilingGeometry','coordType','','POS_REFERENCE-SYSTEM','CoordType','specifies coordinate system for the boundaries','0');
INSERT DBColumns VALUES('sdssTilingGeometry','lambdamu_0','deg','POS_SDSS POS_LIMIT','','first lower bound','0');
INSERT DBColumns VALUES('sdssTilingGeometry','lambdamu_1','deg','POS_SDSS POS_LIMIT','','first upper bound','0');
INSERT DBColumns VALUES('sdssTilingGeometry','etanu_0','deg','POS_SDSS POS_LIMIT','','second lower bound','0');
INSERT DBColumns VALUES('sdssTilingGeometry','etanu_1','deg','POS_SDSS POS_LIMIT','','second upper bound','0');
INSERT DBColumns VALUES('sdssTilingGeometry','lambdaLimit_0','deg','POS_SDSS POS_LIMIT','','minimum survey latitude for this stripe for region in which primaries are selected (-9999 if no limit)','0');
INSERT DBColumns VALUES('sdssTilingGeometry','lambdaLimit_1','deg','POS_SDSS POS_LIMIT','','maximum survey latitude for this stripe for region in which primaries are selected (-9999 if no limit)','0');
INSERT DBColumns VALUES('sdssTilingGeometry','targetVersion','','ID_VERSION','','version of target software within this boundary','0');
INSERT DBColumns VALUES('sdssTilingGeometry','firstArea','deg^2','EXTENSION_AREA','','area of sky covered by this boundary that was not covered by previous boundaries','0');
INSERT DBColumns VALUES('sdssTilingGeometry','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','targetID','','','','Unique SDSS identifier composed from [skyVersion=0,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','run','','','','Drift scan run number for targeting','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','rerun','','','','Reprocessing number for targeting','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','camcol','','','','Camera column number for targeting','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','field','','','','Field number for targeting','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','obj','','','','Object id number for targeting','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','ra','deg','POS_EQ_RA','','right ascension','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','dec','deg','POS_EQ_DEC','','declination','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','htmID','','CODE_HTM','','htm tree info','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','cx','','','','x projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','cy','','','','y projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','cz','','','','z projection of vector on unit sphere','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','primTarget','','','','primary target bitmask','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','secTarget','','','','secondary target bitmask','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','tiPriority','','','','tiling priority level (lower means higher priority)','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','tileAll','','','','First tile number this object was assigned to','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','tiMaskAll','','','TiMask','Combined value of tiling results bitmask','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','collisionGroupAll','','','','unique ID of collisionGroup','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','photoObjID','','','','hashed ID of photometric object in best version of the sky','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','specObjID','','','','hashed ID of spectroscopic object in best version of the sky','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','regionID','','','','ID of tiling region, 0 if unset','0');
INSERT DBColumns VALUES('sdssTiledTargetAll','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssTilingInfo','targetID','','','','Unique SDSS identifier composed from [skyVersion=0,rerun,run,camcol,field,obj].','0');
INSERT DBColumns VALUES('sdssTilingInfo','tileRun','','','','Run of tiling software','0');
INSERT DBColumns VALUES('sdssTilingInfo','tid','','','','Unique ID of objects within tiling run','0');
INSERT DBColumns VALUES('sdssTilingInfo','tiMask','','','TiMask','Value of tiling results bitmask for this run','0');
INSERT DBColumns VALUES('sdssTilingInfo','collisionGroup','','','','unique ID of collisionGroup in this tiling run','0');
INSERT DBColumns VALUES('sdssTilingInfo','tile','','','','Tile this object was assigned to in this run','0');
INSERT DBColumns VALUES('sdssTilingInfo','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('RegionTypes','type','','','','','0');
INSERT DBColumns VALUES('RegionTypes','radius','','','','','0');
INSERT DBColumns VALUES('Rmatrix','mode','','','','','0');
INSERT DBColumns VALUES('Rmatrix','row','','','','','0');
INSERT DBColumns VALUES('Rmatrix','x','','','','','0');
INSERT DBColumns VALUES('Rmatrix','y','','','','','0');
INSERT DBColumns VALUES('Rmatrix','z','','','','','0');
INSERT DBColumns VALUES('Region','regionid','','','','','0');
INSERT DBColumns VALUES('Region','id','','','','key of the region pointing into other tables','0');
INSERT DBColumns VALUES('Region','type','','','','type of the region (STRIPE|STAVE|...)','0');
INSERT DBColumns VALUES('Region','comment','','','','description of the region','0');
INSERT DBColumns VALUES('Region','ismask','','','','0: region, 1: to be excluded','0');
INSERT DBColumns VALUES('Region','area','deg^2','EXTENSION_AREA','','area of region','0');
INSERT DBColumns VALUES('Region','regionString','','','','the string representation of the region','0');
INSERT DBColumns VALUES('Region','regionBinary','','','','the precompiled XML description of region','0');
INSERT DBColumns VALUES('RegionPatch','regionid','','','','Unique Region ID','0');
INSERT DBColumns VALUES('RegionPatch','convexid','','','','Unique Convex ID','0');
INSERT DBColumns VALUES('RegionPatch','patchid','','','','Unique patch number','0');
INSERT DBColumns VALUES('RegionPatch','type','','','','CAMCOL, RUN, STAVE, TILE, TILEBOX, SKYBOX, WEDGE, SECTOR...','0');
INSERT DBColumns VALUES('RegionPatch','radius','arcmin','','','radius of bounding circle centered at ra, dec','0');
INSERT DBColumns VALUES('RegionPatch','ra','deg','','','right ascension of observation','0');
INSERT DBColumns VALUES('RegionPatch','dec','deg','','','declination of observation','0');
INSERT DBColumns VALUES('RegionPatch','x','','','','x of centerpoint Normal unit vector in J2000','0');
INSERT DBColumns VALUES('RegionPatch','y','','','','y of centerpoint Normal unit vector in J2000','0');
INSERT DBColumns VALUES('RegionPatch','z','','','','z of centerpoint Normal unit vector in J2000','0');
INSERT DBColumns VALUES('RegionPatch','c','','','','offset of the equation of plane','0');
INSERT DBColumns VALUES('RegionPatch','htmid','','','','20 deep Hierarchical Triangular Mesh ID of centerpoint','0');
INSERT DBColumns VALUES('RegionPatch','area','deg^2','','','area of the patch','0');
INSERT DBColumns VALUES('RegionPatch','convexString','','','','{x,y,z,c}+ representation of the convex of the patch','0');
INSERT DBColumns VALUES('HalfSpace','constraintid','','','','id for the constraint','0');
INSERT DBColumns VALUES('HalfSpace','regionid','','','','pointer to RegionDefs','0');
INSERT DBColumns VALUES('HalfSpace','convexid','','','','unique id for the convex','0');
INSERT DBColumns VALUES('HalfSpace','x','','','','x component of normal','0');
INSERT DBColumns VALUES('HalfSpace','y','','','','y component of normal','0');
INSERT DBColumns VALUES('HalfSpace','z','','','','z component of normal','0');
INSERT DBColumns VALUES('HalfSpace','c','','','','offset from center along normal','0');
INSERT DBColumns VALUES('RegionArcs','arcid','','','','unique id of the arc','0');
INSERT DBColumns VALUES('RegionArcs','regionid','','','','unique region identifier','0');
INSERT DBColumns VALUES('RegionArcs','convexid','','','','convex identifier','0');
INSERT DBColumns VALUES('RegionArcs','constraintid','','','','id of the constraint','0');
INSERT DBColumns VALUES('RegionArcs','patch','','','','id of the patch','0');
INSERT DBColumns VALUES('RegionArcs','state','','','','state (3: bounding circle, 2:root, 1: hole)','0');
INSERT DBColumns VALUES('RegionArcs','draw','','','','0:hide, 1: draw','0');
INSERT DBColumns VALUES('RegionArcs','ra1','','','','ra of starting point of arc','0');
INSERT DBColumns VALUES('RegionArcs','dec1','','','','dec of starting point of arc','0');
INSERT DBColumns VALUES('RegionArcs','ra2','','','','ra of end point of arc','0');
INSERT DBColumns VALUES('RegionArcs','dec2','','','','dec of end point of arc','0');
INSERT DBColumns VALUES('RegionArcs','x','','','','x of constraint normal vector','0');
INSERT DBColumns VALUES('RegionArcs','y','','','','y of constraint normal vector','0');
INSERT DBColumns VALUES('RegionArcs','z','','','','z of constraint normal vector','0');
INSERT DBColumns VALUES('RegionArcs','c','','','','offset of constraint','0');
INSERT DBColumns VALUES('RegionArcs','length','deg','','','length of arc in degrees','0');
INSERT DBColumns VALUES('sdssSector','regionID','','ID_CATALOG','','unique, sequential ID','0');
INSERT DBColumns VALUES('sdssSector','nTiles','','NUMBER','','number of overlapping tiles','0');
INSERT DBColumns VALUES('sdssSector','tiles','','ID_VERSION','','list of tiles in Sector','0');
INSERT DBColumns VALUES('sdssSector','targetVersion','','','','the version of target selection ran over the sector -/K ID_VERSION','0');
INSERT DBColumns VALUES('sdssSector','area','deg^2','EXTENSION_AREA','','area of this overlap region','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','objID','','ID_CATALOG','','ID of the best PhotoObj','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','regionID','','ID_CATALOG','','ID of the sector','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','status','','CODE_MISC','PhotoStatus','Status of the object in the survey','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','primTarget','','CODE_MISC','PrimTarget','Bit mask of primary target categories the object was selected in.','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','secTarget','','CODE_MISC','SecTarget','Bit mask of secondary target categories the object was selected in.','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','petroMag_r','mag','PHOT_SDSS_R','','Petrosian flux','0');
INSERT DBColumns VALUES('sdssBestTarget2Sector','extinction_r','mag','PHOT_EXTINCTION_GAL','','Extinction in each filter','0');
INSERT DBColumns VALUES('sdssSector2Tile','regionID','','ID_CATALOG','','ID of the sector','0');
INSERT DBColumns VALUES('sdssSector2Tile','type','','','','type of the sector','0');
INSERT DBColumns VALUES('sdssSector2Tile','tile','','ID_CATALOG','','tile number','0');
INSERT DBColumns VALUES('sdssSector2Tile','isMask','','','','flag that shows sign of tile (1 is negative)','0');
INSERT DBColumns VALUES('Region2Box','regionType','','','','type of parent, (TIGEOM)','0');
INSERT DBColumns VALUES('Region2Box','id','','','','the object id of the other parent region','0');
INSERT DBColumns VALUES('Region2Box','boxType','','','','type of child (TILEBOX, SKYBOX)','0');
INSERT DBColumns VALUES('Region2Box','boxid','','','','regionid of child','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','sdssPolygonID','','','','integer description of polygon','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','x','','','','x-component of normal vector','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','y','','','','y-component of normal vector','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','z','','','','z-component of normal vector','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','c','','','','offset from center along normal','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','xMangle','','','','mangle version of x-component','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','yMangle','','','','mangle version of y-component','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','zMangle','','','','mangle version of z-component','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','cMangle','','','','mangle version of offset from center','0');
INSERT DBColumns VALUES('sdssImagingHalfSpaces','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssPolygons','sdssPolygonID','','','','integer description of polygon','0');
INSERT DBColumns VALUES('sdssPolygons','nField','','','','number of fields in the polygon','0');
INSERT DBColumns VALUES('sdssPolygons','primaryFieldID','','','','ID of primary field in this polygon','0');
INSERT DBColumns VALUES('sdssPolygons','ra','deg','','','RA (J2000 deg) in approximate center of polygon','0');
INSERT DBColumns VALUES('sdssPolygons','dec','deg','','','Dec (J2000 deg) in approximate center of polygon','0');
INSERT DBColumns VALUES('sdssPolygons','area','square deg','','','area of polygon','0');
INSERT DBColumns VALUES('sdssPolygons','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sdssPolygon2Field','sdssPolygonID','','','','integer designator of polygon','0');
INSERT DBColumns VALUES('sdssPolygon2Field','fieldID','','','','field identification','0');
INSERT DBColumns VALUES('sdssPolygon2Field','loadVersion','','ID_VERSION','','Load Version','0');
INSERT DBColumns VALUES('sppLines','specObjID','','','','id number','0');
INSERT DBColumns VALUES('sppLines','bestObjID','','ID_MAIN','','Object ID of photoObj match (flux-based)','0');
INSERT DBColumns VALUES('sppLines','TARGETOBJID','','','','targeted object ID','0');
INSERT DBColumns VALUES('sppLines','sciencePrimary','','','','Best version of spectrum at this location (defines default view SpecObj)','0');
INSERT DBColumns VALUES('sppLines','legacyPrimary','','','','Best version of spectrum at this location, among Legacy plates','0');
INSERT DBColumns VALUES('sppLines','seguePrimary','','','','Best version of spectrum at this location, among SEGUE plates (defines default view SpecObj)','0');
INSERT DBColumns VALUES('sppLines','PLATE','','','','Plate number','0');
INSERT DBColumns VALUES('sppLines','MJD','','','','Modified Julian Date','0');
INSERT DBColumns VALUES('sppLines','FIBER','','','','Fiber ID','0');
INSERT DBColumns VALUES('sppLines','RUN2D','','','','Name of 2D rerun','0');
INSERT DBColumns VALUES('sppLines','RUN1D','','','','Name of 1D rerun','0');
INSERT DBColumns VALUES('sppLines','RUNSSPP','','','','Name of SSPP rerun','0');
INSERT DBColumns VALUES('sppLines','H83side','Angstrom','','','Hzeta line index from local continuum at 3889.0 with band widths of 3.0','0');
INSERT DBColumns VALUES('sppLines','H83cont','Angstrom','','','Hzeta line index from global continuum at 3889.0 with band widths of 3.0','0');
INSERT DBColumns VALUES('sppLines','H83err','Angstrom','','','Hzeta line index error in the lind band at 3889.0 with band widths of 3.0','0');
INSERT DBColumns VALUES('sppLines','H83mask','','','','Hzeta pixel quality check, =0 good, =1 bad at 3889.0 with band widths of 3.0','0');
INSERT DBColumns VALUES('sppLines','H812side','Angstrom','','','Hzeta line index from local continuum at 3889.1 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','H812cont','Angstrom','','','Hzeta line index from global continuum at 3889.1 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','H812err','Angstrom','','','Hzeta line index error in the lind band at 3889.1 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','H812mask','','','','Hzeta pixel quality check, =0 good, =1 bad at 3889.1 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','H824side','Angstrom','','','Hzeta line index from local continuum at 3889.1 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','H824cont','Angstrom','','','Hzeta line index from global continuum at 3889.1 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','H824err','Angstrom','','','Hzeta line index error in the lind band at 3889.1 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','H824mask','','','','Hzeta pixel quality check, =0 good, =1 bad at 3889.1 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','H848side','Angstrom','','','Hzeta line index from local continuum at 3889.1 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','H848cont','Angstrom','','','Hzeta line index from global continuum at 3889.1 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','H848err','Angstrom','','','Hzeta line index error in the lind band at 3889.1 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','H848mask','','','','Hzeta pixel quality check, =0 good, =1 bad at 3889.1 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','KP12side','Angstrom','','','Ca II K line index from local continuum at 3933.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','KP12cont','Angstrom','','','Ca II K line index from global continuum at 3933.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','KP12err','Angstrom','','','Ca II K line index error in the lind band at 3933.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','KP12mask','','','','Ca II K pixel quality check, =0 good, =1 bad at 3933.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','KP18side','Angstrom','','','Ca II K line index from local continuum at 3933.7 with band widths of 18.0','0');
INSERT DBColumns VALUES('sppLines','KP18cont','Angstrom','','','Ca II K line index from global continuum at 3933.7 with band widths of 18.0','0');
INSERT DBColumns VALUES('sppLines','KP18err','Angstrom','','','Ca II K line index error in the lind band at 3933.7 with band widths of 18.0','0');
INSERT DBColumns VALUES('sppLines','KP18mask','','','','Ca II K pixel quality check =0, good, =1 bad at 3933.7 with band widths of 18.0','0');
INSERT DBColumns VALUES('sppLines','KP6side','Angstrom','','','Ca II K line index from local continuum at 3933.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','KP6cont','Angstrom','','','Ca II K line index from global continuum at 3933.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','KP6err','Angstrom','','','Ca II K line index error in the lind band at 3933.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','KP6mask','','','','Ca II K pixel quality check =0, good, =1 bad at 3933.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','CaIIKside','Angstrom','','','Ca II K line index from local continuum at 3933.6 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaIIKcont','Angstrom','','','Ca II K line index from global continuum at 3933.6 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaIIKerr','Angstrom','','','Ca II K line index error in the lind band at 3933.6 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaIIKmask','','','','Ca II K pixel quality check =0, good, =1 bad at 3933.6 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaIIHKside','Angstrom','','','Ca II H and K line index from local continuum at 3962.0 with band widths of 75.0','0');
INSERT DBColumns VALUES('sppLines','CaIIHKcont','Angstrom','','','Ca II H and K line index from global continuum at 3962.0 with band widths of 75.0','0');
INSERT DBColumns VALUES('sppLines','CaIIHKerr','Angstrom','','','Ca II H and K line index error in the lind band at 3962.0 with band widths of 75.0','0');
INSERT DBColumns VALUES('sppLines','CaIIHKmask','','','','Ca II H and K pixel quality check =0, good, =1 bad at 3962.0 with band widths of 75.0','0');
INSERT DBColumns VALUES('sppLines','Hepsside','Angstrom','','','Hepsilon line index from local continuum at 3970.0 with band widths of 50.0','0');
INSERT DBColumns VALUES('sppLines','Hepscont','Angstrom','','','Hepsilon line index from global continuum at 3970.0 with band widths of 50.0','0');
INSERT DBColumns VALUES('sppLines','Hepserr','Angstrom','','','Hepsilon line index error in the lind band at 3970.0 with band widths of 50.0','0');
INSERT DBColumns VALUES('sppLines','Hepsmask','','','','Hepsilon pixel quality check =0, good, =1 bad at 3970.0 with band widths of 50.0','0');
INSERT DBColumns VALUES('sppLines','KP16side','Angstrom','','','Ca II K line index from local continuum at 3933.7 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','KP16cont','Angstrom','','','Ca II K line index from global continuum at 3933.7 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','KP16err','Angstrom','','','Ca II K line index error in the lind band at 3933.7 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','KP16mask','','','','Ca II K pixel quality check =0, good, =1 bad at 3933.7 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','SrII1side','Angstrom','','','Sr II line index from local continuum at 4077.0 with band widths of 8.0','0');
INSERT DBColumns VALUES('sppLines','SrII1cont','Angstrom','','','Sr II line index from global continuum at 4077.0 with band widths of 8.0','0');
INSERT DBColumns VALUES('sppLines','SrII1err','Angstrom','','','Sr II line index error in the lind band at 4077.0 with band widths of 8.0','0');
INSERT DBColumns VALUES('sppLines','SrII1mask','','','','Sr II pixel quality check =0, good, =1 bad at 4077.0 with band widths of 8.0','0');
INSERT DBColumns VALUES('sppLines','HeI121side','Angstrom','','','He I line index from local continuum at 4026.2 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI121cont','Angstrom','','','He I line index from global continuum at 4026.2 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI121err','Angstrom','','','He I line index error in the lind band at 4026.2 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI121mask','','','','He I pixel quality check =0, good, =1 bad at 4026.2 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta12side','Angstrom','','','Hdelta line index from local continuum at 4101.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta12cont','Angstrom','','','Hdelta line index from global continuum at 4101.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta12err','Angstrom','','','Hdelta line index error in the lind band at 4101.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta12mask','','','','Hdelta pixel quality check =0, good, =1 bad at 4101.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta24side','Angstrom','','','Hdelta line index from local continuum at 4101.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta24cont','Angstrom','','','Hdelta line index from global continuum at 4101.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta24err','Angstrom','','','Hdelta line index error in the lind band at 4101.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta24mask','','','','Hdelta pixel quality check =0, good, =1 bad at 4101.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta48side','Angstrom','','','Hdelta line index from local continuum at 4101.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta48cont','Angstrom','','','Hdelta line index from global continuum at 4101.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta48err','Angstrom','','','Hdelta line index error in the lind band at 4101.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hdelta48mask','','','','Hdelta pixel quality check =0, good, =1 bad at 4101.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hdeltaside','Angstrom','','','Hdelta line index from local continuum at 4102.0 with band widths of 64.0','0');
INSERT DBColumns VALUES('sppLines','Hdeltacont','Angstrom','','','Hdelta line index from global continuum at 4102.0 with band widths of 64.0','0');
INSERT DBColumns VALUES('sppLines','Hdeltaerr','Angstrom','','','Hdelta line index error in the lind band at 4102.0 with band widths of 64.0','0');
INSERT DBColumns VALUES('sppLines','Hdeltamask','','','','Hdelta pixel quality check =0, good, =1 bad at 4102.0 with band widths of 64.0','0');
INSERT DBColumns VALUES('sppLines','CaI4side','Angstrom','','','Ca I line index from local continuum at 4226.0 with band widths of 4.0','0');
INSERT DBColumns VALUES('sppLines','CaI4cont','Angstrom','','','Ca I line index from global continuum at 4226.0 with band widths of 4.0','0');
INSERT DBColumns VALUES('sppLines','CaI4err','Angstrom','','','Ca I line index error in the lind band at 4226.0 with band widths of 4.0','0');
INSERT DBColumns VALUES('sppLines','CaI4mask','','','','Ca I pixel quality check =0, good, =1 bad at 4226.0 with band widths of 4.0','0');
INSERT DBColumns VALUES('sppLines','CaI12side','Angstrom','','','Ca I line index from local continuum at 4226.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CaI12cont','Angstrom','','','Ca I line index from global continuum at 4226.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CaI12err','Angstrom','','','Ca I line index error in the lind band at 4226.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CaI12mask','','','','Ca I pixel quality check =0, good, =1 bad at 4226.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CaI24side','Angstrom','','','Ca I line index from local continuum at 4226.7 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','CaI24cont','Angstrom','','','Ca I line index from global continuum at 4226.7 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','CaI24err','Angstrom','','','Ca I line index error in the lind band at 4226.7 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','CaI24mask','','','','Ca I pixel quality check =0, good, =1 bad at 4226.7 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','CaI6side','Angstrom','','','Ca I line index from local continuum at 4226.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','CaI6cont','Angstrom','','','Ca I line index from global continuum at 4226.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','CaI6err','Angstrom','','','Ca I line index error in the lind band at 4226.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','CaI6mask','','','','Ca I pixel quality check =0, good, =1 bad at 4226.7 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','Gside','Angstrom','','','G band line index from local continuum at 4305.0 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','Gcont','Angstrom','','','G band line index from global continuum at 4305.0 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','Gerr','Angstrom','','','G band line index error in the lind band at 4305.0 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','Gmask','','','','G band pixel quality check =0, good, =1 bad at 4305.0 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma12side','Angstrom','','','Hgamma line index from local continuum at 4340.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma12cont','Angstrom','','','Hgamma line index from global continuum at 4340.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma12err','Angstrom','','','Hgamma line index error in the lind band at 4340.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma12mask','','','','Hgamma pixel quality check =0, good, =1 bad at 4340.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma24side','Angstrom','','','Hgamma line index from local continuum at 4340.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma24cont','Angstrom','','','Hgamma line index from global continuum at 4340.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma24err','Angstrom','','','Hgamma line index error in the lind band at 4340.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma24mask','','','','Hgamma pixel quality check =0, good, =1 bad at 4340.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma48side','Angstrom','','','Hgamma line index from local continuum at 4340.5 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma48cont','Angstrom','','','Hgamma line index from global continuum at 4340.5 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma48err','Angstrom','','','Hgamma line index error in the lind band at 4340.5 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hgamma48mask','','','','Hgamma pixel quality check =0, good, =1 bad at 4340.5 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hgammaside','Angstrom','','','Hgamma line index from local continuum at 4340.5 with band widths of 54.0','0');
INSERT DBColumns VALUES('sppLines','Hgammacont','Angstrom','','','Hgamma line index from global continuum at 4340.5 with band widths of 54.0','0');
INSERT DBColumns VALUES('sppLines','Hgammaerr','Angstrom','','','Hgamma line index error in the lind band at 4340.5 with band widths of 54.0','0');
INSERT DBColumns VALUES('sppLines','Hgammamask','','','','Hgamma pixel quality check =0, good, =1 bad at 4340.5 with band widths of 54.0','0');
INSERT DBColumns VALUES('sppLines','HeI122side','Angstrom','','','He I line index from local continuum at 4471.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI122cont','Angstrom','','','He I line index from global continuum at 4471.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI122err','Angstrom','','','He I line index error in the lind band at 4471.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','HeI122mask','','','','He I pixel quality check =0, good, =1 bad at 4471.7 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Gblueside','Angstrom','','','G band line index from local continuum at 4305.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','Gbluecont','Angstrom','','','G band line index from global continuum at 4305.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','Gblueerr','Angstrom','','','G band line index error in the lind band at 4305.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','Gbluemask','','','','G band pixel quality check =0, good, =1 bad at 4305.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','Gwholeside','Angstrom','','','G band line index from local continuum at 4321.0 with band widths of 28.0','0');
INSERT DBColumns VALUES('sppLines','Gwholecont','Angstrom','','','G band line index from global continuum at 4321.0 with band widths of 28.0','0');
INSERT DBColumns VALUES('sppLines','Gwholeerr','Angstrom','','','G band line index error in the lind band at 4321.0 with band widths of 28.0','0');
INSERT DBColumns VALUES('sppLines','Gwholemask','','','','G band pixel quality check =0, good, =1 bad at 4321.0 with band widths of 28.0','0');
INSERT DBColumns VALUES('sppLines','Baside','Angstrom','','','Ba line index from local continuum at 4554.0 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','Bacont','Angstrom','','','Ba line index from global continuum at 4554.0 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','Baerr','Angstrom','','','Ba line index error in the lind band at 4554.0 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','Bamask','','','','Ba pixel quality check =0, good, =1 bad at 4554.0 with band widths of 6.0','0');
INSERT DBColumns VALUES('sppLines','C12C13side','Angstrom','','','C12C13 band line index from local continuum at 4737.0 with band widths of 36.0','0');
INSERT DBColumns VALUES('sppLines','C12C13cont','Angstrom','','','C12C13 band line index from global continuum at 4737.0 with band widths of 36.0','0');
INSERT DBColumns VALUES('sppLines','C12C13err','Angstrom','','','C12C13 band line index error in the lind band at 4737.0 with band widths of 36.0','0');
INSERT DBColumns VALUES('sppLines','C12C13mask','','','','C12C13 band pixel quality check =0, good, =1 bad at 4737.0 with band widths of 36.0','0');
INSERT DBColumns VALUES('sppLines','CC12side','Angstrom','','','C2 band line index from local continuum at 4618.0 with band widths of 256.0','0');
INSERT DBColumns VALUES('sppLines','CC12cont','Angstrom','','','C2 band line index from global continuum at 4618.0 with band widths of 256.0','0');
INSERT DBColumns VALUES('sppLines','CC12err','Angstrom','','','C2 band line index error in the lind band at 4618.0 with band widths of 256.0','0');
INSERT DBColumns VALUES('sppLines','CC12mask','','','','C2 band pixel quality check =0, good, =1 bad at 4618.0 with band widths of 256.0','0');
INSERT DBColumns VALUES('sppLines','metal1side','Angstrom','','','Metallic line index from local continuum at 4584.0 with band widths of 442.0','0');
INSERT DBColumns VALUES('sppLines','metal1cont','Angstrom','','','Metallic line index from global continuum at 4584.0 with band widths of 442.0','0');
INSERT DBColumns VALUES('sppLines','metal1err','Angstrom','','','Metlllic line index error in the lind band at 4584.0 with band widths of 442.0','0');
INSERT DBColumns VALUES('sppLines','metal1mask','','','','Metal1ic pixel quality check =0, good, =1 bad at 4584.0 with band widths of 442.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta12side','Angstrom','','','Hbeta line index from local continuum at 4862.3 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta12cont','Angstrom','','','Hbeta line index from global continuum at 4862.3 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta12err','Angstrom','','','Hbeta line index error in the lind band at 4862.3 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta12mask','','','','Hbeta pixel quality check =0, good, =1 bad at 4862.3 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta24side','Angstrom','','','Hbeta line index from local continuum at 4862.3 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta24cont','Angstrom','','','Hbeta line index from global continuum at 4862.3 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta24err','Angstrom','','','Hbeta line index error in the lind band at 4862.3 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta24mask','','','','Hbeta pixel quality check =0, good, =1 bad at 4862.3 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta48side','Angstrom','','','Hbeta line index from local continuum at 4862.3 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta48cont','Angstrom','','','Hbeta line index from global continuum at 4862.3 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta48err','Angstrom','','','Hbeta line index error in the lind band at 4862.3 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hbeta48mask','','','','Hbeta pixel quality check =0, good, =1 bad at 4862.3 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Hbetaside','Angstrom','','','Hbeta line index from local continuum at 4862.3 with band widths of 60.0','0');
INSERT DBColumns VALUES('sppLines','Hbetacont','Angstrom','','','Hbeta line index from global continuum at 4862.3 with band widths of 60.0','0');
INSERT DBColumns VALUES('sppLines','Hbetaerr','Angstrom','','','Hbeta line index error in the lind band at 4862.3 with band widths of 60.0','0');
INSERT DBColumns VALUES('sppLines','Hbetamask','','','','Hbeta pixel quality check =0, good, =1 bad at 4862.3 with band widths of 60.0','0');
INSERT DBColumns VALUES('sppLines','C2side','Angstrom','','','C2 band line index from local continuum at 5052.0 with band widths of 204.0','0');
INSERT DBColumns VALUES('sppLines','C2cont','Angstrom','','','C2 band line index from global continuum at 5052.0 with band widths of 204.0','0');
INSERT DBColumns VALUES('sppLines','C2err','Angstrom','','','C2 band line index error in the lind band at 5052.0 with band widths of 204.0','0');
INSERT DBColumns VALUES('sppLines','C2mask','','','','C2 band pixel quality check =0, good, =1 bad at 5052.0 with band widths of 204.0','0');
INSERT DBColumns VALUES('sppLines','C2MgIside','Angstrom','','','C2 and Mg I line index from local continuum at 5069.0 with band widths of 238.0','0');
INSERT DBColumns VALUES('sppLines','C2MgIcont','Angstrom','','','C2 and Mg I line index from global continuum at 5069.0 with band widths of 238.0','0');
INSERT DBColumns VALUES('sppLines','C2MgIerr','Angstrom','','','C2 and Mg I line index error in the lind band at 5069.0 with band widths of 238.0','0');
INSERT DBColumns VALUES('sppLines','C2MgImask','','','','C2 and Mg I pixel quality check =0, good, =1 bad at 5069.0 with band widths of 238.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIC2side','Angstrom','','','MgH, Mg I, and C2 line index from local continuum at 5085.0 with band widths of 270.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIC2cont','Angstrom','','','MgH, Mg I, and C2 line index from global continuum at 5085.0 with band widths of 270.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIC2err','Angstrom','','','MgH, Mg I, and C2 line index error in the lind band at 5085.0 with band widths of 270.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIC2mask','','','','MgH, Mg I, and C2 pixel quality check =0, good, =1 bad at 5085.0 with band widths of 270.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIside','Angstrom','','','MgH and Mg I line index from local continuum at 5198.0 with band widths of 44.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIcont','Angstrom','','','MgH and Mg I line index from global continuum at 5198.0 with band widths of 44.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgIerr','Angstrom','','','MgH and Mg I line index error in the lind band at 5198.0 with band widths of 44.0','0');
INSERT DBColumns VALUES('sppLines','MgHMgImask','','','','MgH_MgI pixel quality check =0, good, =1 bad at 5198.0 with band widths of 44.0','0');
INSERT DBColumns VALUES('sppLines','MgHside','Angstrom','','','MgH line index from local continuum at 5210.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgHcont','Angstrom','','','MgH line index from global continuum at 5210.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgHerr','Angstrom','','','MgH line index error in the lind band at 5210.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgHmask','','','','MgH pixel quality check =0, good, =1 bad at 5210.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','CrIside','Angstrom','','','Cr I line index from local continuum at 5206.0 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CrIcont','Angstrom','','','Cr I line index from global continuum at 5206.0 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CrIerr','Angstrom','','','Cr I line index error in the lind band at 5206.0 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','CrImask','','','','Cr I pixel quality check =0, good, =1 bad at 5206.0 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgIFeIIside','Angstrom','','','Mg I and Fe II line index from local continuum at 5175.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgIFeIIcont','Angstrom','','','Mg I and Fe II line index from global continuum at 5175.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgIFeIIerr','Angstrom','','','Mg I and Fe II line index error in the lind band at 5175.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgIFeIImask','','','','Mg I and Fe II pixel quality check =0, good, =1 bad at 5175.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','MgI2side','Angstrom','','','Mg I line index from local continuum at 5183.0 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','MgI2cont','Angstrom','','','Mg I line index from global continuum at 5183.0 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','MgI2err','Angstrom','','','Mg I line index error in the lind band at 5183.0 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','MgI2mask','','','','Mg I pixel quality check =0, good, =1 bad at 5183.0 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','MgI121side','Angstrom','','','Mg I line index from local continuum at 5170.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI121cont','Angstrom','','','Mg I line index from global continuum at 5170.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI121err','Angstrom','','','Mg I line index error in the lind band at 5170.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI121mask','','','','Mg I pixel quality check =0, good, =1 bad at 5170.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI24side','Angstrom','','','Mg I line index from local continuum at 5176.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','MgI24cont','Angstrom','','','Mg I line index from global continuum at 5176.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','MgI24err','Angstrom','','','Mg I line index error in the lind band at 5176.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','MgI24mask','','','','Mg I pixel quality check =0, good, =1 bad at 5176.5 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','MgI122side','Angstrom','','','Mg I line index from local continuum at 5183.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI122cont','Angstrom','','','Mg I line index from global continuum at 5183.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI122err','Angstrom','','','Mg I line index error in the lind band at 5183.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','MgI122mask','','','','Mg I pixel quality check =0, good, =1 bad at 5183.5 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','NaI20side','Angstrom','','','Na I line index from local continuum at 5890.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','NaI20cont','Angstrom','','','Na I line index from global continuum at 5890.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','NaI20err','Angstrom','','','Na I line index error in the lind band at 5890.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','NaI20mask','','','','Na I pixel quality check =0, good, =1 bad at 5890.0 with band widths of 20.0','0');
INSERT DBColumns VALUES('sppLines','Na12side','Angstrom','','','Na line index from local continuum at 5892.9 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Na12cont','Angstrom','','','Na line index from global continuum at 5892.9 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Na12err','Angstrom','','','Na line index error in the lind band at 5892.9 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Na12mask','','','','Na pixel quality check =0, good, =1 bad at 5892.9 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Na24side','Angstrom','','','Na line index from local continuum at 5892.9 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Na24cont','Angstrom','','','Na line index from global continuum at 5892.9 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Na24err','Angstrom','','','Na line index error in the lind band at 5892.9 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Na24mask','','','','Na pixel quality check =0, good, =1 bad at 5892.9 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Halpha12side','Angstrom','','','Halpha line index from local continuum at 6562.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Halpha12cont','Angstrom','','','Halpha line index from global continuum at 6562.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Halpha12err','Angstrom','','','Halpha line index error in the lind band at 6562.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Halpha12mask','','','','Halpha pixel quality check =0, good, =1 bad at 6562.8 with band widths of 12.0','0');
INSERT DBColumns VALUES('sppLines','Halpha24side','Angstrom','','','Halpha line index from local continuum at 6562.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Halpha24cont','Angstrom','','','Halpha line index from global continuum at 6562.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Halpha24err','Angstrom','','','Halpha line index error in the lind band at 6562.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Halpha24mask','','','','Halpha pixel quality check =0, good, =1 bad at 6562.8 with band widths of 24.0','0');
INSERT DBColumns VALUES('sppLines','Halpha48side','Angstrom','','','Halpha line index from local continuum at 6562.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Halpha48cont','Angstrom','','','Halpha line index from global continuum at 6562.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Halpha48err','Angstrom','','','Halpha line index error in the lind band at 6562.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Halpha48mask','','','','Halpha pixel quality check =0, good, =1 bad at 6562.8 with band widths of 48.0','0');
INSERT DBColumns VALUES('sppLines','Halpha70side','Angstrom','','','Halpha line index from local continuum at 6562.8 with band widths of 70.0','0');
INSERT DBColumns VALUES('sppLines','Halpha70cont','Angstrom','','','Halpha line index from global continuum at 6562.8 with band widths of 70.0','0');
INSERT DBColumns VALUES('sppLines','Halpha70err','Angstrom','','','Halpha line index error in the lind band at 6562.8 with band widths of 70.0','0');
INSERT DBColumns VALUES('sppLines','Halpha70mask','','','','Halpha pixel quality check =0, good, =1 bad at 6562.8 with band widths of 70.0','0');
INSERT DBColumns VALUES('sppLines','CaHside','Angstrom','','','CaH line index from local continuum at 6788.0 with band widths of 505.0','0');
INSERT DBColumns VALUES('sppLines','CaHcont','Angstrom','','','CaH line index from global continuum at 6788.0 with band widths of 505.0','0');
INSERT DBColumns VALUES('sppLines','CaHerr','Angstrom','','','CaH line index error in the lind band at 6788.0 with band widths of 505.0','0');
INSERT DBColumns VALUES('sppLines','CaHmask','','','','CaH pixel quality check =0, good, =1 bad at 6788.0 with band widths of 505.0','0');
INSERT DBColumns VALUES('sppLines','TiOside','Angstrom','','','TiO line index from local continuum at 7209.0 with band widths of 333.3','0');
INSERT DBColumns VALUES('sppLines','TiOcont','Angstrom','','','TiO line index from global continuum at 7209.0 with band widths of 333.3','0');
INSERT DBColumns VALUES('sppLines','TiOerr','Angstrom','','','TiO line index error in the lind band at 7209.0 with band widths of 333.3','0');
INSERT DBColumns VALUES('sppLines','TiOmask','','','','TiO pixel quality check =0, good, =1 bad at 7209.0 with band widths of 333.3','0');
INSERT DBColumns VALUES('sppLines','CNside','Angstrom','','','CN line index from local continuum at 6890.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CNcont','Angstrom','','','CN line index from global continuum at 6890.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CNerr','Angstrom','','','CN line index error in the lind band at 6890.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CNmask','','','','CN pixel quality check =0, good, =1 bad at 6890.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','OItripside','Angstrom','','','O I triplet line index from local continuu at 7775.0 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','OItripcont','Angstrom','','','O I triplet line index from global continuum at 7775.0 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','OItriperr','Angstrom','','','O I triplet line index error in the lind band at 7775.0 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','OItripmask','','','','O I triplet pixel quality check =0, good, =1 bad at 7775.0 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','KI34side','Angstrom','','','K I line index from local continuum at 7687.0 with band widths of 34.0','0');
INSERT DBColumns VALUES('sppLines','KI34cont','Angstrom','','','K I line index from global continuum at 7687.0 with band widths of 34.0','0');
INSERT DBColumns VALUES('sppLines','KI34err','Angstrom','','','K I line index error in the lind band at 7687.0 with band widths of 34.0','0');
INSERT DBColumns VALUES('sppLines','KI34mask','','','','K I pixel quality check =0, good, =1 bad at 7687.0 with band widths of 34.0','0');
INSERT DBColumns VALUES('sppLines','KI95side','Angstrom','','','K I line index from local continuum at 7688.0 with band widths of 95.0','0');
INSERT DBColumns VALUES('sppLines','KI95cont','Angstrom','','','K I line index from global continuum at 7688.0 with band widths of 95.0','0');
INSERT DBColumns VALUES('sppLines','KI95err','Angstrom','','','K I line index error in the lind band at 7688.0 with band widths of 95.0','0');
INSERT DBColumns VALUES('sppLines','KI95mask','','','','K I pixel quality check =0, good, =1 bad at 7688.0 with band widths of 95.0','0');
INSERT DBColumns VALUES('sppLines','NaI15side','Angstrom','','','Na I line index from local continuum at 8187.5 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','NaI15cont','Angstrom','','','Na I line index from global continuum at 8187.5 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','NaI15err','Angstrom','','','Na I line index error in the lind band at 8187.5 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','NaI15mask','','','','Na I pixel quality check =0, good, =1 bad at 8187.5 with band widths of 15.0','0');
INSERT DBColumns VALUES('sppLines','NaIredside','Angstrom','','','Na I line index from local continuum at 8190.2 with band widths of 33.0','0');
INSERT DBColumns VALUES('sppLines','NaIredcont','Angstrom','','','Na I line index from global continuum at 8190.2 with band widths of 33.0','0');
INSERT DBColumns VALUES('sppLines','NaIrederr','Angstrom','','','Na I line index error in the lind band at 8190.2 with band widths of 33.0','0');
INSERT DBColumns VALUES('sppLines','NaIredmask','','','','Na I pixel quality check =0, good, =1 bad at 8190.2 with band widths of 33.0','0');
INSERT DBColumns VALUES('sppLines','CaII26side','Angstrom','','','Ca II triplet line index from local continuum at 8498.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CaII26cont','Angstrom','','','Ca II triplet line index from global continuum at 8498.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CaII26err','Angstrom','','','Ca II triplet line index error in the lind band at 8498.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','CaII26mask','','','','Ca II triplet pixel quality check =0, good, =1 bad at 8498.0 with band widths of 26.0','0');
INSERT DBColumns VALUES('sppLines','Paschen13side','Angstrom','','','Paschen line index from local continuum at 8467.5 with band widths of 13.0','0');
INSERT DBColumns VALUES('sppLines','Paschen13cont','Angstrom','','','Paschen line index from global continuum at 8467.5 with band widths of 13.0','0');
INSERT DBColumns VALUES('sppLines','Paschen13err','Angstrom','','','Paschen line index error in the lind band at 8467.5 with band widths of 13.0','0');
INSERT DBColumns VALUES('sppLines','Paschen13mask','','','','Paschen pixel quality check =0, good, =1 bad at 8467.5 with band widths of 13.0','0');
INSERT DBColumns VALUES('sppLines','CaII29side','Angstrom','','','Ca II triplet line index from local continuum at 8498.5 with band widths of 29.0','0');
INSERT DBColumns VALUES('sppLines','CaII29cont','Angstrom','','','Ca II triplet line index from global continuum at 8498.5 with band widths of 29.0','0');
INSERT DBColumns VALUES('sppLines','CaII29err','Angstrom','','','Ca II triplet line index error in the lind band at 8498.5 with band widths of 29.0','0');
INSERT DBColumns VALUES('sppLines','CaII29mask','','','','Ca II triplet pixel quality check =0, good, =1 bad at 8498.5 with band widths of 29.0','0');
INSERT DBColumns VALUES('sppLines','CaII401side','Angstrom','','','Ca II triplet line index from local continuum at 8542.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII401cont','Angstrom','','','Ca II triplet line index from global continuum at 8542.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII401err','Angstrom','','','Ca II triplet line index error in the lind band at 8542.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII401mask','','','','Ca II triplet pixel quality check =0, good, =1 bad at 8542.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII161side','Angstrom','','','Ca II triplet_1 line index from local continuum at 8542.0 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII161cont','Angstrom','','','Ca II triplet_1 line index from global continuum at 8542.0 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII161err','Angstrom','','','Ca II triplet_1 line index error in the lind band at 8542.0 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII161mask','','','','Ca II triplet_1 pixel quality check =0, good, =1 bad at 8542.0 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','Paschen421side','Angstrom','','','Paschen line index from local continuum at 8598.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen421cont','Angstrom','','','Paschen line index from global continuum at 8598.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen421err','Angstrom','','','Paschen line index error in the lind band at 8598.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen421mask','','','','Paschen pixel quality check =0, good, =1 bad at 8598.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','CaII162side','Angstrom','','','Ca II triplet line index from local continuum at 8662.1 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII162cont','Angstrom','','','Ca II triplet line index from global continuum at 8662.1 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII162err','Angstrom','','','Ca II triplet line index error in the lind band at 8662.1 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII162mask','','','','Ca II triplet pixel quality check =0, good, =1 bad at 8662.1 with band widths of 16.0','0');
INSERT DBColumns VALUES('sppLines','CaII402side','Angstrom','','','Ca II triplet line index from local continuum at 8662.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII402cont','Angstrom','','','Ca II triplet line index from global continuum at 8662.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII402err','Angstrom','','','Ca II triplet line index error in the lind band at 8662.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','CaII402mask','','','','Ca II triplet pixel quality check =0, good, =1 bad at 8662.0 with band widths of 40.0','0');
INSERT DBColumns VALUES('sppLines','Paschen422side','Angstrom','','','Paschen line index from local continuum at 8751.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen422cont','Angstrom','','','Paschen line index from global continuum at 8751.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen422err','Angstrom','','','Paschen line index error in the lind band at 8751.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','Paschen422mask','','','','Paschen pixel quality check =0, good, =1 bad at 8751.0 with band widths of 42.0','0');
INSERT DBColumns VALUES('sppLines','TiO5side','','','','TiO5 line index from local continuum at 7134.4 with band widths of 5.0','0');
INSERT DBColumns VALUES('sppLines','TiO5cont','','','','TiO5 line index from global continuum at 7134.4 with band widths of 5.0','0');
INSERT DBColumns VALUES('sppLines','TiO5err','','','','TiO5 line index error in the lind band at 7134.4 with band widths of 5.0','0');
INSERT DBColumns VALUES('sppLines','TiO5mask','','','','TiO5 pixel quality check =0, good, =1 bad at 7134.4 with band widths of 5.0','0');
INSERT DBColumns VALUES('sppLines','TiO8side','','','','TiO8 line index from local continuum at 8457.3 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','TiO8cont','','','','TiO8 line index from global continuum at 8457.3 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','TiO8err','','','','TiO8 line index error in the lind band at 8457.3 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','TiO8mask','','','','TiO8 pixel quality check =0, good, =1 bad at 8457.3 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaH1side','','','','CaH1 line index from local continuum at 6386.7 with band widths of 10.0','0');
INSERT DBColumns VALUES('sppLines','CaH1cont','','','','CaH1 line index from global continuum at 6386.7 with band widths of 10.0','0');
INSERT DBColumns VALUES('sppLines','CaH1err','','','','CaH1 line index error in the lind band at 6386.7 with band widths of 10.0','0');
INSERT DBColumns VALUES('sppLines','CaH1mask','','','','CaH1 pixel quality check =0, good, =1 bad at 6386.7 with band widths of 10.0','0');
INSERT DBColumns VALUES('sppLines','CaH2side','','','','CaH2 line index from local continuum at 6831.9 with band widths of 32.0','0');
INSERT DBColumns VALUES('sppLines','CaH2cont','','','','CaH2 line index from global continuum at 6831.9 with band widths of 32.0','0');
INSERT DBColumns VALUES('sppLines','CaH2err','','','','CaH2 line index error in the lind band at 6831.9 with band widths of 32.0','0');
INSERT DBColumns VALUES('sppLines','CaH2mask','','','','CaH2 pixel quality check =0, good, =1 bad at 6831.9 with band widths of 32.0','0');
INSERT DBColumns VALUES('sppLines','CaH3side','','','','CaH3 line index from local continuum at 6976.9 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaH3cont','','','','CaH3 line index from global continuum at 6976.9 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaH3err','','','','CaH3 line index error in the lind band at 6976.9 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','CaH3mask','','','','CaH3 pixel quality check =0, good, =1 bad at 6976.9 with band widths of 30.0','0');
INSERT DBColumns VALUES('sppLines','UVCNside','','','','CN line index at 3839','0');
INSERT DBColumns VALUES('sppLines','UVCNcont','','','','CN line index at 3839','0');
INSERT DBColumns VALUES('sppLines','UVCNerr','','','','CN line index error at 3829','0');
INSERT DBColumns VALUES('sppLines','UVCNmask','','','','CN pixel quality check =0, good, =1 bad at 3839','0');
INSERT DBColumns VALUES('sppLines','BLCNside','','','','CN line index at 4142','0');
INSERT DBColumns VALUES('sppLines','BLCNcont','','','','CN line index at 4142','0');
INSERT DBColumns VALUES('sppLines','BLCNerr','','','','CN line index error at 4142','0');
INSERT DBColumns VALUES('sppLines','BLCNmask','','','','CN pixel quality check =0, good, =1 bad at 4142','0');
INSERT DBColumns VALUES('sppLines','FEI1side','Angstrom','','','Fe I line index at 4045.8 with band widths of 2.5','0');
INSERT DBColumns VALUES('sppLines','FEI1cont','Angstrom','','','Fe I line index at 4045.8 with band widths of 2.5','0');
INSERT DBColumns VALUES('sppLines','FEI1err','Angstrom','','','Fe I line index error at 4045.8 with band widths of 2.5','0');
INSERT DBColumns VALUES('sppLines','FEI1mask','','','','Fe I pixel quality check =0, good, =1 bad at 4045.8 with band widths of 2.5','0');
INSERT DBColumns VALUES('sppLines','FEI2side','Angstrom','','','Fe I line index at 4063.6 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI2cont','Angstrom','','','Fe I line index at 4063.6 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI2err','Angstrom','','','Fe I line index error at 4063.6 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI2mask','','','','Fe I pixel quality check =0, good, =1 bad at 4063.6 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI3side','Angstrom','','','Fe I line index at 4071.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI3cont','Angstrom','','','Fe I line index at 4071.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI3err','Angstrom','','','Fe I line index error at 4071.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI3mask','','','','Fe I pixel quality check =0, good, =1 bad at 4071.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','SRII2side','Angstrom','','','Sr II line index at 4077.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','SRII2cont','Angstrom','','','Sr II line index at 4077.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','SRII2err','Angstrom','','','Sr II line index error at 4077.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','SRII2mask','','','','Sr II pixel quality check =0, good, =1 bad at 4077.7 with band widths of 2.0','0');
INSERT DBColumns VALUES('sppLines','FEI4side','','','','Fe I line index at 4679.5 with band widths of 87.0','0');
INSERT DBColumns VALUES('sppLines','FEI4cont','','','','Fe I line index at 4679.5 with band widths of 87.0','0');
INSERT DBColumns VALUES('sppLines','FEI4err','','','','Fe I line index error at 4679.5 with band widths of 87.0','0');
INSERT DBColumns VALUES('sppLines','FEI4mask','','','','Fe I pixel quality check =0, good, =1 bad at 4679.5 with band widths of 87.0','0');
INSERT DBColumns VALUES('sppLines','FEI5side','','','','Fe I line index at 5267.4 with band widths of 38.8','0');
INSERT DBColumns VALUES('sppLines','FEI5cont','','','','Fe I line index at 5267.4 with band widths of 38.8','0');
INSERT DBColumns VALUES('sppLines','FEI5err','','','','Fe I line index error at 5267.4 with band widths of 38.8','0');
INSERT DBColumns VALUES('sppLines','FEI5mask','','','','Fe I pixel quality check =0, good, =1 bad at 5267.4 with band widths of 38.8','0');
INSERT DBColumns VALUES('sppParams','specObjID','','','','id number, match in specObjAll','0');
INSERT DBColumns VALUES('sppParams','BESTOBJID','','ID_MAIN','','Object ID of best PhotoObj match (flux-based)','0');
INSERT DBColumns VALUES('sppParams','FLUXOBJID','','ID_MAIN','','Object ID of best PhotoObj match (position-based)','0');
INSERT DBColumns VALUES('sppParams','TARGETOBJID','','','','targeted object ID','0');
INSERT DBColumns VALUES('sppParams','PLATEID','','','','Database ID of Plate (match in plateX)','0');
INSERT DBColumns VALUES('sppParams','sciencePrimary','','','','Best version of spectrum at this location (defines default view SpecObj)','0');
INSERT DBColumns VALUES('sppParams','legacyPrimary','','','','Best version of spectrum at this location, among Legacy plates','0');
INSERT DBColumns VALUES('sppParams','seguePrimary','','','','Best version of spectrum at this location, among SEGUE plates (defines default view SpecObj)','0');
INSERT DBColumns VALUES('sppParams','FIRSTRELEASE','','','','Name of first release this object was associated with','0');
INSERT DBColumns VALUES('sppParams','SURVEY','','','','Survey name','0');
INSERT DBColumns VALUES('sppParams','PROGRAMNAME','','','','Program name','0');
INSERT DBColumns VALUES('sppParams','CHUNK','','','','Chunk name','0');
INSERT DBColumns VALUES('sppParams','PLATERUN','','','','Plate drill run name','0');
INSERT DBColumns VALUES('sppParams','MJD','','','','Modified Julian Date of observation','0');
INSERT DBColumns VALUES('sppParams','PLATE','','','','Plate number','0');
INSERT DBColumns VALUES('sppParams','FIBERID','','','','Fiber number (1-640)','0');
INSERT DBColumns VALUES('sppParams','RUN2D','','','','Name of 2D rerun','0');
INSERT DBColumns VALUES('sppParams','RUN1D','','','','Name of 1D rerun','0');
INSERT DBColumns VALUES('sppParams','RUNSSPP','','','','Name of SSPP rerun','0');
INSERT DBColumns VALUES('sppParams','TARGETSTRING','','','','ASCII translation of target selection information as determined at the time the plate was designed','0');
INSERT DBColumns VALUES('sppParams','PRIMTARGET','','','PrimTarget','Target selection information at plate design, primary science selection (for backwards compatibility)','0');
INSERT DBColumns VALUES('sppParams','SECTARGET','','','PrimTarget','Target selection information at plate design, secondary/qa/calib selection  (for backwards compatibility)','0');
INSERT DBColumns VALUES('sppParams','LEGACY_TARGET1','','','PrimTarget','Legacy target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('sppParams','LEGACY_TARGET2','','','SecTarget','Legacy target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('sppParams','SPECIAL_TARGET1','','','SpecialTarget1','Special program target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('sppParams','SPECIAL_TARGET2','','','SpecialTarget2','Special program target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('sppParams','SEGUE1_TARGET1','','','Segue1Target1','SEGUE-1 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('sppParams','SEGUE1_TARGET2','','','Segue1Target2','SEGUE-1 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('sppParams','SEGUE2_TARGET1','','','Segue2Target1','SEGUE-2 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('sppParams','SEGUE2_TARGET2','','','Segue2Target2','SEGUE-2 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('sppParams','SPECTYPEHAMMER','','','','Spectral Type from HAMMER','0');
INSERT DBColumns VALUES('sppParams','SPECTYPESUBCLASS','','','','SpecBS sub-classification','0');
INSERT DBColumns VALUES('sppParams','FLAG','','','','Flag with combination of four letters among BCdDEgGhHlnNSV, n=normal','0');
INSERT DBColumns VALUES('sppParams','TEFFADOP','Kelvin','','','Adopted Teff, bi-weigth average of estimators with indicator variable of 1','0');
INSERT DBColumns VALUES('sppParams','TEFFADOPN','Kelvin','','','Number of estimators used in bi-weight average','0');
INSERT DBColumns VALUES('sppParams','TEFFADOPUNC','Kelvin','','','Error in the adopted temperature','0');
INSERT DBColumns VALUES('sppParams','TEFFHA24','Kelvin','','','Teff estimate from HA24','0');
INSERT DBColumns VALUES('sppParams','TEFFHD24','Kelvin','','','Teff estimate from HD24','0');
INSERT DBColumns VALUES('sppParams','TEFFNGS1','Kelvin','','','Teff estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','TEFFANNSR','Kelvin','','','Teff estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','TEFFANNRR','Kelvin','','','Teff estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','TEFFWBG','Kelvin','','','Teff estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','TEFFK24','Kelvin','','','Teff estimate from k24','0');
INSERT DBColumns VALUES('sppParams','TEFFKI13','Kelvin','','','Teff estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','TEFFHA24IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFHD24IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFNGS1IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFANNSRIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFANNRRIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFWBGIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFK24IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFKI13IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFHA24UNC','Kelvin','','','Error in Teff estimate from HA24','0');
INSERT DBColumns VALUES('sppParams','TEFFHD24UNC','Kelvin','','','Error in Teff estimate from HD24','0');
INSERT DBColumns VALUES('sppParams','TEFFNGS1UNC','Kelvin','','','Error in Teff estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','TEFFANNSRUNC','Kelvin','','','Error in Teff estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','TEFFANNRRUNC','Kelvin','','','Error in Teff estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','TEFFWBGUNC','Kelvin','','','Error in Teff estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','TEFFK24UNC','Kelvin','','','Error in Teff estimate from k24','0');
INSERT DBColumns VALUES('sppParams','TEFFKI13UNC','Kelvin','','','Error in Teff estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','LOGGADOP','dex','','','Adopted log g, bi-weigth average of estimators with indicator variable of 2','0');
INSERT DBColumns VALUES('sppParams','LOGGADOPN','','','','Number of log g estimators in used bi-weight average','0');
INSERT DBColumns VALUES('sppParams','LOGGADOPUNC','dex','','','Error in the adopted log g','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS2','dex','','','log g estimate from NGS2','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1','dex','','','log g estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','LOGGANNSR','dex','','','log g estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','LOGGANNRR','dex','','','log g estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1','dex','','','log g estimate from CaI1','0');
INSERT DBColumns VALUES('sppParams','LOGGWBG','dex','','','log g estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','LOGGK24','dex','','','log g estimate from k24','0');
INSERT DBColumns VALUES('sppParams','LOGGKI13','dex','','','log g estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS2IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGANNSRIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGANNRRIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGWBGIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGK24IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGKI13IND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS2UNC','dex','','','Error in log g estimate from NGS2','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1UNC','dex','','','Error in log g estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','LOGGANNSRUNC','dex','','','Error in log g estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','LOGGANNRRUNC','dex','','','Error in log g estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1UNC','dex','','','Error in log g estimate from CaI1','0');
INSERT DBColumns VALUES('sppParams','LOGGWBGUNC','dex','','','Error in log g estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','LOGGK24UNC','dex','','','Error in log g estimate from k24','0');
INSERT DBColumns VALUES('sppParams','LOGGKI13UNC','dex','','','Error in log g estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','FEHADOP','dex','','','Adopted [Fe/H], bi-weigth average of estimators with indicator variable of 2','0');
INSERT DBColumns VALUES('sppParams','FEHADOPN','','','','Number of estimators used in bi-weight average','0');
INSERT DBColumns VALUES('sppParams','FEHADOPUNC','dex','','','Error in the adopted [Fe/H]','0');
INSERT DBColumns VALUES('sppParams','FEHNGS2','dex','','','[Fe/H] estimate from NGS2','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1','dex','','','[Fe/H] estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','FEHANNSR','dex','','','[Fe/H] estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','FEHANNRR','dex','','','[Fe/H] estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1','dex','','','[Fe/H] estimate from CaIIK1','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK2','dex','','','[Fe/H] estimate from CaIIK2','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK3','dex','','','[Fe/H] estimate from CaIIK3','0');
INSERT DBColumns VALUES('sppParams','FEHWBG','dex','','','[Fe/H] estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','FEHK24','dex','','','[Fe/H] estimate from k24','0');
INSERT DBColumns VALUES('sppParams','FEHKI13','dex','','','[Fe/H] estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','FEHNGS2IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHANNSRIND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHANNRRIND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK2IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK3IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHWBGIND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHK24IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHKI13IND','','','','Indicator variable, = 0 bad, = 1 low S/N or out of g-r color range, = 2 good','0');
INSERT DBColumns VALUES('sppParams','FEHNGS2UNC','dex','','','Error in [Fe/H] estimate from NGS2','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1UNC','dex','','','Error in [Fe/H] estimate from NGS1','0');
INSERT DBColumns VALUES('sppParams','FEHANNSRUNC','dex','','','Error in [Fe/H] estimate from ANNSR','0');
INSERT DBColumns VALUES('sppParams','FEHANNRRUNC','dex','','','Error in [Fe/H] estimate from ANNRR','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1UNC','dex','','','Error in [Fe/H] estiimate from CaIIK1','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK2UNC','dex','','','Error in [Fe/H] estimate from CaIIK2','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK3UNC','dex','','','Error in [Fe/H] estimate from CaIIK3','0');
INSERT DBColumns VALUES('sppParams','FEHWBGUNC','dex','','','Error in [Fe/H] estimate from WBG','0');
INSERT DBColumns VALUES('sppParams','FEHK24UNC','dex','','','Error in [Fe/H] estimate from k24','0');
INSERT DBColumns VALUES('sppParams','FEHKI13UNC','dex','','','Error in [Fe/H] estimate from ki13','0');
INSERT DBColumns VALUES('sppParams','SNR','','','','Average S/N per pixel over 4000 - 8000 A','0');
INSERT DBColumns VALUES('sppParams','QA','','','','Quality check on spectrum, depending on S/N','0');
INSERT DBColumns VALUES('sppParams','CCCAHK','','','','Correlation coefficient over 3850-4250 A','0');
INSERT DBColumns VALUES('sppParams','CCMGH','','','','Correlation coefficient over 4500-5500 A','0');
INSERT DBColumns VALUES('sppParams','TEFFSPEC','Kelvin','','','Spectroscopically determined Teff, color independent','0');
INSERT DBColumns VALUES('sppParams','TEFFSPECN','','','','Number of estimators used in average','0');
INSERT DBColumns VALUES('sppParams','TEFFSPECUNC','Kelvin','','','Error in the spectroscopically determined Teff','0');
INSERT DBColumns VALUES('sppParams','LOGGSPEC','dex','','','Spectroscopically determined log g, color independent','0');
INSERT DBColumns VALUES('sppParams','LOGGSPECN','','','','Number of estimators used in average','0');
INSERT DBColumns VALUES('sppParams','LOGGSPECUNC','dex','','','Error in the spectroscopically determined log g','0');
INSERT DBColumns VALUES('sppParams','FEHSPEC','dex','','','Spectroscopically determined [Fe/H], color independent','0');
INSERT DBColumns VALUES('sppParams','FEHSPECN','','','','Number of estimators used in average','0');
INSERT DBColumns VALUES('sppParams','FEHSPECUNC','dex','','','Error in the spectroscopically determined [Fe/H]','0');
INSERT DBColumns VALUES('sppParams','ACF1','','','','Auto-Correlation Function over 4000-4086/4116-4325/4355-4500','0');
INSERT DBColumns VALUES('sppParams','ACF1SNR','','','','Average signal-to-noise ratio in Auto-Correlation Function 1 (ACF1)','0');
INSERT DBColumns VALUES('sppParams','ACF2','','','','Auto-Correlation Functioin over 4000-4086/4116-4280/4280-4500','0');
INSERT DBColumns VALUES('sppParams','ACF2SNR','','','','Average signal-to-noise ratio in Auto-Correlation Function 2 (ACF2)','0');
INSERT DBColumns VALUES('sppParams','INSPECT','','','','Flag with combination of six letters among FTtMmCn, for inspecting spectra','0');
INSERT DBColumns VALUES('sppParams','ELODIERVFINAL','km/s','','','Velocity as measured by Elodie library templates, converted to km/s and with the empirical 7.3 km/s offset applied (see Yanny et al. 2009, AJ, 137, 4377)','0');
INSERT DBColumns VALUES('sppParams','ELODIERVFINALERR','km/s','','','Uncertainty in the measured Elodie RV, as determined from the chisq template-fitting routine.  See the discussion of empirically-determined velocity errors in Yanny et al. 2009, AJ, 137, 4377','0');
INSERT DBColumns VALUES('sppParams','ZWARNING','','','','Warning flags about velocity/redshift determinations','0');
INSERT DBColumns VALUES('sppParams','TEFFIRFM','Kelvin','','','Teff from Infrared Flux Methods (IRFM)','0');
INSERT DBColumns VALUES('sppParams','TEFFIRFMIND','','','','Indicator variable, = 0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','TEFFIRFMUNC','dex','','','Error in Teff estimate from IRFM','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1IRFM','dex','','','log g estimate from NGS1 while fixing Teff from IRFM','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1IRFMIND','','','','Indicator variable, = 0 bad, =1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGNGS1IRFMUNC','dex','','','Error in log g from NGS1 while fixing Teff from IRFM','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1IRFM','dex','','','[Fe/H] estimate from NGS1 while fixing Teff from IRFM','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1IRFMIND','','','','Indicator variable, =0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','FEHNGS1IRFMUNC','dex','','','Error in [Fe/H] from NGS1 while fixing Teff from IRFM','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1IRFM','dex','','','log g estimate from CAI1 with fixed IRFM Teff','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1IRFMIND','','','','Indicator variable,  =0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','LOGGCAI1IRFMUNC','dex','','','Error in log g from CAI1 with fixed IRFM Teff','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1IRFM','dex','','','[Fe/H] from CaIIK1 with fixed IRFM Teff','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1IRFMIND','','','','Indicator variable, =0 bad, = 1 good','0');
INSERT DBColumns VALUES('sppParams','FEHCAIIK1IRFMUNC','dex','','','Error in [Fe/H] from CaIIK1 with fixed IRFM Teff','0');
INSERT DBColumns VALUES('sppTargets','TARGETID','','','','unique ID for target','0');
INSERT DBColumns VALUES('sppTargets','OBJID','','','','Object ID matching DR8','0');
INSERT DBColumns VALUES('sppTargets','RUN','','','','Run number','0');
INSERT DBColumns VALUES('sppTargets','RERUN','','','','Rerun number','0');
INSERT DBColumns VALUES('sppTargets','CAMCOL','','','','Camera column number','0');
INSERT DBColumns VALUES('sppTargets','FIELD','','','','Field number','0');
INSERT DBColumns VALUES('sppTargets','OBJ','','','','Object','0');
INSERT DBColumns VALUES('sppTargets','RA','degree','','','RA','0');
INSERT DBColumns VALUES('sppTargets','DEC','degree','','','Dec','0');
INSERT DBColumns VALUES('sppTargets','L','degree','','','Galactic longitude','0');
INSERT DBColumns VALUES('sppTargets','B','degree','','','Galactic latitude','0');
INSERT DBColumns VALUES('sppTargets','FIBERMAG_u','mag','','','u band fiber magnitudue','0');
INSERT DBColumns VALUES('sppTargets','FIBERMAG_g','mag','','','g band fiber magnitudue','0');
INSERT DBColumns VALUES('sppTargets','FIBERMAG_r','mag','','','r band fiber magnitudue','0');
INSERT DBColumns VALUES('sppTargets','FIBERMAG_i','mag','','','i band fiber magnitudue','0');
INSERT DBColumns VALUES('sppTargets','FIBERMAG_z','mag','','','z band fiber magnitudue','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_u','mag','','','u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_g','mag','','','g band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_r','mag','','','r band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_i','mag','','','i band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_z','mag','','','z band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','EXTINCTION_u','mag','','','u band extinction','0');
INSERT DBColumns VALUES('sppTargets','EXTINCTION_g','mag','','','g band extinction','0');
INSERT DBColumns VALUES('sppTargets','EXTINCTION_r','mag','','','r band extinction','0');
INSERT DBColumns VALUES('sppTargets','EXTINCTION_i','mag','','','i band extinction','0');
INSERT DBColumns VALUES('sppTargets','EXTINCTION_z','mag','','','z band extinction','0');
INSERT DBColumns VALUES('sppTargets','ROWC','pix','','','row centroid','0');
INSERT DBColumns VALUES('sppTargets','COLC','pix','','','column centroid','0');
INSERT DBColumns VALUES('sppTargets','TYPE','','','','object type from photometric reductions','0');
INSERT DBColumns VALUES('sppTargets','FLAGS','','','','combined flags from all bands','0');
INSERT DBColumns VALUES('sppTargets','FLAGS_u','','','','u band flag','0');
INSERT DBColumns VALUES('sppTargets','FLAGS_g','','','','g band flag','0');
INSERT DBColumns VALUES('sppTargets','FLAGS_r','','','','r band flag','0');
INSERT DBColumns VALUES('sppTargets','FLAGS_i','','','','i band flag','0');
INSERT DBColumns VALUES('sppTargets','FLAGS_z','','','','z band flag','0');
INSERT DBColumns VALUES('sppTargets','PSFMAGERR_u','mag','','','Error in u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAGERR_g','mag','','','Error in u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAGERR_r','mag','','','Error in u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAGERR_i','mag','','','Error in u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PSFMAGERR_z','mag','','','Error in u band PSF magnitude','0');
INSERT DBColumns VALUES('sppTargets','PLATEID','','','','Hash of plate and MJD','0');
INSERT DBColumns VALUES('sppTargets','SPECOBJID','','','','Spectroscopic object ID','0');
INSERT DBColumns VALUES('sppTargets','PLATE','','','','Plate number','0');
INSERT DBColumns VALUES('sppTargets','MJD','','','','Modified Julian Date','0');
INSERT DBColumns VALUES('sppTargets','FIBERID','','','','Fiber number','0');
INSERT DBColumns VALUES('sppTargets','ORIGINALPLATEID','','','','Original plate ID hash (if targeted based on previous spectrum)','0');
INSERT DBColumns VALUES('sppTargets','ORIGINALSPECOBJID','','','','Original spectroscopic object ID (if targeted based on previous spectrum)','0');
INSERT DBColumns VALUES('sppTargets','ORIGINALPLATE','','','','Original plate number   (if targeted based on previous spectrum)','0');
INSERT DBColumns VALUES('sppTargets','ORIGINALMJD','','','','Original Modified Julian Date   (if targeted based on previous spectrum)','0');
INSERT DBColumns VALUES('sppTargets','ORIGINALFIBERID','','','','Original fiber number    (if targeted based on previous spectrum)(if targeted based on previous spectrum)','0');
INSERT DBColumns VALUES('sppTargets','BESTOBJID','','','','Best object ID','0');
INSERT DBColumns VALUES('sppTargets','TARGETOBJID','','','','Target object ID','0');
INSERT DBColumns VALUES('sppTargets','PRIMTARGET','','','PrimTarget','Primary target','0');
INSERT DBColumns VALUES('sppTargets','SECTARGET','','','SecTarget','Secondary target','0');
INSERT DBColumns VALUES('sppTargets','SEGUE1_TARGET1','','','Segue1Target1','SEGUE-1 target selection information at plate design, primary science selection','0');
INSERT DBColumns VALUES('sppTargets','SEGUE1_TARGET2','','','Segue1Target2','SEGUE-1 target selection information at plate design, secondary/qa/calib selection','0');
INSERT DBColumns VALUES('sppTargets','SEGUE2_TARGET1','','','Segue2Target1','bitmask that records the category or categories for which this object passed the selection criteria','0');
INSERT DBColumns VALUES('sppTargets','SEGUE2_TARGET2','','','Segue2Target2','bitmask that records the category or categories of "standards" for the pipeline, special calibration targets like Stetson standards or globular cluster stars, for which this object passed the selection criteria','0');
INSERT DBColumns VALUES('sppTargets','MATCH','','','','??','0');
INSERT DBColumns VALUES('sppTargets','DELTA','','','','??','0');
INSERT DBColumns VALUES('sppTargets','PML','mas/year?','','','Proper motion in Galactic longitude?','0');
INSERT DBColumns VALUES('sppTargets','PMB','mas/year?','','','Proper motion in Galactic latitude?','0');
INSERT DBColumns VALUES('sppTargets','PMRA','mas/year?','','','Proper motion in RA','0');
INSERT DBColumns VALUES('sppTargets','PMDEC','mas/year?','','','Proper motion in DEC','0');
INSERT DBColumns VALUES('sppTargets','PMRAERR','mas/year?','','','Proper motion error in RA','0');
INSERT DBColumns VALUES('sppTargets','PMDECERR','mas/year?','','','Proper motion error in DEC','0');
INSERT DBColumns VALUES('sppTargets','PMSIGRA','mas/year?','','','','0');
INSERT DBColumns VALUES('sppTargets','PMSIGDEC','mas/year?','','','','0');
INSERT DBColumns VALUES('sppTargets','NFIT','','','','','0');
INSERT DBColumns VALUES('sppTargets','DIST22','','','','','0');
INSERT DBColumns VALUES('sppTargets','DIST20','','','','','0');
INSERT DBColumns VALUES('sppTargets','uMAG0','mag','','','u extinction-corrected (SFD 98) psf magnitude','0');
INSERT DBColumns VALUES('sppTargets','gMAG0','mag','','','g extinction-corrected (SFD 98) psf magnitude','0');
INSERT DBColumns VALUES('sppTargets','rMAG0','mag','','','r extinction-corrected (SFD 98) psf magnitude','0');
INSERT DBColumns VALUES('sppTargets','iMAG0','mag','','','i extinction-corrected (SFD 98) psf magnitude','0');
INSERT DBColumns VALUES('sppTargets','zMAG0','mag','','','z extinction-corrected (SFD 98) psf magnitude','0');
INSERT DBColumns VALUES('sppTargets','umg0','mag','','','u-g, extinction corrected magnitudes','0');
INSERT DBColumns VALUES('sppTargets','gmr0','mag','','','g-r, extinction corrected magnitudes','0');
INSERT DBColumns VALUES('sppTargets','rmi0','mag','','','r-i, extinction corrected magnitudes','0');
INSERT DBColumns VALUES('sppTargets','imz0','mag','','','i-z, extinction corrected magnitudes','0');
INSERT DBColumns VALUES('sppTargets','gmi0','mag','','','g-i, extinction corrected magnitudes','0');
INSERT DBColumns VALUES('sppTargets','umgERR','mag','','','PSFMAGERR_u and PSFMAGERR_g added in quadrature','0');
INSERT DBColumns VALUES('sppTargets','gmrERR','mag','','','PSFMAGERR_g and PSFMAGERR_r added in quadrature','0');
INSERT DBColumns VALUES('sppTargets','rmiERR','mag','','','PSFMAGERR_r and PSFMAGERR_i added in quadrature','0');
INSERT DBColumns VALUES('sppTargets','imzERR','mag','','','PSFMAGERR_i and PSFMAGERR_z added in quadrature','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_umg','mag','','','psfmag_u-psfmag_g, no extinction correction','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_gmr','mag','','','psfmag_g-psfmag_r, no extinction correction','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_rmi','mag','','','psfmag_r-psfmag_i, no extinction correction','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_imz','mag','','','psfmag_i-psfmag_z, no extinction correction','0');
INSERT DBColumns VALUES('sppTargets','PSFMAG_gmi','mag','','','psfmag_g-psfmag_i, no extinction correction','0');
INSERT DBColumns VALUES('sppTargets','lcolor','mag','','','-0.436*uMag+1.129*gMag-0.119*rMag-0.574*iMag+0.1984 (Lenz et al.1998)','0');
INSERT DBColumns VALUES('sppTargets','scolor','mag','','','-0.249*uMag+0.794*gMag-0.555*rMag+0.234+0.011*p1s-0.010 (Helmi et al. 2003) used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('sppTargets','p1s','mag','','','0.91*umg+0.415*umg-1.280 (Helmi et al. 2003) used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('sppTargets','TOTALPM','mas/year','','','sqrt(PMRA*PMRA+PMDEC*PMDEC), in mas/year','0');
INSERT DBColumns VALUES('sppTargets','Hg','mag','','','reduced proper motion, gMag+5*log10(TOTALPM/1000)+5','0');
INSERT DBColumns VALUES('sppTargets','Mi','mag','','','4.471+7.907*imz-0.837*imz*imz used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('sppTargets','DISTi','mag','','','10^((iMag-Mi+5)/5.0) used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('sppTargets','Hr','mag','','','reduced pm (uncorr r): PSFMAG_r+5*log10(TOTALPM/1000)+5','0');
INSERT DBColumns VALUES('sppTargets','VMI_TRANS1','mag','','','V-I from VMAG_TRANS-(iMag-0.337*rmi-0.37)','0');
INSERT DBColumns VALUES('sppTargets','VMI_TRANS2','mag','','','V-I from 0.877*gmr+0.358','0');
INSERT DBColumns VALUES('sppTargets','VMAG_TRANS','mag','','','V mag from gMag - 0.587*gmr -0.011','0');
INSERT DBColumns VALUES('sppTargets','MV_TRANS','mag','','','not stuffed','0');
INSERT DBColumns VALUES('sppTargets','DISTV_KPC','kpc','','','10^(dmV/5.-2.) where VMAG_TRANS-(3.37*VMI_TRANS1+2.89)','0');
INSERT DBColumns VALUES('sppTargets','VTRANS_GALREST','km/s','','','transvere velocity, km/s, derived from TOTALPM and DISTV_KPC, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('sppTargets','MUTRANS_GALRADREST','mas/year','','','derived PM (mas/year) perpendicular to the Galactocentric radial vector, assuming all motion is along a Galactocentric radial vector, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('sppTargets','MURAD_GALRADREST','mas/year','','','derived PM (mas/year) along the Galactocentric radial vector, assuming all motion is along a Galactocentric radial vector, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('sppTargets','VTOT_GALRADREST','km/s','','','total velocioty, km/s, derived from TOTALPM and DISTV_KPC, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('sppTargets','MG_TOHV','mag','','','5.7 + 10.0*(GMR - 0.375)','0');
INSERT DBColumns VALUES('sppTargets','VTRANS_TOHV','km/s','','','transverse velocity in Galactocentric coords, using the distance estimate from MG_TOHV which is appropriate for old stars near the MSTO and corrected for peculiar solar motion 16.6 km/s toward RA,Dec 267.5,28.1','0');
INSERT DBColumns VALUES('sppTargets','PM1SIGMA_TOHV','mas/year','','','Estimate of the 1-sigma error in total proper motion at this r magnitude.  Formula is sqrt(4.56*4.56 + frate*2.30*2.30), where frate is 10^(0.4*(rMag-19.5)).  The constants come from the Munn et al. 2004 (AJ, 127, 3034) paper describing the recalibration of USNOB with SDSS.','0');
INSERT DBColumns VALUES('sppTargets','V1SIGMAERR_TOHV','km/s','','','The corresponding 1-sigma error in the transverse velocity based on PM1SIGMA_TOHV and the the distance estimate using MG_TOHV','0');
INSERT DBColumns VALUES('sppTargets','TARGET_VERSION','','','','version of target used','0');
INSERT DBColumns VALUES('Plate2Target','plate2targetid','','','','primary key','0');
INSERT DBColumns VALUES('Plate2Target','plate','','','','plate number','0');
INSERT DBColumns VALUES('Plate2Target','plateid','','','','plate identification number in plateX','0');
INSERT DBColumns VALUES('Plate2Target','objid','','','','object identification number in sppTargets','0');
INSERT DBColumns VALUES('Plate2Target','loadVersion','','','','Load Version','0');
INSERT DBColumns VALUES('segueTargetAll','objid','','ID_MAIN','','unique id, points to photoObj','0');
INSERT DBColumns VALUES('segueTargetAll','segue1_target1','','ID_MAIN','Segue1Target1','SEGUE-1 primary target selection flag','0');
INSERT DBColumns VALUES('segueTargetAll','segue1_target2','','ID_MAIN','Segue1Target2','SEGUE-1 secondary target selection flag','0');
INSERT DBColumns VALUES('segueTargetAll','segue2_target1','','ID_MAIN','Segue2Target1','SEGUE-2 primary target selection flag','0');
INSERT DBColumns VALUES('segueTargetAll','segue2_target2','','ID_MAIN','Segue2Target2','SEGUE-2 secondary target selection flag','0');
INSERT DBColumns VALUES('segueTargetAll','lcolor','mag','','','SEGUE-1 and -2 target selection color: -0.436*uMag+1.129*gMag-0.119*rMag-0.574*iMag+0.1984 (Lenz et al.1998)','0');
INSERT DBColumns VALUES('segueTargetAll','scolor','mag','','','SEGUE-1 target selection color: -0.249*uMag+0.794*gMag-0.555*rMag+0.234+0.011*p1s-0.010 (Helmi et al. 2003)','0');
INSERT DBColumns VALUES('segueTargetAll','p1s','mag','','','SEGUE-1 target selection color: 0.91*umg+0.415*umg-1.280 (Helmi et al. 2003)','0');
INSERT DBColumns VALUES('segueTargetAll','totalpm','mas/year','','','sqrt(PMRA*PMRA+PMDEC*PMDEC), in mas/year','0');
INSERT DBColumns VALUES('segueTargetAll','hg','mag','','','reduced proper motion, gMag+5*log10(TOTALPM/1000)+5','0');
INSERT DBColumns VALUES('segueTargetAll','Mi','mag','','','4.471+7.907*imz-0.837*imz*imz used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('segueTargetAll','disti','mag','','','10^((iMag-Mi+5)/5.0) used in SEGUE-1 target selection, unused in SEGUE-2','0');
INSERT DBColumns VALUES('segueTargetAll','Hr','mag','','','reduced pm (uncorr r): PSFMAG_r+5*log10(TOTALPM/1000)+5','0');
INSERT DBColumns VALUES('segueTargetAll','vmi_trans1','mag','','','V-I from VMAG_TRANS-(iMag-0.337*rmi-0.37)','0');
INSERT DBColumns VALUES('segueTargetAll','vmi_trans2','mag','','','V-I from 0.877*gmr+0.358','0');
INSERT DBColumns VALUES('segueTargetAll','vmag_trans','mag','','','V mag from gMag - 0.587*gmr -0.011','0');
INSERT DBColumns VALUES('segueTargetAll','Mv_trans','mag','','','','0');
INSERT DBColumns VALUES('segueTargetAll','distv_kpc','kpc','','','10^(dmV/5.-2.) where VMAG_TRANS-(3.37*VMI_TRANS1+2.89)','0');
INSERT DBColumns VALUES('segueTargetAll','vtrans_galrest','km/s','','','transvere velocity, km/s, derived from TOTALPM and DISTV_KPC, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('segueTargetAll','mutrans_galradrest','mas/year','','','derived PM (mas/year) perpendicular to the Galactocentric radial vector, assuming all motion is along a Galactocentric radial vector, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('segueTargetAll','murad_galradrest','mas/year','','','derived PM (mas/year) along the Galactocentric radial vector, assuming all motion is along a Galactocentric radial vector, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('segueTargetAll','vtot_galradrest','km/s','','','total velocity, km/s, derived from TOTALPM and DISTV_KPC, in a frame at rest w.r.t the Galaxy','0');
INSERT DBColumns VALUES('segueTargetAll','mg_tohv','mag','','','5.7 + 10.0*(GMR - 0.375)','0');
INSERT DBColumns VALUES('segueTargetAll','vtrans_tohv','km/s','','','transverse velocity in Galactocentric coords, using the distance estimate from MG_TOHV which is appropriate for old stars near the MSTO and corrected for peculiar solar motion 16.6 km/s toward RA,Dec 267.5,28.1','0');
INSERT DBColumns VALUES('segueTargetAll','pm1sigma_tohv','mas/year','','','Estimate of the 1-sigma error in total proper motion at this r magnitude.  Formula is sqrt(4.56*4.56 + frate*2.30*2.30), where frate is 10^(0.4*(rMag-19.5)).  The constants come from the Munn et al. 2004 (AJ, 127, 3034) paper describing the recalibration of USNOB with SDSS.','0');
INSERT DBColumns VALUES('segueTargetAll','v1sigmaerr_tohv','km/s','','','The corresponding 1-sigma error in the transverse velocity based on PM1SIGMA_TOHV and the the distance estimate using MG_TOHV','0');
INSERT DBColumns VALUES('apogeeVisit','visit_id','','','','Unique ID for visit spectrum, of form apogee.[telescope].[cs].[apred_version].plate.mjd.fiberid (Primary key)','0');
INSERT DBColumns VALUES('apogeeVisit','apred_version','','','','Visit reduction pipeline version (e.g. "r3")','0');
INSERT DBColumns VALUES('apogeeVisit','apogee_id','','','','2MASS-style star identification','0');
INSERT DBColumns VALUES('apogeeVisit','target_id','','','','target ID (Foreign key, of form [location_id].[apogee_id])','0');
INSERT DBColumns VALUES('apogeeVisit','alt_id','','','','alternate ID star identification, for apo1m, used within reductions','0');
INSERT DBColumns VALUES('apogeeVisit','file','','','','File base name with visit spectrum and catalog information','0');
INSERT DBColumns VALUES('apogeeVisit','fiberid','','','','Fiber ID for this visit','0');
INSERT DBColumns VALUES('apogeeVisit','plate','','','','Plate of this visit','0');
INSERT DBColumns VALUES('apogeeVisit','mjd','','','','MJD of this visit','0');
INSERT DBColumns VALUES('apogeeVisit','telescope','','','','Telescope where data was taken','0');
INSERT DBColumns VALUES('apogeeVisit','location_id','','','','Location ID for the field this visit is in (Foreign key)','0');
INSERT DBColumns VALUES('apogeeVisit','field','','','','Name of field','0');
INSERT DBColumns VALUES('apogeeVisit','ra','deg','','','Right ascension, J2000','0');
INSERT DBColumns VALUES('apogeeVisit','dec','deg','','','Declination, J2000','0');
INSERT DBColumns VALUES('apogeeVisit','glon','deg','','','Galactic longitude','0');
INSERT DBColumns VALUES('apogeeVisit','glat','deg','','','Galactic latitude','0');
INSERT DBColumns VALUES('apogeeVisit','apogee_target1','','','','APOGEE target flag (first 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET1)','0');
INSERT DBColumns VALUES('apogeeVisit','apogee_target2','','','','APOGEE target flag (second 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeVisit','apogee2_target1','','','','APOGEE target flag (first 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET1)','0');
INSERT DBColumns VALUES('apogeeVisit','apogee2_target2','','','','APOGEE target flag (second 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeVisit','apogee2_target3','','','','APOGEE target flag (third 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeVisit','apogee2_target4','','','','APOGEE target flag (fourth 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeVisit','min_h','','','','minimum H mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeVisit','max_h','','','','maximum H mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeVisit','min_jk','','','','minimum J-K mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeVisit','max_jk','','','','maximum J-K mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeVisit','survey','','','','Name of survey (apogee/apogee2/apo1m)','0');
INSERT DBColumns VALUES('apogeeVisit','snr','','','','Median signal-to-noise ratio per pixel','0');
INSERT DBColumns VALUES('apogeeVisit','starflag','','','','Bit mask with APOGEE star flags (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_STARFLAG)','0');
INSERT DBColumns VALUES('apogeeVisit','dateobs','','','','Date of observation (YYYY-MM-DDTHH:MM:SS.SSS)','0');
INSERT DBColumns VALUES('apogeeVisit','jd','','','','Julian date of observation','0');
INSERT DBColumns VALUES('apogeeVisit','bc','km/s','','','Barycentric correction (VHELIO - VREL)','0');
INSERT DBColumns VALUES('apogeeVisit','vrel','km/s','','','Derived radial velocity','0');
INSERT DBColumns VALUES('apogeeVisit','vrelerr','km/s','','','Derived radial velocity error','0');
INSERT DBColumns VALUES('apogeeVisit','vhelio','km/s','','','Derived heliocentric radial velocity','0');
INSERT DBColumns VALUES('apogeeVisit','chisq','','','','Chi-squared of match to TV template','0');
INSERT DBColumns VALUES('apogeeVisit','rv_feh','','','','[Fe/H] of radial velocity template','0');
INSERT DBColumns VALUES('apogeeVisit','rv_teff','K','','','Effective temperature of radial velocity template','0');
INSERT DBColumns VALUES('apogeeVisit','rv_logg','dex','','','Log gravity of radial velocity template','0');
INSERT DBColumns VALUES('apogeeVisit','rv_alpha','','','','[alpha/M] alpha-element abundance','0');
INSERT DBColumns VALUES('apogeeVisit','rv_carb','','','','[C/H] carbon abundance','0');
INSERT DBColumns VALUES('apogeeVisit','xcorr_vrel','km/s','','','Initial radial velocity for individual visit RV estimate','0');
INSERT DBColumns VALUES('apogeeVisit','xcorr_vrelerr','km/s','','','Error in initial radial velocity for individual visit RV estimate','0');
INSERT DBColumns VALUES('apogeeVisit','xcorr_vhelio','km/s','','','Initial heliocentric radial velocity for individual visit RV estimate','0');
INSERT DBColumns VALUES('apogeeVisit','rv_chi2','','','','Chi2 of RV fit','0');
INSERT DBColumns VALUES('apogeeVisit','ccfwhm','','','','FWHM of RV cross correlation function','0');
INSERT DBColumns VALUES('apogeeVisit','autofwhm','','','','FWHM of RV autocorrelation function','0');
INSERT DBColumns VALUES('apogeeStar','apstar_id','','','','Unique ID for combined star spectrum of form apogee.[telescope].[cs].apstar_version.location_id.apogee_id (Primary key)','0');
INSERT DBColumns VALUES('apogeeStar','target_id','','','','target ID (Foreign key, of form [location_id].[apogee_id])','0');
INSERT DBColumns VALUES('apogeeStar','alt_id','','','','ID alternate star identification, for apo1m used within reductions','0');
INSERT DBColumns VALUES('apogeeStar','file','','','','File base name with combined star spectrum','0');
INSERT DBColumns VALUES('apogeeStar','apogee_id','','','','2MASS-style star identification','0');
INSERT DBColumns VALUES('apogeeStar','telescope','','','','Telescope where data was taken','0');
INSERT DBColumns VALUES('apogeeStar','location_id','','','','Location ID for the field this visit is in (Foreign key)','0');
INSERT DBColumns VALUES('apogeeStar','field','','','','Name of field','0');
INSERT DBColumns VALUES('apogeeStar','ra','deg','','','Right ascension, J2000','0');
INSERT DBColumns VALUES('apogeeStar','dec','deg','','','Declination, J2000','0');
INSERT DBColumns VALUES('apogeeStar','glon','deg','','','Galactic longitude','0');
INSERT DBColumns VALUES('apogeeStar','glat','deg','','','Galactic latitude','0');
INSERT DBColumns VALUES('apogeeStar','apogee_target1','','','','APOGEE target flag (first 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET1)','0');
INSERT DBColumns VALUES('apogeeStar','apogee_target2','','','','APOGEE target flag (second 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeStar','apogee2_target1','','','','APOGEE target flag (first 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET1)','0');
INSERT DBColumns VALUES('apogeeStar','apogee2_target2','','','','APOGEE target flag (second 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeStar','apogee2_target3','','','','APOGEE target flag (third 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeStar','apogee2_target4','','','','APOGEE target flag (fourth 64 bits) (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_TARGET2)','0');
INSERT DBColumns VALUES('apogeeStar','min_h','','','','minimum H mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeStar','max_h','','','','maximum H mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeStar','min_jk','','','','minimum J-K mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeStar','max_jk','','','','maximum J-K mag for cohort for main survey target','0');
INSERT DBColumns VALUES('apogeeStar','survey','','','','Name of survey (apogee/apogee2/apo1m)','0');
INSERT DBColumns VALUES('apogeeStar','extratarg','','','','Shorthand flag to denote not a main survey object (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_EXTRATARG)','0');
INSERT DBColumns VALUES('apogeeStar','nvisits','','','','Number of visits contributing to the combined spectrum','0');
INSERT DBColumns VALUES('apogeeStar','snr','','','','Median signal-to-noise ratio per pixel','0');
INSERT DBColumns VALUES('apogeeStar','starflag','','','','Bit mask with APOGEE star flags; each bit is set here if it is set in any visit (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_STARFLAG)','0');
INSERT DBColumns VALUES('apogeeStar','andflag','','','','AND of visit bit mask with APOGEE star flags; each bit is set if set in all visits (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_STARFLAG)','0');
INSERT DBColumns VALUES('apogeeStar','vhelio_avg','km/s','','','Signal-to-noise weighted average of heliocentric radial velocity, as determined relative to combined spectrum, with zeropoint from xcorr of combined spectrum with best-fitting template','0');
INSERT DBColumns VALUES('apogeeStar','vscatter','km/s','','','Standard deviation of scatter of individual visit RVs around average','0');
INSERT DBColumns VALUES('apogeeStar','verr','km/s','','','Weighted error of heliocentric RV','0');
INSERT DBColumns VALUES('apogeeStar','rv_teff','deg K','','','effective temperature from RV template match','0');
INSERT DBColumns VALUES('apogeeStar','rv_logg','dex','','','log g from RV template match','0');
INSERT DBColumns VALUES('apogeeStar','rv_feh','dex','','','[Fe/H] from RV template match','0');
INSERT DBColumns VALUES('apogeeStar','rv_alpha','','','','[alpha/M] alpha-element abundance','0');
INSERT DBColumns VALUES('apogeeStar','rv_carb','','','','[C/H] carbon abundance','0');
INSERT DBColumns VALUES('apogeeStar','rv_ccfwhm','km/s','','','FWHM of cross-correlation peak from combined vs best-match synthetic spectrum','0');
INSERT DBColumns VALUES('apogeeStar','rv_autofwhm','km/s','','','FWHM of auto-correlation of best-match synthetic spectrum','0');
INSERT DBColumns VALUES('apogeeStar','rv_flag','','','','Bitmask for RV determination','0');
INSERT DBColumns VALUES('apogeeStar','n_components','','','','Number of components from RV cross correlation','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_source_id','','','','GAIA EDR3 source id','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_parallax','mas','','','GAIA EDR3 parallax','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_parallax_error','mas','','','GAIA EDR3 parallax uncertainty','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_pmra','mas/yr','','','GAIA EDR3 proper motion in RA','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_pmra_error','mas/yr','','','GAIA EDR3 proper motion in RA uncertainty','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_pmdec','mas/yr','','','GAIA EDR3 proper motion in DEC','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_pmdec_error','mas/yr','','','GAIA EDR3 proper motion in DEC uncertainty','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_phot_g_mean_mag','','','','GAIA EDR3 g mean magnitude','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_phot_bp_mean_mag','','','','GAIA EDR3 Bp mean magnitude','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_phot_rp_mean_mag','','','','GAIA EDR3 Rp mean magnitude','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_dr2_radial_velocity','km/s','','','GAIA EDR3 radial velocity','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_dr2_radial_velocity_error','km/s','','','GAIA EDR3 radial velocity','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_med_geo','pc','','','GAIA EDR3 Bailer Jones r_med_geo','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_lo_geo','pc','','','GAIA EDR3 Bailer Jones r_lo_geo','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_hi_geo','pc','','','GAIA EDR3 Bailer Jones r_hi_geo','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_med_photogeo','pc','','','GAIA EDR3 Bailer Jones r_med_photogeo','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_lo_photogeo','pc','','','GAIA EDR3 Bailer Jones r_lo_photogeo','0');
INSERT DBColumns VALUES('apogeeStar','gaiaedr3_r_hi_photogeo','pc','','','GAIA EDR3 Bailer Jones r_hi_photogeo','0');
INSERT DBColumns VALUES('apogeeStar','htmID','','','','HTM ID','0');
INSERT DBColumns VALUES('apogeeStarVisit','visit_id','','','','Unique ID for visit spectrum, of form apogee.[telescope].[cs].[apred_version].plate.mjd.fiberid','0');
INSERT DBColumns VALUES('apogeeStarVisit','apstar_id','','','','Unique ID for combined star spectrum of form apogee.[telescope].[cs].apstar_version.location_id.apogee_id','0');
INSERT DBColumns VALUES('apogeeStarAllVisit','visit_id','','','','Unique ID for visit spectrum, of form apogee.[telescope].[cs].[apred_version].plate.mjd.fiberid','0');
INSERT DBColumns VALUES('apogeeStarAllVisit','apstar_id','','','','Unique ID for combined star spectrum of form apogee.[telescope].[cs].apstar_version.location_id.apogee_id','0');
INSERT DBColumns VALUES('aspcapStar','apogee_id','','','','2MASS-style star identification','0');
INSERT DBColumns VALUES('aspcapStar','target_id','','','','target ID (Foreign key, of form [location_id].[apogee_id])','0');
INSERT DBColumns VALUES('aspcapStar','apstar_id','','','','Unique ID of combined star spectrum on which these results are based (Foreign key)','0');
INSERT DBColumns VALUES('aspcapStar','aspcap_id','','','','Unique ID for ASPCAP results of form apogee.[telescope].[cs].results_version.location_id.star (Primary key)','0');
INSERT DBColumns VALUES('aspcapStar','teff','deg K','','','Empirically calibrated temperature from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','teff_err','deg K','','','external uncertainty estimate for calibrated temperature from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','teff_flag','','','','PARAMFLAG for effective temperature(see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','teff_spec','deg K','','','Spectroscopic (uncalibrated) temperature from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','logg','dex','','','empirically calibrated log gravity from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','logg_err','dex','','','external uncertainty estimate for log gravity from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','logg_flag','','','','PARAMFLAG for log g(see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','logg_spec','dex','','','spectroscopic (uncalibrated) log gravity from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','vmicro','km/s','','','microturbulent velocity (fit for dwarfs, f(log g) for giants)','0');
INSERT DBColumns VALUES('aspcapStar','vmacro','km/s','','','macroturbulent velocity (f(log Teff,[M/H]) for giants)','0');
INSERT DBColumns VALUES('aspcapStar','vsini','km/s','','','rotation+macroturbulent velocity (fit for dwarfs)','0');
INSERT DBColumns VALUES('aspcapStar','m_h','dex','','','calibrated [M/H]','0');
INSERT DBColumns VALUES('aspcapStar','m_h_err','dex','','','calibrated [M/H] uncertainty','0');
INSERT DBColumns VALUES('aspcapStar','m_h_flag','','','','PARAMFLAG for [M/H] (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','alpha_m','dex','','','calibrated [M/H]','0');
INSERT DBColumns VALUES('aspcapStar','alpha_m_err','dex','','','calibrated [M/H] uncertainty','0');
INSERT DBColumns VALUES('aspcapStar','alpha_m_flag','','','','PARAMFLAG for [alpha/M] (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','aspcap_chi2','','','','chi^2 of ASPCAP fit','0');
INSERT DBColumns VALUES('aspcapStar','aspcap_grid','','','','Temperature class of best-fitting spectrum','0');
INSERT DBColumns VALUES('aspcapStar','aspcapflag','','','','Bitmask flag relating results of ASPCAP (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ASPCAPFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','frac_badpix','','','','fraction of bad pixels in spectrum','0');
INSERT DBColumns VALUES('aspcapStar','frac_lowsnr','','','','fraction of low S/N pixels in spectrum','0');
INSERT DBColumns VALUES('aspcapStar','frac_sigsky','','','','fraction of pixels with significant sky emission in spectrum','0');
INSERT DBColumns VALUES('aspcapStar','fparam_teff','deg K','','','original fit temperature','0');
INSERT DBColumns VALUES('aspcapStar','fparam_logg','dex','','','original fit log g from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','fparam_logvmicro','','','','log10 of the fit microturbulent velocity in km/s from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','fparam_m_h','dex','','','original fit [M/H] from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','fparam_c_m','dex','','','original fit [C/H] from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','fparam_n_m','dex','','','original fit [N/H] from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','fparam_alpha_m','dex','','','original fit [alpha/M] from 6-parameter FERRE fit','0');
INSERT DBColumns VALUES('aspcapStar','param_c_m','dex','','','empirically calibrated [C/M] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','param_c_m_flag','','','','PARAMFLAG for [C/M] (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','param_n_m','dex','','','empirically calibrated [N/M] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','param_n_m_flag','','','','PARAMFLAG for [N/M] (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_PARAMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','c_fe','dex','','','empirically calibrated [C/Fe] from ASPCAP; [C/Fe] is calculated as (ASPCAP [C/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','c_fe_err','dex','','','external uncertainty for empirically calibrated [C/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','c_fe_flag','','','','ELEMFLAG for C (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','ci_fe','dex','','','empirically calibrated [CI/Fe] from ASPCAP; [C/Fe] is calculated as (ASPCAP [C/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','ci_fe_err','dex','','','external uncertainty for empirically calibrated [CI/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ci_fe_flag','','','','ELEMFLAG for CI (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','n_fe','dex','','','empirically calibrated [N/Fe] from ASPCAP; [N/Fe] is calculated as (ASPCAP [N/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','n_fe_err','dex','','','external uncertainty for empirically calibrated [N/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','n_fe_flag','','','','ELEMFLAG for N (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','o_fe','dex','','','empirically calibrated [O/Fe] from ASPCAP; [O/Fe] is calculated as (ASPCAP [O/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','o_fe_err','dex','','','external uncertainty for empirically calibrated [O/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','o_fe_flag','','','','ELEMFLAG for O (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','na_fe','dex','','','empirically calibrated [Na/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','na_fe_err','dex','','','external uncertainty for empirically calibrated [Na/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','na_fe_flag','','','','ELEMFLAG for Na (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','mg_fe','dex','','','empirically calibrated [Mg/Fe] from ASPCAP; [Mg/Fe] is calculated as (ASPCAP [Mg/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','mg_fe_err','dex','','','external uncertainty for empirically calibrated [Mg/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','mg_fe_flag','','','','ELEMFLAG for Mg (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','al_fe','dex','','','empirically calibrated [Al/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','al_fe_err','dex','','','external uncertainty for empirically calibrated [Al/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','al_fe_flag','','','','ELEMFLAG for Al (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','si_fe','dex','','','empirically calibrated [Si/Fe] from ASPCAP; [Si/Fe] is calculated as (ASPCAP [Si/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','si_fe_err','dex','','','external uncertainty for empirically calibrated [Si/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','si_fe_flag','','','','ELEMFLAG for Si (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','p_fe','dex','','','empirically calibrated [P/Fe] from ASPCAP; [P/Fe] is calculated as (ASPCAP [P/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','p_fe_err','dex','','','external uncertainty for empirically calibrated [P/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','p_fe_flag','','','','ELEMFLAG for Si (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','s_fe','dex','','','empirically calibrated [S/Fe] from ASPCAP; [S/Fe] is calculated as (ASPCAP [S/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','s_fe_err','dex','','','external uncertainty for empirically calibrated [S/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','s_fe_flag','','','','ELEMFLAG for S (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','k_fe','dex','','','empirically calibrated [K/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','k_fe_err','dex','','','external uncertainty for empirically calibrated [K/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','k_fe_flag','','','','ELEMFLAG for K (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','ca_fe','dex','','','empirically calibrated [Ca/Fe] from ASPCAP ; [Ca/Fe] is calculated as (ASPCAP [Ca/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','ca_fe_err','dex','','','external uncertainty for empirically calibrated [Ca/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ca_fe_flag','','','','ELEMFLAG for Ca (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','ti_fe','dex','','','empirically calibrated [Ti/Fe] from ASPCAP; [Ti/Fe] is calculated as (ASPCAP [Ti/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','ti_fe_err','dex','','','external uncertainty for empirically calibrated [Ti/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ti_fe_flag','','','','ELEMFLAG for Ti (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','tiii_fe','dex','','','empirically calibrated [TiII/Fe] from ASPCAP; [TiII/Fe] is calculated as (ASPCAP [TiII/M])+param_metals','0');
INSERT DBColumns VALUES('aspcapStar','tiii_fe_err','dex','','','external uncertainty for empirically calibrated [TiII/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','tiii_fe_flag','','','','ELEMFLAG for TiII (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','v_fe','dex','','','empirically calibrated [V/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','v_fe_err','dex','','','external uncertainty for empirically calibrated [V/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','v_fe_flag','','','','ELEMFLAG for V (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','cr_fe','dex','','','empirically calibrated [Cr/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','cr_fe_err','dex','','','external uncertainty for empirically calibrated [Cr/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','cr_fe_flag','','','','ELEMFLAG for Cr (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','mn_fe','dex','','','empirically calibrated [Mn/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','mn_fe_err','dex','','','external uncertainty for empirically calibrated [Mn/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','mn_fe_flag','','','','ELEMFLAG for Mn (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','fe_h','dex','','','empirically calibrated [Fe/H] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','fe_h_err','dex','','','external uncertainty for empirically calibrated [Fe/H] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','fe_h_flag','','','','ELEMFLAG for Fe (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','co_fe','dex','','','empirically calibrated [Co/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','co_fe_err','dex','','','external uncertainty for empirically calibrated [Co/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','co_fe_flag','','','','ELEMFLAG for Co (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','ni_fe','dex','','','empirically calibrated [Ni/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ni_fe_err','dex','','','external uncertainty for empirically calibrated [Ni/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ni_fe_flag','','','','ELEMFLAG for Ni (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','cu_fe','dex','','','empirically calibrated [Cu/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','cu_fe_err','dex','','','external uncertainty for empirically calibrated [Cu/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','cu_fe_flag','','','','ELEMFLAG for Cu (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','ce_fe','dex','','','empirically calibrated [Ce/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ce_fe_err','dex','','','external uncertainty for empirically calibrated [Ce/Fe] from ASPCAP','0');
INSERT DBColumns VALUES('aspcapStar','ce_fe_flag','','','','ELEMFLAG for Ce (see http://www.sdss.org/dr12/algorithms/bitmasks/#APOGEE_ELEMFLAG)','0');
INSERT DBColumns VALUES('aspcapStar','felem_c_m','dex','','','original fit [C/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_c_m_err','dex','','','original fit uncertainty [C/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ci_m','dex','','','original fit [CI/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ci_m_err','dex','','','original fit uncertainty [CI/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_n_m','dex','','','original fit [N/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_n_m_err','dex','','','original fit uncertainty [N/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_o_m','dex','','','original fit [O/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_o_m_err','dex','','','original fit uncertainty [O/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_na_h','dex','','','original fit [Na/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_na_h_err','dex','','','original fit uncertainty [Na/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_mg_m','dex','','','original fit [Mg/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_mg_m_err','dex','','','original fit uncertainty [Mg/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_al_h','deg K','','','original fit [Al/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_al_h_err','deg K','','','original fit uncertainty [Al/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_si_m','dex','','','original fit [Si/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_si_m_err','dex','','','original fit uncertainty [Si/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_p_m','dex','','','original fit [P/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_p_m_err','dex','','','original fit uncertainty [P/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_s_m','dex','','','original fit [S/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_s_m_err','dex','','','original fit uncertainty [S/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_k_h','dex','','','original fit [K/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_k_h_err','dex','','','original fit uncertainty [K/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ca_m','dex','','','original fit [Ca/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ca_m_err','dex','','','original fit uncertainty [Ca/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ti_m','dex','','','original fit [Ti/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ti_m_err','dex','','','original fit uncertainty [Ti/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_tiii_m','dex','','','original fit [TiII/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_tiii_m_err','dex','','','original fit uncertainty [TiII/M]','0');
INSERT DBColumns VALUES('aspcapStar','felem_v_h','dex','','','original fit [V/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_v_h_err','dex','','','original fit uncertainty [V/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_cr_h','dex','','','original fit [Cr/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_cr_h_err','dex','','','original fit uncertainty [Cr/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_mn_h','dex','','','original fit [Mn/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_mn_h_err','dex','','','original fit uncertainty [Mn/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_fe_h','dex','','','original fit [Fe/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_fe_h_err','dex','','','original fit uncertainty [Fe/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_co_h','dex','','','original fit [Co/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_co_h_err','dex','','','original fit uncertainty [Co/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ni_h','dex','','','original fit [Ni/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ni_h_err','dex','','','original fit uncertainty [Ni/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_cu_h','dex','','','original fit [Cu/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_cu_h_err','dex','','','original fit uncertainty [Cu/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ge_h','dex','','','original fit [Ge/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ge_h_err','dex','','','original fit uncertainty [Ge/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_rb_h','dex','','','original fit [Rb/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_rb_h_err','dex','','','original fit uncertainty [Rb/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ce_h','dex','','','original fit [Ce/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_ce_h_err','dex','','','original fit uncertainty [Ce/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_nd_h','dex','','','original fit [Nd/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_nd_h_err','dex','','','original fit uncertainty [Nd/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_yb_h','dex','','','original fit [Yb/H]','0');
INSERT DBColumns VALUES('aspcapStar','felem_yb_h_err','dex','','','original fit uncertainty [Yb/H]','0');
INSERT DBColumns VALUES('aspcapStarCovar','aspcap_covar_id','','','','Unique ID for this covariance matrix element of form apogee.[telescope].[cs].results_version.location_id.star.param_1.param_2 (Primary key)','0');
INSERT DBColumns VALUES('aspcapStarCovar','aspcap_id','','','','Unique ID for ASPCAP results of form apogee.[telescope].[cs].results_version.location_id.star','0');
INSERT DBColumns VALUES('aspcapStarCovar','param_1','','','','Parameter #1 in covariance (0..6, corresponding to Teff, log(g), log(vmicro), [M/H], [C/M], [N/M], [alpha/M])','0');
INSERT DBColumns VALUES('aspcapStarCovar','param_2','','','','Parameter #2 in covariance (0..6, corresponding to Teff, log(g), log(vmicro), [M/H], [C/M], [N/M], [alpha/M])','0');
INSERT DBColumns VALUES('aspcapStarCovar','covar','','','','Covariance between two parameters for this star (external estimate)','0');
INSERT DBColumns VALUES('aspcapStarCovar','fit_covar','','','','Covariance between two parameters for this star (internal estimate for original fit values)','0');
INSERT DBColumns VALUES('cannonStar','apogee_id','','','','2MASS-style star identification','0');
INSERT DBColumns VALUES('cannonStar','cannon_id','','','','Unique ID for Cannon results of form apogee.[telescope].[cs].results_version.location_id.star (Primary key)','0');
INSERT DBColumns VALUES('cannonStar','filename','','','','Cannon file used','0');
INSERT DBColumns VALUES('cannonStar','location_id','','','','Location ID for the field this visit is in (Foreign key)','0');
INSERT DBColumns VALUES('cannonStar','field','','','','Name of field','0');
INSERT DBColumns VALUES('cannonStar','teff','deg K','','','effective temperature from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','logg','dex','','','surface gravity from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','m_h','dex','','','[M/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','alpha_m','dex','','','[alpha/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','fe_h','dex','','','[Fe/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','c_h','dex','','','[C/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ci_h','dex','','','[CI/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','n_h','dex','','','[N/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','o_h','dex','','','[O/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','na_h','dex','','','[Na/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mg_h','dex','','','[Mg/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','al_h','dex','','','[Al/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','si_h','dex','','','[Si/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','p_h','dex','','','[P/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','s_h','dex','','','[S/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','k_h','dex','','','[K/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ca_h','dex','','','[Ca/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ti_h','dex','','','[Ti/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','tiii_h','dex','','','[TiII/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','v_h','dex','','','[V/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','cr_h','dex','','','[Cr/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mn_h','dex','','','[Mn/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','co_h','dex','','','[Co/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ni_h','dex','','','[Ni/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','teff_rawerr','deg K','','','raw uncertainty in effective temperature from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','logg_rawerr','dex','','','raw uncertainty in surface gravity from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','m_h_rawerr','dex','','','raw uncertainty in [M/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','alpha_m_rawerr','dex','','','raw uncertainty in [alpha/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','fe_h_rawerr','dex','','','raw uncertainty in [Fe/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','c_h_rawerr','dex','','','raw uncertainty in [C/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ci_h_rawerr','dex','','','raw uncertainty in [CI/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','n_h_rawerr','dex','','','raw uncertainty in [N/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','o_h_rawerr','dex','','','raw uncertainty in [O/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','na_h_rawerr','dex','','','raw uncertainty in [Na/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mg_h_rawerr','dex','','','raw uncertainty in [Mg/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','al_h_rawerr','dex','','','raw uncertainty in [Al/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','si_h_rawerr','dex','','','raw uncertainty in [Si/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','p_h_rawerr','dex','','','raw uncertainty in [P/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','s_h_rawerr','dex','','','raw uncertainty in [S/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','k_h_rawerr','dex','','','raw uncertainty in [K/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ca_h_rawerr','dex','','','raw uncertainty in [Ca/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ti_h_rawerr','dex','','','raw uncertainty in [Ti/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','tiii_h_rawerr','dex','','','raw uncertainty in [TiII/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','v_h_rawerr','dex','','','raw uncertainty in [V/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','cr_h_rawerr','dex','','','raw uncertainty in [Cr/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mn_h_rawerr','dex','','','raw uncertainty in [Mn/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','co_h_rawerr','dex','','','raw uncertainty in [Co/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ni_h_rawerr','dex','','','raw uncertainty in [Ni/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','teff_err','deg K','','','uncertainty in effective temperature from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','logg_err','dex','','','uncertainty in surface gravity from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','m_h_err','dex','','','uncertainty in [M/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','alpha_m_err','dex','','','uncertainty in [alpha/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','fe_h_err','dex','','','uncertainty in [Fe/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','c_h_err','dex','','','uncertainty in [C/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ci_h_err','dex','','','uncertainty in [CI/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','n_h_err','dex','','','uncertainty in [N/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','o_h_err','dex','','','uncertainty in [O/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','na_h_err','dex','','','uncertainty in [Na/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mg_h_err','dex','','','uncertainty in [Mg/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','al_h_err','dex','','','uncertainty in [Al/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','si_h_err','dex','','','uncertainty in [Si/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','p_h_err','dex','','','uncertainty in [P/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','s_h_err','dex','','','uncertainty in [S/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','k_h_err','dex','','','uncertainty in [K/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ca_h_err','dex','','','uncertainty in [Ca/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ti_h_err','dex','','','uncertainty in [Ti/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','tiii_h_err','dex','','','uncertainty in [TiII/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','v_h_err','dex','','','uncertainty in [V/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','cr_h_err','dex','','','uncertainty in [Cr/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','mn_h_err','dex','','','uncertainty in [Mn/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','co_h_err','dex','','','uncertainty in [Co/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','ni_h_err','dex','','','uncertainty in [Ni/H] from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','chi_sq','','','','chi^2 from Cannon analysis','0');
INSERT DBColumns VALUES('cannonStar','r_chi_sq','','','','reduced chi^2 from Cannon analysis','0');
INSERT DBColumns VALUES('apogeePlate','plate_visit_id','','','','Unique ID for plate visit, of form apogee.[telescope].[cs].plate.mjd (Primary key)','0');
INSERT DBColumns VALUES('apogeePlate','location_id','','','','Location ID (Foreign key)','0');
INSERT DBColumns VALUES('apogeePlate','plate','','','','Plate of this visit','0');
INSERT DBColumns VALUES('apogeePlate','mjd','','','','MJD of this visit','0');
INSERT DBColumns VALUES('apogeePlate','apred_version','','','','Visit reduction pipeline version','0');
INSERT DBColumns VALUES('apogeePlate','name','','','','Name of location that this plate belongs to','0');
INSERT DBColumns VALUES('apogeePlate','racen','deg','','','Right ascension, J2000, of plate center','0');
INSERT DBColumns VALUES('apogeePlate','deccen','deg','','','Declination, J2000, of plate center','0');
INSERT DBColumns VALUES('apogeePlate','radius','deg','','','Utilized radius of plate','0');
INSERT DBColumns VALUES('apogeePlate','shared','','','','If set to 1, a plate shared with another survey (0 if not)','0');
INSERT DBColumns VALUES('apogeePlate','field_type','','','','Type of field','0');
INSERT DBColumns VALUES('apogeePlate','survey','','','','Survey name','0');
INSERT DBColumns VALUES('apogeePlate','programname','','','','Program name within survey','0');
INSERT DBColumns VALUES('apogeePlate','platerun','','','','Plate run in which plate was drilled','0');
INSERT DBColumns VALUES('apogeePlate','designid','','','','Design ID associated with plate  (Foreign key)','0');
INSERT DBColumns VALUES('apogeePlate','nStandard','','','','Number of standard stars on plate','0');
INSERT DBColumns VALUES('apogeePlate','nScience','','','','Number of science stars on plate','0');
INSERT DBColumns VALUES('apogeePlate','nSky','','','','Number of sky fibers on plate','0');
INSERT DBColumns VALUES('apogeePlate','platedesign_version','','','','Version of platedesign used to create plate design','0');
INSERT DBColumns VALUES('apogeeDesign','designid','','','','Design ID from plate design (Primary key)','0');
INSERT DBColumns VALUES('apogeeDesign','location_id','','','','Location ID (Foreign key)','0');
INSERT DBColumns VALUES('apogeeDesign','ra','deg','','','Right ascension, J2000, of plate center','0');
INSERT DBColumns VALUES('apogeeDesign','dec','deg','','','Declination, J2000, of plate center','0');
INSERT DBColumns VALUES('apogeeDesign','field_name','','','','Name of field','0');
INSERT DBColumns VALUES('apogeeDesign','design_type','','','','Type of design','0');
INSERT DBColumns VALUES('apogeeDesign','design_driver','','','','Driver for design','0');
INSERT DBColumns VALUES('apogeeDesign','radius','deg','','','Utilized radius of plate','0');
INSERT DBColumns VALUES('apogeeDesign','shared','','','','If set to 1, a plate shared with another survey (0 if not)','0');
INSERT DBColumns VALUES('apogeeDesign','comments','','','','Additional comments on design','0');
INSERT DBColumns VALUES('apogeeDesign','number_of_visits','','','','Total number of visits intended for this design','0');
INSERT DBColumns VALUES('apogeeDesign','number_of_tellurics','','','','Number of hot star tellurics on this design (tellurics/science targets may overlap)','0');
INSERT DBColumns VALUES('apogeeDesign','number_of_sky','','','','Number of sky targets on this design','0');
INSERT DBColumns VALUES('apogeeDesign','number_of_science','','','','Number of science targets on this design (tellurics/science targets may overlap)','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_short_version','','','','Which of this field''s short cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_medium_version','','','','Which of this field''s medium cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_long_version','','','','Which of this field''s long cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_fraction_1','','','','Which of this field''s long cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_fraction_2','','','','Which of this field''s long cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_fraction_3','','','','Which of this field''s long cohorts is in this design','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_min_h_1','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_min_h_2','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_min_h_3','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_max_h_1','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_max_h_2','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_max_h_3','','','','Minimum H mag for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_number_of_visits_1','','','','Number of visits for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_number_of_visits_2','','','','Number of visits for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','cohort_number_of_visits_3','','','','Number of visits for each cohort','0');
INSERT DBColumns VALUES('apogeeDesign','number_of_selection_bins','','','','Number of selection bins','0');
INSERT DBColumns VALUES('apogeeDesign','bin_fraction_1','','','','Number of selection bins (5 max)','0');
INSERT DBColumns VALUES('apogeeDesign','bin_fraction_2','','','','Number of selection bins (5 max)','0');
INSERT DBColumns VALUES('apogeeDesign','bin_fraction_3','','','','Number of selection bins (5 max)','0');
INSERT DBColumns VALUES('apogeeDesign','bin_priority_1','','','','Bin priority','0');
INSERT DBColumns VALUES('apogeeDesign','bin_priority_2','','','','Bin priority','0');
INSERT DBColumns VALUES('apogeeDesign','bin_priority_3','','','','Bin priority','0');
INSERT DBColumns VALUES('apogeeDesign','bin_use_wd_flag_1','','','','Use WD flag','0');
INSERT DBColumns VALUES('apogeeDesign','bin_use_wd_flag_2','','','','Use WD flag','0');
INSERT DBColumns VALUES('apogeeDesign','bin_use_wd_flag_3','','','','Use WD flag','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_min_jk_color_1','','','','Minimum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_min_jk_color_2','','','','Minimum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_min_jk_color_3','','','','Minimum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_max_jk_color_1','','','','Maximum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_max_jk_color_2','','','','Maximum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','bin_dereddened_max_jk_color_3','','','','Maximum J-K for this bin','0');
INSERT DBColumns VALUES('apogeeDesign','platerun','','','','Platerun for original design','0');
INSERT DBColumns VALUES('apogeeField','field_name','','','','Name of field','0');
INSERT DBColumns VALUES('apogeeField','location_id','','','','Location ID (Primary key)','0');
INSERT DBColumns VALUES('apogeeField','ra','deg','','','Right ascension of field center (J2000)','0');
INSERT DBColumns VALUES('apogeeField','dec','deg','','','Declination of field center (J2000)','0');
INSERT DBColumns VALUES('apogeeField','glon','deg','','','Galactic longitude of field center (J2000)','0');
INSERT DBColumns VALUES('apogeeField','glat','deg','','','Galactic latitude of field center (J2000)','0');
INSERT DBColumns VALUES('apogeeField','expected_no_of_visits','','','','Expected number of visits for this field (not necessarily the number of visits actually achieved)','0');
INSERT DBColumns VALUES('apogeeField','expected_no_of_designs','','','','Expected number of designs for this field','0');
INSERT DBColumns VALUES('apogeeField','no_of_designs_completed','','','','number of designs completed for this field','0');
INSERT DBColumns VALUES('apogeeObject','apogee_id','','','','ID identifying this target object','0');
INSERT DBColumns VALUES('apogeeObject','target_id','','','','Unique targeting ID identifying this target object (of form [location_id].[apogee_id])','0');
INSERT DBColumns VALUES('apogeeObject','alt_id','','','','Alternate name for non-2MASS objects','0');
INSERT DBColumns VALUES('apogeeObject','location_id','','','','Location ID','0');
INSERT DBColumns VALUES('apogeeObject','ra','deg','','','Right ascension (J2000)','0');
INSERT DBColumns VALUES('apogeeObject','dec','deg','','','Declination (J2000)','0');
INSERT DBColumns VALUES('apogeeObject','j','mag','','','2MASS J-band magnitude','0');
INSERT DBColumns VALUES('apogeeObject','j_err','mag','','','2MASS J-band magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','h','mag','','','H-band magnitude','0');
INSERT DBColumns VALUES('apogeeObject','src_h','','','','Source of H magnitude','0');
INSERT DBColumns VALUES('apogeeObject','h_err','mag','','','H-band magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','k','mag','','','2MASS Ks-band magnitude','0');
INSERT DBColumns VALUES('apogeeObject','k_err','mag','','','2MASS Ks-band magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','irac_3_6','mag','','','IRAC 3.6 micron magnitude','0');
INSERT DBColumns VALUES('apogeeObject','irac_3_6_err','mag','','','IRAC 3.6 micron magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','irac_4_5','mag','','','IRAC 4.5 micron magnitude','0');
INSERT DBColumns VALUES('apogeeObject','irac_4_5_err','mag','','','IRAC 4.5 micron magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','src_4_5','','','','source of 4.5 micron magnitude used for targeting','0');
INSERT DBColumns VALUES('apogeeObject','irac_5_8','mag','','','IRAC 5.4 micron magnitude','0');
INSERT DBColumns VALUES('apogeeObject','irac_5_8_err','mag','','','IRAC 5.4 micron magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','irac_8_0','mag','','','IRAC 8.0 micron magnitude','0');
INSERT DBColumns VALUES('apogeeObject','irac_8_0_err','mag','','','IRAC 8.0 micron magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','wise_4_5','mag','','','WISE allWISE release 4.5 micron magnitude','0');
INSERT DBColumns VALUES('apogeeObject','wise_4_5_err','mag','','','WISE allWISE release 4.5 micron magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','ak_wise','mag','','','Ks-band extinction based on WISE allWISE release photometry','0');
INSERT DBColumns VALUES('apogeeObject','sfd_ebv','mag','','','E(B-V) at object''s position in Schlegel, Finkbeiner, &amp; David (1998) maps','0');
INSERT DBColumns VALUES('apogeeObject','wash_m','mag','','','Washington M magnitude','0');
INSERT DBColumns VALUES('apogeeObject','wash_m_err','mag','','','Washington M magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','wash_t2','mag','','','Washington T2 magnitude','0');
INSERT DBColumns VALUES('apogeeObject','wash_t2_err','mag','','','Washington T2 magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','DDO51','mag','','','DDO51 magnitude','0');
INSERT DBColumns VALUES('apogeeObject','DDO51_err','mag','','','DDO51 magnitude error','0');
INSERT DBColumns VALUES('apogeeObject','wash_ddo51_giant_flag','','','','Luminosity class classification derived from Wash+DDO51 data (1 = giant, 0 = dwarf, -1 = no data)','0');
INSERT DBColumns VALUES('apogeeObject','wash_ddo51_star_flag','','','','Stellar classification based on Washington+DDO51 data (0=extended, 1=star-like or no data)','0');
INSERT DBColumns VALUES('apogeeObject','targ_4_5','mag','','','4.5 micron magnitude used for targeting','0');
INSERT DBColumns VALUES('apogeeObject','targ_4_5_err','mag','','','Error in 4.5 micron magnitude used for targeting','0');
INSERT DBColumns VALUES('apogeeObject','ak_targ','mag','','','Ks-band extinction used for target selection','0');
INSERT DBColumns VALUES('apogeeObject','ak_targ_method','mag','','','Method to calculate Ks-band extinction used for target selection (RJCE_IRAC, RJCE_WISE_ALLSKY, RJCE_WISE_PARTSKY, RJCE_WISE_OPS2, RJCE_WISE_OPS, SFD_EBV, NONE)','0');
INSERT DBColumns VALUES('apogeeObject','pmra','mas/yr','','','Proper motion in RA','0');
INSERT DBColumns VALUES('apogeeObject','pmra_err','mas/yr','','','Uncertainty in proper motion in RA','0');
INSERT DBColumns VALUES('apogeeObject','pmdec','mas/yr','','','Proper motion in Dec','0');
INSERT DBColumns VALUES('apogeeObject','pmdec_err','mas/yr','','','Uncertainty in proper motion in Dec','0');
INSERT DBColumns VALUES('apogeeObject','pm_src','','','','Source of proper motion data','0');
INSERT DBColumns VALUES('apogeeObject','tmass_a','','','','Source of 2MASS optical counterpart','0');
INSERT DBColumns VALUES('apogeeObject','tmass_pxpa','deg','','','Position angle of 2MASS optical counterpart (East of North)','0');
INSERT DBColumns VALUES('apogeeObject','tmass_prox','arcsec','','','Proximity of 2MASS nearest neighbor','0');
INSERT DBColumns VALUES('apogeeObject','tmass_phqual','','','','2MASS ph_qual flag','0');
INSERT DBColumns VALUES('apogeeObject','tmass_rdflg','','','','2MASS read_flag','0');
INSERT DBColumns VALUES('apogeeObject','tmass_ccflg','','','','2MASS contamination flag','0');
INSERT DBColumns VALUES('apogeeObject','tmass_extkey','','','','2MASS Extended Source Catalog ID of associated source','0');
INSERT DBColumns VALUES('apogeeObject','tmass_gal_contam','','','','2MASS galaxy contamination flag','0');
INSERT DBColumns VALUES('mangaDRPall','plate','','','','Plate ID','0');
INSERT DBColumns VALUES('mangaDRPall','ifudsgn','','','','IFU design id (e.g. 12701)','0');
INSERT DBColumns VALUES('mangaDRPall','plateifu','','','','Plate+ifudesign name for this object (e.g. 7443-12701)','0');
INSERT DBColumns VALUES('mangaDRPall','mangaid','','','','MaNGA ID for this object (e.g. 1-114145)','0');
INSERT DBColumns VALUES('mangaDRPall','versdrp2','','','','Version of DRP used for 2d reductions','0');
INSERT DBColumns VALUES('mangaDRPall','versdrp3','','','','Version of DRP used for 3d reductions','0');
INSERT DBColumns VALUES('mangaDRPall','verscore','','','','Version of mangacore used for reductions','0');
INSERT DBColumns VALUES('mangaDRPall','versutil','','','','Version of idlutils used for reductions','0');
INSERT DBColumns VALUES('mangaDRPall','versprim','','','','Version of mangapreim used for reductions','0');
INSERT DBColumns VALUES('mangaDRPall','platetyp','','','','Plate type (e.g. MANGA, APOGEE-2&amp;MANGA)','0');
INSERT DBColumns VALUES('mangaDRPall','srvymode','','','','Survey mode (e.g. MANGA dither, MANGA stare, APOGEE lead)','0');
INSERT DBColumns VALUES('mangaDRPall','objra','degrees','','','Right ascension of the science object in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','objdec','degrees','','','Declination of the science object in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','ifuglon','degrees','','','Galactic longitude corresponding to IFURA/DEC','0');
INSERT DBColumns VALUES('mangaDRPall','ifuglat','degrees','','','Galactic latitude corresponding to IFURA/DEC','0');
INSERT DBColumns VALUES('mangaDRPall','ifura','degrees','','','Right ascension of this IFU in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','ifudec','degrees','','','Declination of this IFU in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','ebvgal','','','','E(B-V) value from SDSS dust routine for this IFUGLON, IFUGLAT','0');
INSERT DBColumns VALUES('mangaDRPall','nexp','','','','Number of science exposures combined','0');
INSERT DBColumns VALUES('mangaDRPall','exptime','seconds','','','Total exposure time','0');
INSERT DBColumns VALUES('mangaDRPall','drp3qual','','','','Quality bitmask','0');
INSERT DBColumns VALUES('mangaDRPall','bluesn2','','','','Total blue SN2 across all nexp exposures','0');
INSERT DBColumns VALUES('mangaDRPall','redsn2','','','','Total red SN2 across all nexp exposures','0');
INSERT DBColumns VALUES('mangaDRPall','harname','','','','IFU harness name','0');
INSERT DBColumns VALUES('mangaDRPall','frlplug','','','','Frplug hardware code','0');
INSERT DBColumns VALUES('mangaDRPall','cartid','','','','Cartridge ID number','0');
INSERT DBColumns VALUES('mangaDRPall','designid','','','','Design ID number','0');
INSERT DBColumns VALUES('mangaDRPall','cenra','degrees','','','Plate center right ascension in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','cendec','degrees','','','Plate center declination in J2000','0');
INSERT DBColumns VALUES('mangaDRPall','airmsmin','','','','Minimum airmass across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','airmsmed','','','','Median airmass across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','airmsmax','','','','Maximum airmass across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','seemin','arcsec','','','Best guider seeing','0');
INSERT DBColumns VALUES('mangaDRPall','seemed','arcsec','','','Median guider seeing','0');
INSERT DBColumns VALUES('mangaDRPall','seemax','arcsec','','','Worst guider seeing','0');
INSERT DBColumns VALUES('mangaDRPall','transmin','','','','Worst transparency','0');
INSERT DBColumns VALUES('mangaDRPall','transmed','','','','Median transparency','0');
INSERT DBColumns VALUES('mangaDRPall','transmax','','','','Best transparency','0');
INSERT DBColumns VALUES('mangaDRPall','mjdmin','','','','Minimum MJD across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','mjdmed','','','','Median MJD across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','mjdmax','','','','Maximum MJD across all exposures','0');
INSERT DBColumns VALUES('mangaDRPall','gfwhm','arcsec','','','Reconstructed FWHM in g-band','0');
INSERT DBColumns VALUES('mangaDRPall','rfwhm','arcsec','','','Reconstructed FWHM in r-band','0');
INSERT DBColumns VALUES('mangaDRPall','ifwhm','arcsec','','','Reconstructed FWHM in i-band','0');
INSERT DBColumns VALUES('mangaDRPall','zfwhm','arcsec','','','Reconstructed FWHM in z-band','0');
INSERT DBColumns VALUES('mangaDRPall','mngtarg1','','','','Manga-target1 maskbit for galaxy target catalog','0');
INSERT DBColumns VALUES('mangaDRPall','mngtarg2','','','','Manga-target2 maskbit for galaxy target catalog','0');
INSERT DBColumns VALUES('mangaDRPall','mngtarg3','','','','Manga-target3 maskbit for galaxy target catalog','0');
INSERT DBColumns VALUES('mangaDRPall','catidnum','','','','Primary target input catalog (leading digits of mangaid)','0');
INSERT DBColumns VALUES('mangaDRPall','plttarg','','','','plateTarget reference file appropriate for this target','0');
INSERT DBColumns VALUES('mangaDRPall','manga_tileid','','','','The ID of the tile to which this object has been allocated','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_iauname','','','','IAU-style designation based on RA/Dec (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','ifutargetsize','fibers','','','The ideal IFU size for this object. The intended IFU size is equal to IFUTargetSize except if IFUTargetSize &gt; 127 when it is 127, or &lt; 19 when it is 19','0');
INSERT DBColumns VALUES('mangaDRPall','ifudesignsize','fibers','','','The allocated IFU size (0 = "unallocated")','0');
INSERT DBColumns VALUES('mangaDRPall','ifudesignwrongsize','fibers','','','The allocated IFU size if the intended IFU size was not available','0');
INSERT DBColumns VALUES('mangaDRPall','z','','','','The targeting redshift (identical to nsa_z for those targets in the NSA Catalog. For others, it is the redshift provided by the Ancillary programs)','0');
INSERT DBColumns VALUES('mangaDRPall','zmin','','','','The minimum redshift at which the galaxy could still have been included in the Primary sample','0');
INSERT DBColumns VALUES('mangaDRPall','zmax','','','','The maximum redshift at which the galaxy could still have been included in the Primary sample','0');
INSERT DBColumns VALUES('mangaDRPall','szmin','','','','The minimum redshift at which the galaxy could still have been included in the Secondary sample','0');
INSERT DBColumns VALUES('mangaDRPall','szmax','','','','The maximum redshift at which the galaxy could still have been included in the Secondary sample','0');
INSERT DBColumns VALUES('mangaDRPall','ezmin','','','','The minimum redshift at which the galaxy could still have been included in the Primary+ sample','0');
INSERT DBColumns VALUES('mangaDRPall','ezmax','','','','The minimum redshift at which the galaxy could still have been included in the Primary+ sample','0');
INSERT DBColumns VALUES('mangaDRPall','probs','','','','The probability that a Secondary sample galaxy is included after down-sampling. For galaxies not in the Secondary sample PROBS is set to the mean down-sampling probability','0');
INSERT DBColumns VALUES('mangaDRPall','pweight','','','','The volume weight for the Primary sample. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','psweight','','','','The volume weight for the combined Primary and full Secondary samples. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','psrweight','','','','The volume weight for the combined Primary and down-sampled Secondary samples. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','sweight','','','','The volume weight for the full Secondary sample. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','srweight','','','','The volume weight for the down-sampled Secondary sample. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','eweight','','','','The volume weight for the Primary+ sample. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','esweight','','','','The volume weight for the combined Primary+ and full Secondary samples. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','esrweight','','','','The volume weight for the combined Primary+ and down-sampled Secondary samples. Corrects the MaNGA selection to a volume limited sample.','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_field','','','','SDSS field ID covering the target','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_run','','','','SDSS run ID covering the target','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_camcol','','','','SDSS camcol ID covering the catalog position.','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_version','','','','Version of NSA catalogue used to select these targets','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_nsaid','','','','The NSAID field in the NSA catalogue referenced in nsa_version.','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_nsaid_v1b','','','','The NSAID of the target in the NSA_v1b_0_0_v2 catalogue (if applicable).','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_z','','','','Heliocentric redshift (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_zdist','','','','Distance estimate using peculiar velocity model of Willick et al. (1997), expressed as a redshift equivalent; multiply by c/H0 for Mpc (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_mass','solar masses','','','Stellar mass from K-correction fit (use with caution) for elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_f','mag^{-2}','','','Inverse variance of elpetro_absmag_f (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_n','mag^{-2}','','','Inverse variance of elpetro_absmag_n (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_u','mag^{-2}','','','Inverse variance of elpetro_absmag_u (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_g','mag^{-2}','','','Inverse variance of elpetro_absmag_g (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_r','mag^{-2}','','','Inverse variance of elpetro_absmag_r (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_i','mag^{-2}','','','Inverse variance of elpetro_absmag_i (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_amivar_z','mag^{-2}','','','Inverse variance of elpetro_absmag_z (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_f','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_n','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX near-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_u','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS u-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_g','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS g-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_r','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS r-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_i','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS i-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_z','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS z-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of elpetroflux_f (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of elpetroflux_n (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of elpetroflux_u (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of elpetroflux_g (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of elpetroflux_r (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of elpetroflux_i (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of elpetroflux_z (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_th50_r','arcsec','','','Elliptical Petrosian 50% light radius in SDSS r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_phi','deg','','','Position angle (east of north) used for elliptical apertures (for this version, same as ba90) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_elpetro_ba','','','','Axis ratio used for elliptical apertures (for this version, same as ba90) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_mass','solar mass','','','Stellar mass from K-correction fit (use with caution) for Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_f','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX far-UV (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_n','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX near-UV (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_u','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS u-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_g','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS g-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_r','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS r-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_i','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS i-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_z','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS z-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of sersic_flux_f (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of sersic_flux_n (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of sersic_flux_u (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of sersic_flux_g (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of sersic_flux_r (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of sersic_flux_i (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of sersic_flux_z (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_th50','arcsec','','','50% light radius of two-dimensional, single-component Sersic fit to r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_phi','deg','','','Angle (E of N) of major axis in two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_ba','','','','Axis ratio b/a from two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_sersic_n','','','','Sersic index from two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_f','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_n','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_u','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS u-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_g','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS g-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_r','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS r-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_i','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS i-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_z','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS z-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of petro_flux_f (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of petro_flux_n (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of petro_flux_u (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of petro_flux_g (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of petro_flux_r (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of petro_flux_i (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of petro_flux_z (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_petro_th50','arcsec','','','Azimuthally averaged SDSS-style Petrosian 50% light radius (derived from r band) (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_f','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX far-UV (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_n','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX near-UV (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_u','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS u-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_g','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS g-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_r','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS r-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_i','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS i-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','nsa_extinction_z','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS z-band (NSA)','0');
INSERT DBColumns VALUES('mangaDRPall','htmID','','','','20-level deep Hierarchical Triangular Mesh ID','0');
INSERT DBColumns VALUES('mangatarget','catalog_ra','deg','','','Right Ascension of measured object center (J2000) as given in the input catalog (NSA for main samples and most ancillaries)','0');
INSERT DBColumns VALUES('mangatarget','catalog_dec','deg','','','Declination of measured object center (J2000) as given in the input catalog (NSA for main samples and most ancillaries)','0');
INSERT DBColumns VALUES('mangatarget','nsa_z','','','','Heliocentric redshift (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_zdist','','','','Distance estimate using pecular velocity model of Willick et al. (1997), expressed as a redshift equivalent; multiply by c/H0 for Mpc (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_mass','solar masses','','','Stellar mass from K-correction fit (use with caution) for elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from elliptical Petrosian fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_f','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_f (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_n','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_n (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_u','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_u (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_g','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_g (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_r','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_r (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_i','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_i (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_amivar_z','mag^{-2}','','','Inverse variance of nsa_elpetro_absmag_z (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_f','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_n','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX near-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_u','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS u-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_g','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS g-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_r','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS r-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_i','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS i-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_z','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS z-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_f (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_n (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_u (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_g (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_r (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_i (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of nsa_elpetro_flux_z (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_r_original','arcsec','','','Elliptical Petrosian 50% light radius in SDSS r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_f','arcsec','','','Elliptical Petrosian 50% light radius in GALEX far-UV (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_n','arcsec','','','Elliptical Petrosian 50% light radius in GALEX near-UV (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_u','arcsec','','','Elliptical Petrosian 50% light radius in SDSS u-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_g','arcsec','','','Elliptical Petrosian 50% light radius in SDSS g-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_r','arcsec','','','Elliptical Petrosian 50% light radius in SDSS r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_i','arcsec','','','Elliptical Petrosian 50% light radius in SDSS i-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_th50_z','arcsec','','','Elliptical Petrosian 50% light radius in SDSS z-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_phi','deg','','','Position angle (east of north) used for elliptical apertures (for this version, same as ba90) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_elpetro_ba','','','','Axis ratio used for elliptical apertures (for this version, same as ba90) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_mass','solar mass','','','Stellar mass from K-correction fit (use with caution) for Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from Sersic fluxes (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_f','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_f (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_n','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_n (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_u','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_u (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_g','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_g (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_r','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_r (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_i','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_i (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_amivar_z','mag^{-2}','','','Inverse variance in nsa_sersic_absmag_z (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_f','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX far-UV (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_n','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX near-UV (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_u','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS u-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_g','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS g-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_r','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS r-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_i','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS i-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_z','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS z-band (fit using r-band structural parameters) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_f (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_n (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_u (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_g (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_r (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_i (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of nsa_sersic_flux_z (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_th50','arcsec','','','50% light radius of two-dimensional, single-component Sersic fit to r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_phi','deg','','','Angle (E of N) of major axis in two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_ba','','','','Axis ratio b/a from two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_sersic_n','','','','Sersic index from two-dimensional, single-component Sersic fit in r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_f','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_n','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_u','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS u-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_g','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS g-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_r','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS r-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_i','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS i-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_z','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS z-band (using r-band aperture) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_f (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_n (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_u (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_g (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_r (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_i (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of nsa_petro_flux_z (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_petro_th50','arcsec','','','Azimuthally averaged SDSS-style Petrosian 50% light radius (derived from r band) (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_f','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX far-UV (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_n','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX near-UV (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_u','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS u-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_g','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS g-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_r','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS r-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_i','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS i-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_extinction_z','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS z-band (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_iauname','','','','IAU-style designation based on RA/Dec (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_subdir','','','','Subdirectory for images in the NSA ''detect'' directory (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_pid','','','','Parent id within mosaic for this object (NSA)','0');
INSERT DBColumns VALUES('mangatarget','nsa_nsaid','','','','Unique ID within NSA v1 catalog (NSA)','0');
INSERT DBColumns VALUES('mangatarget','catind','','','','Zero-indexed row within the input NSA v1 catalog (NSA)','0');
INSERT DBColumns VALUES('mangatarget','manga_target1','','','','Targeting bitmask for main sample targets','0');
INSERT DBColumns VALUES('mangatarget','mangaID','','','','Unique ID for each manga target','0');
INSERT DBColumns VALUES('mangatarget','zmin','','','','The minimum redshift at which the galaxy could still have been included in the Primary sample','0');
INSERT DBColumns VALUES('mangatarget','zmax','','','','The maximum redshift at which the galaxy could still have been included in the Primary sample','0');
INSERT DBColumns VALUES('mangatarget','szmin','','','','The minimum redshift at which the galaxy could still have been included in the Secondary sample','0');
INSERT DBColumns VALUES('mangatarget','szmax','','','','The maximum redshift at which the galaxy could still have been included in the Secondary sample','0');
INSERT DBColumns VALUES('mangatarget','ezmin','','','','The minimum redshift at which the galaxy could still have been included in the Primary+ sample','0');
INSERT DBColumns VALUES('mangatarget','ezmax','','','','The minimum redshift at which the galaxy could still have been included in the Primary+ sample','0');
INSERT DBColumns VALUES('mangatarget','probs','','','','The probability that a Secondary sample galaxy is included after down-sampling. For galaxies not in the Secondary sample PROBS is set to the mean down-sampling probability','0');
INSERT DBColumns VALUES('mangatarget','pweight','','','','The volume weight for the Primary sample. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','sweight','','','','The volume weight for the full Secondary sample. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','srweight','','','','The volume weight for the down-sampled Secondary sample. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','eweight','','','','The volume weight for the Primary+ sample. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','psrweight','','','','The volume weight for the combined Primary and down-sampled Secondary samples. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','esrweight','','','','The volume weight for the combined Primary+ and down-sampled Secondary samples. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','psweight','','','','The volume weight for the combined Primary and full Secondary samples. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','esweight','','','','The volume weight for the combined Primary+ and full Secondary samples. Corrects the MaNGA selection to a volume limited sample','0');
INSERT DBColumns VALUES('mangatarget','ranflag','','','','Set to 1 if a target is to be included after random sampling to produce the correct proportions of each sample, otherwise 0','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_0','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_1','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_2','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_3','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_4','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_5','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_6','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_7','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_8','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_9','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_10','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_11','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_12','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_13','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_14','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_15','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_16','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_17','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_18','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_19','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_20','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_21','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_22','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_23','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_24','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_25','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_26','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_27','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_28','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileids_29','','','','IDs of all tiles that overlap a galaxy''s position.','0');
INSERT DBColumns VALUES('mangatarget','manga_tileid','','','','The ID of the tile to which this object has been allocated','0');
INSERT DBColumns VALUES('mangatarget','tilera','deg','','','The Right Ascension (J2000) of the tile to which this object has been allocated','0');
INSERT DBColumns VALUES('mangatarget','tiledec','deg','','','The Declination (J2000) of the tile to which this object has been allocated','0');
INSERT DBColumns VALUES('mangatarget','ifutargetsize','fibers','','','The ideal IFU size for this object. The intended IFU size is equal to IFUTargetSize except if IFUTargetSize &gt; 127 when it is 127, or &lt; 19 when it is 19','0');
INSERT DBColumns VALUES('mangatarget','ifudesignsize','fibers','','','The allocated IFU size (0 = "unallocated")','0');
INSERT DBColumns VALUES('mangatarget','ifudesignwrongsize','fibers','','','The allocated IFU size if the intended IFU size was not available','0');
INSERT DBColumns VALUES('mangatarget','ifu_ra','deg','','','The Right Ascension (J2000) of the IFU center','0');
INSERT DBColumns VALUES('mangatarget','ifu_dec','deg','','','The Right Declination (J2000) of the IFU center','0');
INSERT DBColumns VALUES('mangatarget','badphotflag','','','','Set to 1 if target has been visually inspected to have bad photometry and should not be observed','0');
INSERT DBColumns VALUES('mangatarget','starflag','','','','Set to 1 if target lies close to a bright star should not be observed','0');
INSERT DBColumns VALUES('mangatarget','object_ra','deg','','','The best estimate of the Right Ascension (J2000) of the center of the object. Normally the same as CATALOG_RA but can be modified particularly as a result of visual inspection','0');
INSERT DBColumns VALUES('mangatarget','object_dec','deg','','','The best estimate of the Declination (J2000) of the center of the object. Normally the same as CATALOG_RA but can be modified particularly as a result of visual inspection','0');
INSERT DBColumns VALUES('mangatarget','obsflag','','','','Set to 1 if the target has already been included on a plate set to be observed at the time the IFU allocation was made, otherwise 0','0');
INSERT DBColumns VALUES('mangatarget','catindanc','','','','Zero-indexed row within the applicable ancillary catalog','0');
INSERT DBColumns VALUES('mangatarget','ifudesignsizemain','fibers','','','The allocated IFU size prior to the addition of the ancillary samples (0 = "unallocated")','0');
INSERT DBColumns VALUES('mangatarget','ifuminsizeanc','fibers','','','The minimum acceptable IFU size for the ancillary program','0');
INSERT DBColumns VALUES('mangatarget','ifutargsizeanc','fibers','','','The ideal IFU size for the ancillary program','0');
INSERT DBColumns VALUES('mangatarget','manga_target3','','','','Targeting bitmask for the ancillary samples','0');
INSERT DBColumns VALUES('mangatarget','priorityanc','','','','The ancillary program''s priority for this object','0');
INSERT DBColumns VALUES('mangatarget','unalloc','','','','Set to 1 if an ancillary target has been allocated an IFU the was not allocated to a main sample galaxy, otherwise 0','0');
INSERT DBColumns VALUES('nsatlas','nsaid','','','','Unique ID within NSA v1 catalog','0');
INSERT DBColumns VALUES('nsatlas','iauname','','','','IAU-style designation based on RA/Dec','0');
INSERT DBColumns VALUES('nsatlas','subdir','','','','Subdirectory for images in the NSA ''detect'' directory','0');
INSERT DBColumns VALUES('nsatlas','ra','deg','','','Right Ascension of measured object center (J2000)','0');
INSERT DBColumns VALUES('nsatlas','dec','deg','','','Declination of measured object center (J2000)','0');
INSERT DBColumns VALUES('nsatlas','isdss','','','','Zero-indexed row of SDSS source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','ined','','','','Zero-indexed row of NED source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','isixdf','','','','Zero-indexed row of 6dFGRS source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','ialfalfa','','','','Zero-indexed row of ALFALFA source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','izcat','','','','Zero-indexed row of ZCAT source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','itwodf','','','','Zero-indexed row of 2dFGRS source file for NSA (-1 if no match)','0');
INSERT DBColumns VALUES('nsatlas','mag','mag','','','Nominal B magnitude; not reliable, only used to set size of image for analysis','0');
INSERT DBColumns VALUES('nsatlas','z','','','','Heliocentric redshift','0');
INSERT DBColumns VALUES('nsatlas','zsrc','','','','Source of redshift determination (alfalfa, ned, sdss, sixdf, twodf, or zcat)','0');
INSERT DBColumns VALUES('nsatlas','size','deg','','','Size of analyzed mosaics','0');
INSERT DBColumns VALUES('nsatlas','run','','','','SDSS drift scan run covering catalog position (racat, deccat)','0');
INSERT DBColumns VALUES('nsatlas','camcol','','','','SDSS camcol covering catalog position (racat, deccat)','0');
INSERT DBColumns VALUES('nsatlas','field','','','','SDSS field covering catalog position (racat, deccat)','0');
INSERT DBColumns VALUES('nsatlas','rerun','','','','Photometric rerun of SDSS used to determine SDSS coverage','0');
INSERT DBColumns VALUES('nsatlas','xpos','pix','','','SDSS camera column of catalog position (racat, deccat)','0');
INSERT DBColumns VALUES('nsatlas','ypos','pix','','','SDSS camera row of catalog position (racat, deccat)','0');
INSERT DBColumns VALUES('nsatlas','zdist','','','','Distance estimate using pecular velocity model of Willick et al. (1997), expressed as a redshift equivalent; multiply by &lt;var&gt;c/H&lt;sub&gt;0&lt;/sub&gt;&lt;/var&gt; for Mpc','0');
INSERT DBColumns VALUES('nsatlas','plate','','','','SDSS plate number (0 if not observed)','0');
INSERT DBColumns VALUES('nsatlas','fiberid','','','','SDSS fiber number (0 if not observed)','0');
INSERT DBColumns VALUES('nsatlas','mjd','days','','','SDSS MJD of spectroscopic observation (0 if not observed)','0');
INSERT DBColumns VALUES('nsatlas','racat','deg','','','Right Ascension of catalog object (J2000)','0');
INSERT DBColumns VALUES('nsatlas','deccat','deg','','','Declination of catalog object (J2000)','0');
INSERT DBColumns VALUES('nsatlas','survey','','','','Survey within SDSS that observed the plate','0');
INSERT DBColumns VALUES('nsatlas','programname','','','','Program name within the survey that observed the plate','0');
INSERT DBColumns VALUES('nsatlas','platequality','','','','Quality of plate','0');
INSERT DBColumns VALUES('nsatlas','tile','','','','Tile number for plate containing spectrum','0');
INSERT DBColumns VALUES('nsatlas','plug_ra','deg','','','Right Ascension of spectroscopic fiber (J2000)','0');
INSERT DBColumns VALUES('nsatlas','plug_dec','deg','','','Declination of spectroscopic fiber (J2000)','0');
INSERT DBColumns VALUES('nsatlas','in_dr7_lss','','','','Set to 1 if spectrum is in SDSS Legacy survey large-scale structure sample (based on the NYU Value Added Galaxy Catalog for DR7, specifically lss_geometry.dr72.ply)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_ba','','','','Axis ratio used for elliptical apertures (for this version, same as petro_ba90)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_phi','deg','','','Position angle (east of north) used for elliptical apertures (for this version, same as petro_ba90)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_theta','arcsec','','','Elliptical SDSS-style Petrosian radius (r-band, with correction)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_theta_r_original','arcsec','','','Elliptical SDSS-style Petrosian radius in SDSS r-band, no correction','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_f','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_n','nanomaggies','','','Elliptical SDSS-style Petrosian flux in GALEX near-UV (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_u','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS u-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_g','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS g-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_r','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS r-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_i','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS i-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_z','nanomaggies','','','Elliptical SDSS-style Petrosian flux in SDSS z-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_r_original','arcsec','','','Elliptical SDSS-style Petrosian flux in SDSS r-band, no correction','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_f','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_n','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_u','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_g','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_r','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_i','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_z','0');
INSERT DBColumns VALUES('nsatlas','elpetro_flux_ivar_r_original','nanomaggies^{-2}','','','Inverse variance of elpetro_flux_r_original','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_f','arcsec','','','Elliptical Petrosian 50% light radius in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_n','arcsec','','','Elliptical Petrosian 50% light radius in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_u','arcsec','','','Elliptical Petrosian 50% light radius in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_g','arcsec','','','Elliptical Petrosian 50% light radius in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_r','arcsec','','','Elliptical Petrosian 50% light radius in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_i','arcsec','','','Elliptical Petrosian 50% light radius in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_z','arcsec','','','Elliptical Petrosian 50% light radius in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_f','arcsec','','','Elliptical Petrosian 90% light radius in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th50_r_original','arcsec','','','Elliptical Petrosian 50% light radius in SDSS r-band, no correction','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_n','arcsec','','','Elliptical Petrosian 90% light radius in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_u','arcsec','','','Elliptical Petrosian 90% light radius in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_g','arcsec','','','Elliptical Petrosian 90% light radius in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_r','arcsec','','','Elliptical Petrosian 90% light radius in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_i','arcsec','','','Elliptical Petrosian 90% light radius in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_z','arcsec','','','Elliptical Petrosian 90% light radius in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','elpetro_th90_r_original','arcsec','','','Elliptical Petrosian 90% light radius in SDSS r-band, no correction','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_f','nanomaggies','','','Galactic-extinction corrected AB flux in GALEX far-UV used for K-correction (from elpetro_flux_f)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_n','nanomaggies','','','Galactic-extinction corrected AB flux in GALEX near-UV used for K-correction (from elpetro_flux_n)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_u','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS u-band used for K-correction (from elpetro_flux_u)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_g','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS g-band used for K-correction (from elpetro_flux_g)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_r','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS r-band used for K-correction (from elpetro_flux_r)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_i','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS i-band used for K-correction (from elpetro_flux_i)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_z','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS z-band used for K-correction (from elpetro_flux_z)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_f','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_f','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_n','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_n','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_u','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_u','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_g','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_g','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_r','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_r','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_i','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_i','0');
INSERT DBColumns VALUES('nsatlas','elpetro_nmgy_ivar_z','nanomaggies^{-2}','','','Inverse variance of elpetro_nmgy_z','0');
INSERT DBColumns VALUES('nsatlas','elpetro_ok','','','','For elliptical Petrosian fluxes, 1 if K-correction was performed, 0 if not (should all be 1)','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_f','nanomaggies','','','Reconstructed AB nanomaggies in GALEX far-UV from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_n','nanomaggies','','','Reconstructed AB nanomaggies in GALEX near-UV from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_u','nanomaggies','','','Reconstructed AB nanomaggies in SDSS u-band from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_g','nanomaggies','','','Reconstructed AB nanomaggies in SDSS g-band from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_r','nanomaggies','','','Reconstructed AB nanomaggies in SDSS r-band from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_i','nanomaggies','','','Reconstructed AB nanomaggies in SDSS i-band from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_rnmgy_z','nanomaggies','','','Reconstructed AB nanomaggies in SDSS z-band from K-correction fit, for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_f','mag^{-2}','','','Inverse variance of petro_absmag_f','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_n','mag^{-2}','','','Inverse variance of petro_absmag_n','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_u','mag^{-2}','','','Inverse variance of petro_absmag_u','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_g','mag^{-2}','','','Inverse variance of petro_absmag_g','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_r','mag^{-2}','','','Inverse variance of petro_absmag_r','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_i','mag^{-2}','','','Inverse variance of petro_absmag_i','0');
INSERT DBColumns VALUES('nsatlas','elpetro_amivar_z','mag^{-2}','','','Inverse variance of petro_absmag_z','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_f','mag','','','K-correction value used for absolute magnitude in the GALEX far-UV for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_n','mag','','','K-correction value used for absolute magnitude in the GALEX near-UV for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_u','mag','','','K-correction value used for absolute magnitude in the SDSS u-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_g','mag','','','K-correction value used for absolute magnitude in the SDSS g-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_r','mag','','','K-correction value used for absolute magnitude in the SDSS r-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_i','mag','','','K-correction value used for absolute magnitude in the SDSS i-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcorrect_z','mag','','','K-correction value used for absolute magnitude in the SDSS z-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcoeff_0','','','','Coefficient 0 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcoeff_1','','','','Coefficient 1 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcoeff_2','','','','Coefficient 2 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcoeff_3','','','','Coefficient 3 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_kcoeff_4','','','','Coefficient 4 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mass','solar masses','','','Stellar mass from K-correction fit (use with caution) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_f','solar','','','Mass-to-light ratio derived in K-correction fit for GALEX far-UV for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_n','solar','','','Mass-to-light ratio derived in K-correction fit for GALEX near-UV for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_u','solar','','','Mass-to-light ratio derived in K-correction fit for SDSS u-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_g','solar','','','Mass-to-light ratio derived in K-correction fit for SDSS g-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_r','solar','','','Mass-to-light ratio derived in K-correction fit for SDSS r-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_i','solar','','','Mass-to-light ratio derived in K-correction fit for SDSS i-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mtol_z','solar','','','Mass-to-light ratio derived in K-correction fit for SDSS z-band for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_b300','','','','Star-formation rate b-parameter (current over past average) for last 300 Myrs (from K-correction fit, use with caution) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_b1000','','','','Star-formation rate b-parameter (current over past average) for last 1 Gyrs (from K-correction fit, use with caution) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','elpetro_mets','','','','Metallicity from K-correction fit (use with caution) for elliptical Petrosian fluxes','0');
INSERT DBColumns VALUES('nsatlas','petro_theta','arcsec','','','Azimuthally averaged SDSS-style Petrosian radius (derived from r band)','0');
INSERT DBColumns VALUES('nsatlas','petro_th50','arcsec','','','Azimuthally averaged SDSS-style Petrosian 50% light radius (derived from r band)','0');
INSERT DBColumns VALUES('nsatlas','petro_th90','arcsec','','','Azimuthally averaged SDSS-style Petrosian 90% light radius (derived from r band)','0');
INSERT DBColumns VALUES('nsatlas','petro_ba50','','','','Axis ratio b/a from Stokes parameters at 50% light radius (based on r-band)','0');
INSERT DBColumns VALUES('nsatlas','petro_phi50','deg','','','Angle (E of N) from Stokes parameters at 50% light radius(based on r-band)','0');
INSERT DBColumns VALUES('nsatlas','petro_ba90','','','','Axis ratio b/a from Stokes parameters at 90% light radius (based on r-band)','0');
INSERT DBColumns VALUES('nsatlas','petro_phi90','deg','','','Angle (E of N) from Stokes parameters at 90% light radius(based on r-band)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_f','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_n','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in GALEX far-UV (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_u','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS u-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_g','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS g-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_r','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS r-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_i','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS i-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_z','nanomaggies','','','Azimuthally-averaged SDSS-style Petrosian flux in SDSS z-band (using r-band aperture)','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of petro_flux_f','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of petro_flux_n','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of petro_flux_u','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of petro_flux_g','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of petro_flux_r','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of petro_flux_i','0');
INSERT DBColumns VALUES('nsatlas','petro_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of petro_flux_z','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_f','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_n','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_u','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_g','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_r','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_i','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_z','nanomaggies','','','Flux in 3-arcsec diameter aperture (not apodized) in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of fiber_flux_f','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of fiber_flux_n','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of fiber_flux_u','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of fiber_flux_g','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of fiber_flux_r','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of fiber_flux_i','0');
INSERT DBColumns VALUES('nsatlas','fiber_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of fiber_flux_z','0');
INSERT DBColumns VALUES('nsatlas','sersic_n','','','','Sersic index from two-dimensional, single-component Sersic fit in r-band','0');
INSERT DBColumns VALUES('nsatlas','sersic_ba','','','','Axis ratio b/a from two-dimensional, single-component Sersic fit in r-band','0');
INSERT DBColumns VALUES('nsatlas','sersic_phi','deg','','','Angle (E of N) of major axis in two-dimensional, single-component Sersic fit in r-band','0');
INSERT DBColumns VALUES('nsatlas','sersic_th50','arcsec','','','50% light radius of two-dimensional, single-component Sersic fit to r-band','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_f','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX far-UV (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_n','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in GALEX near-UV (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_u','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS u-band (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_g','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS g-band (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_r','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS r-band (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_i','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS i-band (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_z','nanomaggies','','','Two-dimensional, single-component Sersic fit flux in SDSS z-band (fit using r-band structural parameters)','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_f','nanomaggies^{-2}','','','Inverse variance of sersic_flux_f','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_n','nanomaggies^{-2}','','','Inverse variance of sersic_flux_n','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_u','nanomaggies^{-2}','','','Inverse variance of sersic_flux_u','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_g','nanomaggies^{-2}','','','Inverse variance of sersic_flux_g','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_r','nanomaggies^{-2}','','','Inverse variance of sersic_flux_r','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_i','nanomaggies^{-2}','','','Inverse variance of sersic_flux_i','0');
INSERT DBColumns VALUES('nsatlas','sersic_flux_ivar_z','nanomaggies^{-2}','','','Inverse variance of sersic_flux_z','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_f','nanomaggies','','','Galactic-extinction corrected AB flux in GALEX far-UV used for K-correction (from sersic_flux_f)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_n','nanomaggies','','','Galactic-extinction corrected AB flux in GALEX near-UV used for K-correction (from sersic_flux_n)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_u','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS u-band used for K-correction (from sersic_flux_u)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_g','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS g-band used for K-correction (from sersic_flux_g)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_r','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS r-band used for K-correction (from sersic_flux_r)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_i','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS i-band used for K-correction (from sersic_flux_i)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_z','nanomaggies','','','Galactic-extinction corrected AB flux in SDSS z-band used for K-correction (from sersic_flux_z)','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_f','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_f','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_n','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_n','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_u','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_u','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_g','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_g','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_r','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_r','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_i','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_i','0');
INSERT DBColumns VALUES('nsatlas','sersic_nmgy_ivar_z','nanomaggies^{-2}','','','Inverse variance of sersic_nmgy_z','0');
INSERT DBColumns VALUES('nsatlas','sersic_ok','','','','For Sersic fluxes, 1 if K-correction was performed, 0 if not (should all be 1)','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_f','nanomaggies','','','Reconstructed AB nanomaggies in GALEX far-UV from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_n','nanomaggies','','','Reconstructed AB nanomaggies in GALEX near-UV from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_u','nanomaggies','','','Reconstructed AB nanomaggies in SDSS u-band from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_g','nanomaggies','','','Reconstructed AB nanomaggies in SDSS g-band from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_r','nanomaggies','','','Reconstructed AB nanomaggies in SDSS r-band from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_i','nanomaggies','','','Reconstructed AB nanomaggies in SDSS i-band from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_rnmgy_z','nanomaggies','','','Reconstructed AB nanomaggies in SDSS z-band from K-correction fit, for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_f','mag','','','Absolute magnitude in rest-frame GALEX near-UV, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_n','mag','','','Absolute magnitude in rest-frame GALEX far-UV, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_u','mag','','','Absolute magnitude in rest-frame SDSS u-band, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_g','mag','','','Absolute magnitude in rest-frame SDSS g-band, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_r','mag','','','Absolute magnitude in rest-frame SDSS r-band, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_i','mag','','','Absolute magnitude in rest-frame SDSS i-band, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_absmag_z','mag','','','Absolute magnitude in rest-frame SDSS z-band, from Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_f','mag^{-2}','','','Inverse variance in sersic_absmag_f','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_n','mag^{-2}','','','Inverse variance in sersic_absmag_n','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_u','mag^{-2}','','','Inverse variance in sersic_absmag_u','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_g','mag^{-2}','','','Inverse variance in sersic_absmag_g','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_r','mag^{-2}','','','Inverse variance in sersic_absmag_r','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_i','mag^{-2}','','','Inverse variance in sersic_absmag_i','0');
INSERT DBColumns VALUES('nsatlas','sersic_amivar_z','mag^{-2}','','','Inverse variance in sersic_absmag_z','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_f','mag','','','K-correction value used for absolute magnitude in the GALEX far-UV for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_n','mag','','','K-correction value used for absolute magnitude in the GALEX near-UV for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_u','mag','','','K-correction value used for absolute magnitude in the SDSS u-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_g','mag','','','K-correction value used for absolute magnitude in the SDSS g-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_r','mag','','','K-correction value used for absolute magnitude in the SDSS r-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_i','mag','','','K-correction value used for absolute magnitude in the SDSS i-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcorrect_z','mag','','','K-correction value used for absolute magnitude in the SDSS z-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcoeff_0','','','','Coefficient 0 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcoeff_1','','','','Coefficient 1 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcoeff_2','','','','Coefficient 2 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcoeff_3','','','','Coefficient 3 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_kcoeff_4','','','','Coefficient 4 of templates in K-correction fit (see Blanton &amp;amp; Roweis 2007) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mass','solar masses','','','Stellar mass from K-correction fit (use with caution) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_f','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for GALEX far-UV for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_n','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for GALEX near-UV for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_u','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for SDSS u-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_g','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for SDSS g-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_r','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for SDSS r-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_i','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for SDSS i-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mtol_z','solar mass per solar luminosity','','','Mass-to-light ratio derived in K-correction fit for SDSS z-band for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_b300','','','','Star-formation rate b-parameter (current over past average) for last 300 Myrs (from K-correction fit, use with caution) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_b1000','','','','Star-formation rate b-parameter (current over past average) for last 1 Gyrs (from K-correction fit, use with caution) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','sersic_mets','','','','Metallicity from K-correction fit (use with caution) for Sersic fluxes','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_f','','','','Asymmetry parameter (use with caution) in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_n','','','','Asymmetry parameter (use with caution) in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_u','','','','Asymmetry parameter (use with caution) in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_g','','','','Asymmetry parameter (use with caution) in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_r','','','','Asymmetry parameter (use with caution) in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_i','','','','Asymmetry parameter (use with caution) in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','asymmetry_z','','','','Asymmetry parameter (use with caution) in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','clumpy_f','','','','Clumpiness parameter (use with caution)in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','clumpy_n','','','','Clumpiness parameter (use with caution)in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','clumpy_u','','','','Clumpiness parameter (use with caution)in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','clumpy_g','','','','Clumpiness parameter (use with caution)in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','clumpy_r','','','','Clumpiness parameter (use with caution)in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','clumpy_i','','','','Clumpiness parameter (use with caution)in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','clumpy_z','','','','Clumpiness parameter (use with caution)in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','extinction_f','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','extinction_n','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','extinction_u','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','extinction_g','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','extinction_r','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','extinction_i','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','extinction_z','mag','','','Galactic extinction from Schlegel, Finkbeiner, and Davis (1997), in SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','aid','','','','Child id within parent','0');
INSERT DBColumns VALUES('nsatlas','pid','','','','Parent id within mosaic for this object','0');
INSERT DBColumns VALUES('nsatlas','xcen','','','','X centroid in child atlas image','0');
INSERT DBColumns VALUES('nsatlas','ycen','','','','Y centroid in child atlas image','0');
INSERT DBColumns VALUES('nsatlas','dflags_f','','','','Bitmask flags from photometric measurement for GALEX far-UV','0');
INSERT DBColumns VALUES('nsatlas','dflags_n','','','','Bitmask flags from photometric measurement for GALEX near-UV','0');
INSERT DBColumns VALUES('nsatlas','dflags_u','','','','Bitmask flags from photometric measurement for SDSS u-band','0');
INSERT DBColumns VALUES('nsatlas','dflags_g','','','','Bitmask flags from photometric measurement for SDSS g-band','0');
INSERT DBColumns VALUES('nsatlas','dflags_r','','','','Bitmask flags from photometric measurement for SDSS r-band','0');
INSERT DBColumns VALUES('nsatlas','dflags_i','','','','Bitmask flags from photometric measurement for SDSS i-band','0');
INSERT DBColumns VALUES('nsatlas','dflags_z','','','','Bitmask flags from photometric measurement for SDSS z-band','0');
INSERT DBColumns VALUES('nsatlas','dversion','','','','Version of dimage software used for object detection and initial measurement','0');
INSERT DBColumns VALUES('mangaFirefly','MANGAID','','','','Unique MaNGA identifier.','0');
INSERT DBColumns VALUES('mangaFirefly','PLATEIFU','','','','Unique identifier containing the MaNGA plate and ifu combination.','0');
INSERT DBColumns VALUES('mangaFirefly','PLATE','','','','Plate used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly','IFUDSGN','','','','IFU used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly','OBJRA','','','','Right ascension of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly','OBJDEC','','','','Declination of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly','REDSHIFT','','','','Redshift of the galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly','PHOTOMETRIC_MASS','','','','Photometric Mass of galaxy obtained from SED fitting. In units of log(M/M_odot).','0');
INSERT DBColumns VALUES('mangaFirefly','MANGADRP_VER','','','','Version of MaNGA DRP that produced this data.','0');
INSERT DBColumns VALUES('mangaFirefly','MANGADAP_VER','','','','Version of MaNGA DAP that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly','FIREFLY_VER','','','','Version of FIREFLY that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_1RE','','','','Property at 1Re. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_1RE_ERROR','','','','Error on property at 1Re. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_1RE','','','','Property at 1Re. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_1RE_ERROR','','','','Error on property at 1Re. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_1RE','','','','Property at 1Re. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_1RE_ERROR','','','','Error on property at 1Re. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_1RE','','','','Property at 1Re. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_1RE_ERROR','','','','Error on property at 1Re. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_3ARCSEC','','','','Property within 3arcsec diameter.  Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_3ARCSEC_ERROR','','','','Error on property within 3arcsec. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_3ARCSEC','','','','Property within 3arcsec diameter. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_3ARCSEC_ERROR','','','','Error on property within 3arcsec. Units of log(Age(Gyr)).','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_3ARCSEC','','','','Property within 3arcsec diameter. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_3ARCSEC_ERROR','','','','Error on property within 3arcsec. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_3ARCSEC','','','','Property within 3arcsec diameter. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_3ARCSEC_ERROR','','','','Error on property within 3arcsec. Units of [Z/H].','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_GRADIENT','','','','Gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_GRADIENT_ERROR','','','','Error on gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_ZEROPOINT','','','','Zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_AGE_ZEROPOINT_ERROR','','','','Error on zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_GRADIENT','','','','Gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_GRADIENT_ERROR','','','','Error on gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_ZEROPOINT','','','','Zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_AGE_ZEROPOINT_ERROR','','','','Error on zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_GRADIENT','','','','Gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_GRADIENT_ERROR','','','','Error on gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_ZEROPOINT','','','','Zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','LW_Z_ZEROPOINT_ERROR','','','','Error on zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_GRADIENT','','','','Gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_GRADIENT_ERROR','','','','Error on gradient within 1.5Re of galaxy. Units of dex/Re.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_ZEROPOINT','','','','Zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaFirefly','MW_Z_ZEROPOINT_ERROR','','','','Error on zeropoint of gradient slope.','0');
INSERT DBColumns VALUES('mangaPipe3D','name','--','','','manga-plate-ifudsgn unique name','0');
INSERT DBColumns VALUES('mangaPipe3D','plate','--','','','plate ID of the MaNGA cube','0');
INSERT DBColumns VALUES('mangaPipe3D','ifudsgn','--','','','IFU bundle ID of the MaNGA cube','0');
INSERT DBColumns VALUES('mangaPipe3D','plateifu','--','','','code formed by the plate and ifu names','0');
INSERT DBColumns VALUES('mangaPipe3D','mangaid','--','','','MaNGA ID','0');
INSERT DBColumns VALUES('mangaPipe3D','objra','degree','','','RA of the object','0');
INSERT DBColumns VALUES('mangaPipe3D','objdec','degree','','','DEC of the object','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_Ha','log(Msun/yr)','','','Integrated star-formation rate derived from the integra','0');
INSERT DBColumns VALUES('mangaPipe3D','FoV','--','','','Ratio between the diagonal radius of the cube and Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Re_kpc','kpc','','','derived effective radius in kpc','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_Mass','log(Msun)','','','Error of the integrated stellar mass','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_SFR_Ha','log(Msun/yr)','','','Error of the Integrated star-formation rate derived f','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass','log(Msun)','','','Integrated stellar mass in units of the solar mass in loga','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_ssp','log(Msun/yr)','','','Integrated SFR derived from the SSP analysis t&lt;32Myr','0');
INSERT DBColumns VALUES('mangaPipe3D','log_NII_Ha_cen','--','','','logarithm of the [NII]6583/Halpha line ratio in the central 2.5','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_NII_Ha_cen','--','','','error in the logarithm of the [NII]6583/Halpha line ratio in','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OIII_Hb_cen','--','','','logarithm of the [OIII]5007/Hbeta line ratio in the central 2.','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OIII_Hb_cen','--','','','error in the logarithm of the [OIII]5007/Hbeta line ratio in','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SII_Ha_cen','--','','','logarithm of the [SII]6717+6731/Halpha line ratio in the centra','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_SII_Ha_cen','--','','','error in the logarithm of the [SII]6717/Halpha line ratio in','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OII_Hb_cen','--','','','logarithm of the [OII]3727/Hbeta line ratio in the central 2.5a','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OII_Hb_cen','--','','','error in the logarithm of the [OII]3727/Hbeta line ratio in t','0');
INSERT DBColumns VALUES('mangaPipe3D','EW_Ha_cen','Angstrom','','','EW of Halpha in the central 2.5arcsec/aperture','0');
INSERT DBColumns VALUES('mangaPipe3D','e_EW_Ha_cen','Angstrom','','','error of the EW of Halpha in the central 2.5arcsec/aperture','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_LW_Re_fit','log(yr)','','','Luminosity weighted metallicity of the stellar population','0');
INSERT DBColumns VALUES('mangaPipe3D','e_ZH_LW_Re_fit','log(yr)','','','Error in the luminosity weighted metallicity of the stel','0');
INSERT DBColumns VALUES('mangaPipe3D','alpha_ZH_LW_Re_fit','--','','','slope of the gradient of the LW log-metallicity of the stel','0');
INSERT DBColumns VALUES('mangaPipe3D','e_alpha_ZH_LW_Re_fit','--','','','Error of the slope of the gradient of the LW log-metallic','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_MW_Re_fit','log(yr)','','','Mass weighted metallicity of the stellar population in log','0');
INSERT DBColumns VALUES('mangaPipe3D','e_ZH_MW_Re_fit','log(yr)','','','Error in the Mass weighted metallicity of the stellar po','0');
INSERT DBColumns VALUES('mangaPipe3D','alpha_ZH_MW_Re_fit','--','','','slope of the gradient of the MW log-metallicity of the stel','0');
INSERT DBColumns VALUES('mangaPipe3D','e_alpha_ZH_MW_Re_fit','--','','','Error of the slope of the gradient of the MW log-metallic','0');
INSERT DBColumns VALUES('mangaPipe3D','Age_LW_Re_fit','log(yr)','','','Luminosity weighted age of the stellar population in loga','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Age_LW_Re_fit','log(yr)','','','Error in the luminosity weighted age of the stellar pop','0');
INSERT DBColumns VALUES('mangaPipe3D','alpha_Age_LW_Re_fit','--','','','slope of the gradient of the LW log-age of the stellar pop','0');
INSERT DBColumns VALUES('mangaPipe3D','e_alpha_Age_LW_Re_fit','--','','','Error of the slope of the gradient of the LW log-age of','0');
INSERT DBColumns VALUES('mangaPipe3D','Age_MW_Re_fit','log(yr)','','','Mass weighted age of the stellar population in logarithm','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Age_MW_Re_fit','log(yr)','','','Error in the Mass weighted age of the stellar populatio','0');
INSERT DBColumns VALUES('mangaPipe3D','alpha_Age_MW_Re_fit','--','','','slope of the gradient of the MW log-age of the stellar pop','0');
INSERT DBColumns VALUES('mangaPipe3D','e_alpha_Age_MW_Re_fit','--','','','Error of the slope of the gradient of the MW log-age of','0');
INSERT DBColumns VALUES('mangaPipe3D','Re_arc','arcsec','','','derived effective radius in arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','DL','--','','','adopted luminosity distance in Mpc','0');
INSERT DBColumns VALUES('mangaPipe3D','DA','--','','','adopted angular-diameter distance in Mpc','0');
INSERT DBColumns VALUES('mangaPipe3D','PA','degrees','','','adopted position angle in degrees','0');
INSERT DBColumns VALUES('mangaPipe3D','ellip','--','','','adopted elipticity','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_gas','log(Msun)','','','Integrated gas mass in units of the solar mass in logari','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_sigma_Re','--','','','Velocity/dispersion ratio for the stellar populations within 1.5','0');
INSERT DBColumns VALUES('mangaPipe3D','e_vel_sigma_Re','--','','','error in the velocity/dispersion ratio for the stellar populat','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_SF','log(Msun/yr)','','','Integrated SFR using only the spaxels compatible with SF','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_D_C','log(Msun/yr)','','','Integrated SFR diffuse corrected','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_O3N2_cen','dex','','','Oxygen abundance using the calibrator O3N2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_O3N2_cen','dex','','','Error in Oxygen abundance using the calibrator O3N2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_N2_cen','dex','','','Oxygen abundance using the calibrator N2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_N2_cen','dex','','','Error in Oxygen abundance using the calibrator N2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_ONS_cen','dex','','','Oxygen abundance using the calibrator ONS at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_ONS_cen','dex','','','Error in Oxygen abundance using the calibrator ONS at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_R23_cen','dex','','','Oxygen abundance using the calibrator R23 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_R23_cen','dex','','','Error in Oxygen abundance using the calibrator R23 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_pyqz_cen','dex','','','Oxygen abundance using the calibrator pyqz at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_pyqz_cen','dex','','','Error in Oxygen abundance using the calibrator pyqz at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_t2_cen','dex','','','Oxygen abundance using the calibrator t2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_t2_cen','dex','','','Error in Oxygen abundance using the calibrator t2 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_M08_cen','dex','','','Oxygen abundance using the calibrator M08 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_M08_cen','dex','','','Error in Oxygen abundance using the calibrator M08 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_T04_cen','dex','','','Oxygen abundance using the calibrator T04 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_T04_cen','dex','','','Error in Oxygen abundance using the calibrator T04 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_dop_cen','dex','','','Oxygen abundance using the calibrator dop at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_dop_cen','dex','','','Error in Oxygen abundance using the calibrator dop at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_O3N2_EPM09_cen','dex','','','Oxygen abundance using the calibrator O3N2_EPM09 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_O3N2_EPM09_cen','dex','','','Error in Oxygen abundance using the calibrator O3N2_EPM09 at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OI_Ha_cen','--','','','logarithm of the [OI]6301/Ha within a central aperture of 2arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OI_Ha_cen','--','','','error in the logarithm of the [OI]6301/Hbeta within a central aperture of 2arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','Ha_Hb_cen','--','','','Ratio between the flux of Halpha and Hbeta within a central aperture of 2arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Ha_Hb_cen','--','','','error of Ha_Hb_cen','0');
INSERT DBColumns VALUES('mangaPipe3D','log_NII_Ha_Re','--','','','logarithm of the [NII]6583/Halpha line ratio at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_NII_Ha_Re','--','','','error in the logarithm of the [NII]6583/Halpha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OIII_Hb_Re','--','','','logarithm of the [OIII]5007/Hbeta line ratio at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OIII_Hb_Re','--','','','error in the logarithm of the [OIII]5007/Hbeta at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SII_Ha_Re','--','','','logarithm of the [SII]6717+6731/Halpha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_SII_Ha_Re','--','','','error in the logarithm of the [SII]6717/Halpha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OII_Hb_Re','--','','','logarithm of the [OII]3727/Hbeta at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OII_Hb_Re','--','','','error in the logarithm of the [OII]3727/Hbeta at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OI_Ha_Re','--','','','logarithm of the [OI]6301/Ha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OI_Ha_Re','--','','','error in the logarithm of the [OI]6301/Hbeta at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','EW_Ha_Re','Angstrom','','','EW of Halpha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_EW_Ha_Re','Angstrom','','','error of the EW of Halpha at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Ha_Hb_Re','--','','','Ratio between the flux of Halpha and Hbeta within at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Ha_Hb_Re','--','','','error of Ha_Hb_Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_NII_Ha_ALL','--','','','logarithm of the [NII]6583/Halpha line ratio within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_NII_Ha_ALL','--','','','error in the logarithm of the [NII]6583/Halpha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OIII_Hb_ALL','--','','','logarithm of the [OIII]5007/Hbeta line ratio within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OIII_Hb_ALL','--','','','error in the logarithm of the [OIII]5007/Hbeta within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SII_Ha_ALL','--','','','logarithm of the [SII]6717+6731/Halpha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_SII_Ha_ALL','--','','','error in the logarithm of the [SII]6717/Halpha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OII_Hb_ALL','--','','','logarithm of the [OII]3727/Hbeta within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OII_Hb_ALL','--','','','error in the logarithm of the [OII]3727/Hbeta within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','log_OI_Ha_ALL','--','','','logarithm of the [OI]6301/Ha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_OI_Ha_ALL','--','','','error in the logarithm of the [OI]6301/Hbeta within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','EW_Ha_ALL','Angstrom','','','EW of Halpha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_EW_Ha_ALL','Angstrom','','','error of the EW of Halpha within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','Ha_Hb_ALL','--','','','Ratio between the flux of Halpha and Hbeta within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','Sigma_Mass_cen','log(Msun/pc^2)','','','Stellar Mass surface density in the central 2arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Sigma_Mass_cen','log(Msun/pc^2)','','','error in Stellar Mass density in the central 2arcsec','0');
INSERT DBColumns VALUES('mangaPipe3D','Sigma_Mass_Re','log(Msun/pc^2)','','','Stellar Mass surface density at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Sigma_Mass_Re','log(Msun/pc^2)','','','error in Stellar Mass density at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Sigma_Mass_ALL','log(Msun/pc^2)','','','Average Stellar Mass surface density within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Sigma_Mass_ALL','log(Msun/pc^2)','','','error in the Average Stellar Mass surface density within the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','T30','Gyr','','','Look Back time at which the galaxy has formed 30% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T30','dex','','','Stellar metallicity at T30   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T30','dex','','','Stellar metallicity at Re at T30   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T30','dex','','','slope of the ZH gradient at time T30   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T40','Gyr','','','Look Back time at which the galaxy has formed 40% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T40','dex','','','Stellar metallicity at T40   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T40','dex','','','Stellar metallicity at Re at T40   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T40','dex','','','slope of the ZH gradient at time T40   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T50','Gyr','','','Look Back time at which the galaxy has formed 50% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T50','dex','','','Stellar metallicity at T50   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T50','dex','','','Stellar metallicity at Re at T50   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T50','dex','','','slope of the ZH gradient at time T50   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T60','Gyr','','','Look Back time at which the galaxy has formed 60% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T60','dex','','','Stellar metallicity at T60   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T60','dex','','','Stellar metallicity at Re at T60   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T60','dex','','','slope of the ZH gradient at time T60   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T70','Gyr','','','Look Back time at which the galaxy has formed 70% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T70','dex','','','Stellar metallicity at T70   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T70','dex','','','Stellar metallicity at Re at T70   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T70','dex','','','slope of the ZH gradient at time T70   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T80','Gyr','','','Look Back time at which the galaxy has formed 80% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T80','dex','','','Stellar metallicity at T80   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T80','dex','','','Stellar metallicity at Re at T80   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T80','dex','','','slope of the ZH gradient at time T80   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T90','Gyr','','','Look Back time at which the galaxy has formed 90% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T90','dex','','','Stellar metallicity at T90   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T90','dex','','','Stellar metallicity at Re at T90   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T90','dex','','','slope of the ZH gradient at time T90   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T95','Gyr','','','Look Back time at which the galaxy has formed 95% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T95','dex','','','Stellar metallicity at T95   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T95','dex','','','Stellar metallicity at Re at T95   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T95','dex','','','slope of the ZH gradient at time T95   time','0');
INSERT DBColumns VALUES('mangaPipe3D','T99','Gyr','','','Look Back time at which the galaxy has formed 99% of its mass','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_T99','dex','','','Stellar metallicity at T99   time','0');
INSERT DBColumns VALUES('mangaPipe3D','ZH_Re_T99','dex','','','Stellar metallicity at Re at T99   time','0');
INSERT DBColumns VALUES('mangaPipe3D','a_ZH_T99','dex','','','slope of the ZH gradient at time T99   time','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_gas_Av_gas_OH','dex','','','Oxygen abundance using the calibrator log_Mass_gas_Av_gas_OH at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_gas_Av_ssp_OH','dex','','','Oxygen abundance using the calibrator log_Mass_gas_Av_ssp_OH at the central region','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_ssp_2','km/s','','','stellar velocity at 2Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_vel_ssp_2','km/s','','','error in vel_ssp_2','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_Ha_2','km/s','','','Ha velocity at 2Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_vel_Ha_2','km/s','','','error in vel_Ha_2','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_ssp_1','km/s','','','stellar velocity at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_vel_ssp_1','km/s','','','error of vel_ssp_1','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_Ha_1','km/s','','','Ha velocity at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_vel_Ha_1','km/s','','','error of e_vel_Ha_1','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_ssp_100Myr','log(Msun/yr)','','','Integrated SFR derived from the SSP analysis t&lt;100Myr','0');
INSERT DBColumns VALUES('mangaPipe3D','log_SFR_ssp_10Myr','log(Msun/yr)','','','Integrated SFR derived from the SSP analysis t&lt;10Myr','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_disp_Ha_cen','km/s','','','Ha velocity dispersion at the central regions','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_disp_ssp_cen','km/s','','','Stellar velocity dispersion at the central regions','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_disp_Ha_1Re','km/s','','','Ha velocity dispersion at 1 Re','0');
INSERT DBColumns VALUES('mangaPipe3D','vel_disp_ssp_1Re','km/s','','','Stellar velocity at 1 Re','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_in_Re','log(Msun)','','','Integrated stellar mass within one optical Re','0');
INSERT DBColumns VALUES('mangaPipe3D','ML_int','--','','','V-band mass-to-light ratio from integrated quantities','0');
INSERT DBColumns VALUES('mangaPipe3D','ML_avg','--','','','V-band mass-to-light ratio average across the FoV','0');
INSERT DBColumns VALUES('mangaPipe3D','F_Ha_cen','10^-16 erg/cm/s','','','Flux intensity of Halpha in the central 2.5arcsec/aperture','0');
INSERT DBColumns VALUES('mangaPipe3D','e_F_Ha_cen','10^-16 erg/cm/s','','','error of F_Ha_cen','0');
INSERT DBColumns VALUES('mangaPipe3D','R50_kpc_V','kpc','','','R50 in the V-band within the FoV of the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','e_R50_kpc_V','kpc','','','error of R50_kpc_V','0');
INSERT DBColumns VALUES('mangaPipe3D','R50_kpc_Mass','kpc','','','R50 in Mass within the FoV of the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','e_R50_kpc_Mass','kpc','','','error of R50_kpc_Mass','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_corr_in_R50_V','log(Msun)','','','Integrated stellar mass within one R50 in the V-band','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_Mass_corr_in_R50_V','log(Msun)','','','error of log_Mass_corr_in_R50_V','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_gas_Av_gas_log_log','--','','','--','0');
INSERT DBColumns VALUES('mangaPipe3D','Av_gas_Re','mag','','','Dust attenuation in the V-band derived from the Ha/Hb line ratios','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Av_gas_Re','mag','','','Error of the dust attenuation in the V-band derived from the Ha','0');
INSERT DBColumns VALUES('mangaPipe3D','Av_ssp_Re','mag','','','Dust attenuation in the V-band derived from the analysis of the s','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Av_ssp_Re','mag','','','Error of the dust attenuation in the V-band derived from the an','0');
INSERT DBColumns VALUES('mangaPipe3D','Lambda_Re','--','','','Specific angular momentum (lambda parameter) for the stellar popula','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Lambda_Re','--','','','error in the specific angular momentum (lambda parameter) for the','0');
INSERT DBColumns VALUES('mangaPipe3D','nsa_redshift','--','','','--','0');
INSERT DBColumns VALUES('mangaPipe3D','nsa_mstar','--','','','--','0');
INSERT DBColumns VALUES('mangaPipe3D','nsa_inclination','--','','','--','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OII3726_03_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OII]3726.03 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OII3726_03_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OII]3726.03 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OII3726_03_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OII]3726.03 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OII3726_03_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OII]3726.03 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OII3728_82_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OII]3728.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OII3728_82_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OII]3728.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OII3728_82_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OII]3728.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OII3728_82_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OII]3728.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3734_37_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3734.37 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3734_37_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3734.37 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3734_37_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3734.37 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3734_37_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3734.37 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3797_9_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3797.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3797_9_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3797.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3797_9_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3797.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3797_9_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3797.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI3888_65_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI3888.65 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI3888_65_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI3888.65 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI3888_65_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI3888.65 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI3888_65_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI3888.65 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3889_05_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3889.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3889_05_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3889.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI3889_05_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI3889.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI3889_05_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI3889.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI3964_73_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI3964.73 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI3964_73_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI3964.73 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI3964_73_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI3964.73 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI3964_73_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI3964.73 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NeIII3967_46_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NeIII]3967.46 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NeIII3967_46_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NeIII]3967.46 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NeIII3967_46_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NeIII]3967.46 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NeIII3967_46_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NeIII]3967.46 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_CaII3968_47_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line CaII3968.47 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_CaII3968_47_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line CaII3968.47 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_CaII3968_47_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line CaII3968.47 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_CaII3968_47_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line CaII3968.47 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hepsilon3970_07_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hepsilon3970.07 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hepsilon3970_07_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hepsilon3970.07 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hepsilon3970_07_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hepsilon3970.07 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hepsilon3970_07_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hepsilon3970.07 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hdelta4101_77_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hdelta4101.77 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hdelta4101_77_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hdelta4101.77 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hdelta4101_77_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hdelta4101.77 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hdelta4101_77_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hdelta4101.77 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hgamma4340_49_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hgamma4340.49 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hgamma4340_49_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hgamma4340.49 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hgamma4340_49_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hgamma4340.49 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hgamma4340_49_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hgamma4340.49 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hbeta4861_36_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hbeta4861.36 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hbeta4861_36_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hbeta4861.36 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Hbeta4861_36_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Hbeta4861.36 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Hbeta4861_36_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Hbeta4861.36 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OIII4958_91_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OIII]4958.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OIII4958_91_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OIII]4958.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OIII4958_91_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OIII]4958.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OIII4958_91_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OIII]4958.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OIII5006_84_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OIII]5006.84 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OIII5006_84_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OIII]5006.84 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OIII5006_84_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OIII]5006.84 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OIII5006_84_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OIII]5006.84 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI5015_68_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI5015.68 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI5015_68_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI5015.68 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI5015_68_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI5015.68 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI5015_68_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI5015.68 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NI5197_9_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NI]5197.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NI5197_9_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NI]5197.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NI5197_9_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NI]5197.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NI5197_9_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NI]5197.9 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NI5200_26_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NI]5200.26 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NI5200_26_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NI]5200.26 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NI5200_26_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NI]5200.26 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NI5200_26_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NI]5200.26 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI5876_0_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI5876.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI5876_0_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI5876.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HeI5876_0_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HeI5876.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HeI5876_0_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HeI5876.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NaI5889_95_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line NaI5889.95 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NaI5889_95_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line NaI5889.95 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NaI5889_95_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line NaI5889.95 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NaI5889_95_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line NaI5889.95 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NaI5895_92_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line NaI5895.92 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NaI5895_92_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line NaI5895.92 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NaI5895_92_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line NaI5895.92 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NaI5895_92_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line NaI5895.92 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OI6300_3_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OI]6300.3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OI6300_3_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OI]6300.3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_OI6300_3_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [OI]6300.3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_OI6300_3_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [OI]6300.3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NII6548_05_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NII]6548.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NII6548_05_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NII]6548.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NII6548_05_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NII]6548.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NII6548_05_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NII]6548.05 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Halpha6562_85_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Halpha6562.85 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Halpha6562_85_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Halpha6562.85 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_Halpha6562_85_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line Halpha6562.85 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_Halpha6562_85_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line Halpha6562.85 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NII6583_45_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NII]6583.45 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NII6583_45_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NII]6583.45 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_NII6583_45_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [NII]6583.45 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_NII6583_45_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [NII]6583.45 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SII6716_44_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SII]6716.44 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SII6716_44_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SII]6716.44 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SII6716_44_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SII]6716.44 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SII6716_44_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SII]6716.44 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SII6730_82_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SII]6730.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SII6730_82_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SII]6730.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SII6730_82_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SII]6730.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SII6730_82_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SII]6730.82 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_ArIII7135_8_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [ArIII]7135.8 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_ArIII7135_8_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [ArIII]7135.8 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_ArIII7135_8_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [ArIII]7135.8 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_ArIII7135_8_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [ArIII]7135.8 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI9014_91_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI9014.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI9014_91_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI9014.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_HI9014_91_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line HI9014.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_HI9014_91_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line HI9014.91 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SIII9069_0_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SIII]9069.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SIII9069_0_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SIII]9069.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SIII9069_0_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SIII]9069.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SIII9069_0_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SIII]9069.0 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_FeII9470_93_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [FeII]9470.93 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_FeII9470_93_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [FeII]9470.93 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_FeII9470_93_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [FeII]9470.93 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_FeII9470_93_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [FeII]9470.93 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SIII9531_1_Re_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SIII]9531.1 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SIII9531_1_Re_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SIII]9531.1 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','flux_SIII9531_1_alpha_fit','10^-16 erg/s/cm^2','','','Flux intensity of line [SIII]9531.1 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_flux_SIII9531_1_alpha_fit','10^-16 erg/s/cm^2','','','Error in the flux intensity of line [SIII]9531.1 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Mar13_N2_Re_fit','dex','','','Oxygen abundance using the calibrator Mar13_N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Mar13_N2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Mar13_N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Mar13_N2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Mar13_N2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Mar13_N2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Mar13_N2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Mar13_O3N2_Re_fit','dex','','','Oxygen abundance using the calibrator Mar13_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Mar13_O3N2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Mar13_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Mar13_O3N2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Mar13_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Mar13_O3N2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Mar13_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_T04_Re_fit','dex','','','Oxygen abundance using the calibrator T04 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_T04_Re_fit','dex','','','Error in Oxygen abundance using the calibrator T04 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_T04_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator T04','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_T04_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator T04','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_N2_lin_Re_fit','dex','','','Oxygen abundance using the calibrator Pet04_N2_lin at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_N2_lin_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pet04_N2_lin at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_N2_lin_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pet04_N2_lin','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_N2_lin_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pet04_N2_lin','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_N2_poly_Re_fit','dex','','','Oxygen abundance using the calibrator Pet04_N2_poly at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_N2_poly_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pet04_N2_poly at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_N2_poly_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pet04_N2_poly','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_N2_poly_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pet04_N2_poly','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_O3N2_Re_fit','dex','','','Oxygen abundance using the calibrator Pet04_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_O3N2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pet04_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pet04_O3N2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pet04_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pet04_O3N2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pet04_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Kew02_N2O2_Re_fit','dex','','','Oxygen abundance using the calibrator Kew02_N2O2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Kew02_N2O2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Kew02_N2O2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Kew02_N2O2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Kew02_N2O2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Kew02_N2O2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Kew02_N2O2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil10_ONS_Re_fit','dex','','','Oxygen abundance using the calibrator Pil10_ONS at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil10_ONS_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pil10_ONS at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil10_ONS_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pil10_ONS','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil10_ONS_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pil10_ONS','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil10_ON_Re_fit','dex','','','Oxygen abundance using the calibrator Pil10_ON at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil10_ON_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pil10_ON at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil10_ON_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pil10_ON','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil10_ON_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pil10_ON','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil11_NS_Re_fit','dex','','','Oxygen abundance using the calibrator Pil11_NS at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil11_NS_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pil11_NS at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil11_NS_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pil11_NS','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil11_NS_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pil11_NS','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_RS32_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_RS32 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_RS32_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_RS32 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_RS32_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_RS32','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_RS32_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_RS32','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R3_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_R3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R3_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_R3 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R3_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_R3','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R3_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_R3','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3O2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_O3O2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3O2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_O3O2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3O2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_O3O2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3O2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_O3O2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_S2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_S2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_S2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_S2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_S2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_S2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_S2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_S2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_R2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_R2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_R2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_R2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_N2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_N2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_N2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_N2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_N2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_N2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R23_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_R23 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R23_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_R23 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_R23_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_R23','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_R23_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_R23','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3N2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3N2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_O3N2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3N2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3N2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_O3N2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3S2_Re_fit','dex','','','Oxygen abundance using the calibrator Cur20_O3S2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3S2_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Cur20_O3S2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Cur20_O3S2_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Cur20_O3S2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Cur20_O3S2_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Cur20_O3S2','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_KK04_Re_fit','dex','','','Oxygen abundance using the calibrator KK04 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_KK04_Re_fit','dex','','','Error in Oxygen abundance using the calibrator KK04 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_KK04_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator KK04','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_KK04_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator KK04','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil16_R_Re_fit','dex','','','Oxygen abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil16_R_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil16_R_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil16_R_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil16_S_Re_fit','dex','','','Oxygen abundance using the calibrator Pil16_S at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil16_S_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Pil16_S at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Pil16_S_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Pil16_S','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Pil16_S_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Pil16_S','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Ho_Re_fit','dex','','','Oxygen abundance using the calibrator Ho at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Ho_Re_fit','dex','','','Error in Oxygen abundance using the calibrator Ho at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','OH_Ho_alpha_fit','dex','','','Slope of the O/H gradient using the calibrator Ho','0');
INSERT DBColumns VALUES('mangaPipe3D','e_OH_Ho_alpha_fit','dex','','','Error in the slope of the O/H gradient using the calibrator Ho','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Dors_O32_Re_fit','dex','','','log(U)','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Dors_O32_Re_fit','dex','','','Error in log(U) using the calibrator Dors_O32 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Dors_O32_alpha_fit','dex','','','Slope of the log(U) gradient using the calibrator Dors_O32','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Dors_O32_alpha_fit','dex','','','Error in the slope of the log(U) gradient using the calibrator Dors_O32','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Dors_S_Re_fit','dex','','','log(U)','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Dors_S_Re_fit','dex','','','Error in log(U) using the calibrator Dors_S at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Dors_S_alpha_fit','dex','','','Slope of the log(U) gradient using the calibrator Dors_S','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Dors_S_alpha_fit','dex','','','Error in the slope of the log(U) gradient using the calibrator Dors_S','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Mor16_O23_fs_Re_fit','dex','','','log(U)','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Mor16_O23_fs_Re_fit','dex','','','Error in log(U) using the calibrator Mor16_O23_fs at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Mor16_O23_fs_alpha_fit','dex','','','Slope of the log(U) gradient using the calibrator Mor16_O23_fs','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Mor16_O23_fs_alpha_fit','dex','','','Error in the slope of the log(U) gradient using the calibrator Mor16_O23_fs','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Mor16_O23_ts_Re_fit','dex','','','log(U)','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Mor16_O23_ts_Re_fit','dex','','','Error in log(U) using the calibrator Mor16_O23_ts at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','U_Mor16_O23_ts_alpha_fit','dex','','','Slope of the log(U) gradient using the calibrator Mor16_O23_ts','0');
INSERT DBColumns VALUES('mangaPipe3D','e_U_Mor16_O23_ts_alpha_fit','dex','','','Error in the slope of the log(U) gradient using the calibrator Mor16_O23_ts','0');
INSERT DBColumns VALUES('mangaPipe3D','NH_Pil16_R_Re_fit','dex','','','Nitrogen abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NH_Pil16_R_Re_fit','dex','','','Error in Nitrogen abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','NH_Pil16_R_alpha_fit','dex','','','Slope of the N/H gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NH_Pil16_R_alpha_fit','dex','','','Error in the slope of the N/H gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_R_Re_fit','dex','','','N/O abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_R_Re_fit','dex','','','Error in N/O abundance using the calibrator Pil16_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_R_alpha_fit','dex','','','Slope of the N/O gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_R_alpha_fit','dex','','','Error in the slope of the N/O gradient using the calibrator Pil16_R','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_Ho_R_Re_fit','dex','','','N/O abundance using the calibrator Pil16_Ho_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_Ho_R_Re_fit','dex','','','Error in N/O abundance using the calibrator Pil16_Ho_R at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_Ho_R_alpha_fit','dex','','','Slope of the N/O gradient using the calibrator Pil16_Ho_R','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_Ho_R_alpha_fit','dex','','','Error in the slope of the N/O gradient using the calibrator Pil16_Ho_R','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_N2_R2_Re_fit','dex','','','N/O abundance using the calibrator Pil16_N2_R2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_N2_R2_Re_fit','dex','','','Error in N/O abundance using the calibrator Pil16_N2_R2 at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','NO_Pil16_N2_R2_alpha_fit','dex','','','Slope of the N/O gradient using the calibrator Pil16_N2_R2','0');
INSERT DBColumns VALUES('mangaPipe3D','e_NO_Pil16_N2_R2_alpha_fit','dex','','','Error in the slope of the N/O gradient using the calibrator Pil16_N2_R2','0');
INSERT DBColumns VALUES('mangaPipe3D','Ne_Oster_S_Re_fit','dex','','','n_e','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Ne_Oster_S_Re_fit','dex','','','Error in n_e using the Oster_S estimator at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Ne_Oster_S_alpha_fit','dex','','','Slope of the n_e gradient using the Oster_S estimator','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Ne_Oster_S_alpha_fit','dex','','','Error in the slope of n_e gradient using the Oster_S estimator','0');
INSERT DBColumns VALUES('mangaPipe3D','Hd_Re_fit','Angstrom','','','Value of the Hd stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hd_Re_fit','Angstrom','','','Error of the Hd stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Hd_alpha_fit','--','','','Slope of the gradient of the Hd index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hd_alpha_fit','--','','','Error in the slope of the gradient of the Hd index','0');
INSERT DBColumns VALUES('mangaPipe3D','Hb_Re_fit','Angstrom','','','Value of the Hb stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hb_Re_fit','Angstrom','','','Error of the Hb stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Hb_alpha_fit','--','','','Slope of the gradient of the Hb index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hb_alpha_fit','--','','','Error in the slope of the gradient of the Hb index','0');
INSERT DBColumns VALUES('mangaPipe3D','Mgb_Re_fit','Angstrom','','','Value of the Mgb stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Mgb_Re_fit','Angstrom','','','Error of the Mgb stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Mgb_alpha_fit','--','','','Slope of the gradient of the Mgb index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Mgb_alpha_fit','--','','','Error in the slope of the gradient of the Mgb index','0');
INSERT DBColumns VALUES('mangaPipe3D','Fe5270_Re_fit','Angstrom','','','Value of the Fe5270 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Fe5270_Re_fit','Angstrom','','','Error of the Fe5270 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Fe5270_alpha_fit','--','','','Slope of the gradient of the Fe5270 index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Fe5270_alpha_fit','--','','','Error in the slope of the gradient of the Fe5270 index','0');
INSERT DBColumns VALUES('mangaPipe3D','Fe5335_Re_fit','Angstrom','','','Value of the Fe5335 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Fe5335_Re_fit','Angstrom','','','Error of the Fe5335 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Fe5335_alpha_fit','--','','','Slope of the gradient of the Fe5335 index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Fe5335_alpha_fit','--','','','Error in the slope of the gradient of the Fe5335 index','0');
INSERT DBColumns VALUES('mangaPipe3D','D4000_Re_fit1','--','','','Value of the D40001 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_D4000_Re_fit','--','','','Error of the D4000 stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','D4000_alpha_fit','--','','','Slope of the gradient of the D4000 index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_D4000_alpha_fit','--','','','Error in the slope of the gradient of the D4000 index','0');
INSERT DBColumns VALUES('mangaPipe3D','Hdmod_Re_fit','Angstrom','','','Value of the Hdmod stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hdmod_Re_fit','Angstrom','','','Error of the Hdmod stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Hdmod_alpha_fit','--','','','Slope of the gradient of the Hdmod index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hdmod_alpha_fit','--','','','Error in the slope of the gradient of the Hdmod index','0');
INSERT DBColumns VALUES('mangaPipe3D','Hg_Re_fit','Angstrom','','','Value of the Hg stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hg_Re_fit','Angstrom','','','Error of the Hg stellar index at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','Hg_alpha_fit','--','','','Slope of the gradient of the Hg index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_Hg_alpha_fit','--','','','Error in the slope of the gradient of the Hg index','0');
INSERT DBColumns VALUES('mangaPipe3D','u_band_mag','mag','','','u-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','u_band_mag_error','mag','','','error in  u-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','u_band_abs_mag','mag','','','u-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','u_band_abs_mag_error','mag','','','error in u-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','g_band_mag','mag','','','g-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','g_band_mag_error','mag','','','error in g-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','g_band_abs_mag','mag','','','g-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','g_band_abs_mag_error','mag','','','error in g-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','r_band_mag','mag','','','r-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','r_band_mag_error','mag','','','error in r-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','r_band_abs_mag','mag','','','r-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','r_band_abs_mag_error','mag','','','error in r-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','i_band_mag','mag','','','i-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','i_band_mag_error','mag','','','error in i-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','i_band_abs_mag','mag','','','i-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','i_band_abs_mag_error','mag','','','error in i-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','B_band_mag','mag','','','B-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','B_band_mag_error','mag','','','error in B-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','B_band_abs_mag','mag','','','B-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','B_band_abs_mag_error','mag','','','error in B-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_mag','mag','','','V-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_mag_error','mag','','','error in V-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_abs_mag','mag','','','V-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_abs_mag_error','mag','','','error in V-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','RJ_band_mag','mag','','','R-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','RJ_band_mag_error','mag','','','error R-band magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','RJ_band_abs_mag','mag','','','R-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','RJ_band_abs_mag_error','mag','','','error in R-band abs. magnitude from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','R50','arcsec','','','g-band R50 derived from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','error_R50','arcsec','','','error in g-band R50 derived from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','R90','arcsec','','','g-band R90 derived from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','error_R90','arcsec','','','error in g-band R90 derived from the cube','0');
INSERT DBColumns VALUES('mangaPipe3D','C','--','','','R90/R50 Concentration index','0');
INSERT DBColumns VALUES('mangaPipe3D','e_C','--','','','error in concentration index','0');
INSERT DBColumns VALUES('mangaPipe3D','B_V_color','mag','','','B-V color','0');
INSERT DBColumns VALUES('mangaPipe3D','error_B_V_color','mag','','','error in the B-V color','0');
INSERT DBColumns VALUES('mangaPipe3D','B_R_color','mag','','','B-R color','0');
INSERT DBColumns VALUES('mangaPipe3D','error_B_R_color','mag','','','error in the B-R color','0');
INSERT DBColumns VALUES('mangaPipe3D','log_Mass_phot','log(Msun)','','','stellar masses derived from photometric','0');
INSERT DBColumns VALUES('mangaPipe3D','e_log_Mass_phot','dex','','','error in the stellar masses derived from photometry','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_SB_at_Re','mag/arcsec^2','','','V-band surface brightness at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','error_V_band_SB_at_Re','mag/arcsec^2','','','error in the V-band SB at 1Re','0');
INSERT DBColumns VALUES('mangaPipe3D','V_band_SB_at_R_50','mag/arcsec^2','','','V-band surface brightness at R50','0');
INSERT DBColumns VALUES('mangaPipe3D','error_V_band_SB_at_R_50','mag/arcsec^2','','','error in V-band surface brightness at R50','0');
INSERT DBColumns VALUES('mangaPipe3D','nsa_sersic_n_morph','--','','','NSA sersic index','0');
INSERT DBColumns VALUES('mangaPipe3D','u_g_color','mag','','','u-g NSA color','0');
INSERT DBColumns VALUES('mangaPipe3D','g_r_color','mag','','','g-r NSA color','0');
INSERT DBColumns VALUES('mangaPipe3D','r_i_color','mag','','','r-i NSA color','0');
INSERT DBColumns VALUES('mangaPipe3D','i_z_color','mag','','','i-z NSA color','0');
INSERT DBColumns VALUES('mangaPipe3D','P_CD','--','','','Probability of being a CD galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_E','--','','','Probability of being a E galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_S0','--','','','Probability of being a S0 galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sa','--','','','Probability of being a Sa galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sab','--','','','Probability of being a Sab galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sb','--','','','Probability of being a Sb galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sbc','--','','','Probability of being a Sbc galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sc','--','','','Probability of being a Sc galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Scd','--','','','Probability of being a Scd galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sd','--','','','Probability of being a Sd galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sdm','--','','','Probability of being a Sdm galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Sm','--','','','Probability of being a Sm galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','P_Irr','--','','','Probability of being a Irr galaxy','0');
INSERT DBColumns VALUES('mangaPipe3D','best_type_n','--','','','Best morphologica type index based on a NN analysis','0');
INSERT DBColumns VALUES('mangaPipe3D','best_type','--','','','Morphological Type derived by the NN analysis','0');
INSERT DBColumns VALUES('mangaPipe3D','nsa_nsaid','--','','','NSA ID','0');
INSERT DBColumns VALUES('mangaPipe3D','Vmax_w','Mpc^-3 dex^-1','','','Weight for the volume correction in volume','0');
INSERT DBColumns VALUES('mangaPipe3D','Num_w','--','','','Weight of the volume correction in number','0');
INSERT DBColumns VALUES('mangaPipe3D','QCFLAG','--','','','QC flat 0=good 2=bad &gt;2 warning','0');
INSERT DBColumns VALUES('mangaDAPall','plate','','','','Plate number','0');
INSERT DBColumns VALUES('mangaDAPall','ifudesign','','','','IFU design number','0');
INSERT DBColumns VALUES('mangaDAPall','plateifu','','','','String combination of PLATE-IFU to ease searching','0');
INSERT DBColumns VALUES('mangaDAPall','mangaid','','','','MaNGA ID string','0');
INSERT DBColumns VALUES('mangaDAPall','drpallindx','','','','Row index of the observation in the DRPall file','0');
INSERT DBColumns VALUES('mangaDAPall','mode','','','','3D mode of the DRP file (CUBE or RSS)','0');
INSERT DBColumns VALUES('mangaDAPall','daptype','','','','Keyword of the analysis approach used (e.g., HYB10-GAU-MILESHC)','0');
INSERT DBColumns VALUES('mangaDAPall','dapdone','','','','Flag that MAPS file successfully produced','0');
INSERT DBColumns VALUES('mangaDAPall','objra','deg','','','RA of the galaxy center','0');
INSERT DBColumns VALUES('mangaDAPall','objdec','deg','','','Declination of the galaxy center','0');
INSERT DBColumns VALUES('mangaDAPall','ifura','deg','','','RA of the IFU pointing center (generally the same as OBJRA)','0');
INSERT DBColumns VALUES('mangaDAPall','ifudec','deg','','','Declination of the IFU pointing center (generally the same as OBJDEC)','0');
INSERT DBColumns VALUES('mangaDAPall','mngtarg1','','','','Main survey targeting bit','0');
INSERT DBColumns VALUES('mangaDAPall','mngtarg2','','','','Non-galaxy targeting bit','0');
INSERT DBColumns VALUES('mangaDAPall','mngtarg3','','','','Ancillary targeting bit','0');
INSERT DBColumns VALUES('mangaDAPall','z','','','','Redshift used to set initial guess velocity (typically identical to NSA_Z)','0');
INSERT DBColumns VALUES('mangaDAPall','ldist_z','h^{-1} Mpc','','','Luminosity distance based on Z and a standard cosmology (h=1; Ω_{M}=0.3; Ω_{Λ}=0.7)','0');
INSERT DBColumns VALUES('mangaDAPall','adist_z','h^{-1} Mpc','','','Angular-diameter distance based on Z and a standard cosmology (h=1; Ω_{M}=0.3; Ω_{Λ}=0.7)','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_z','','','','Redshift from the NASA-Sloan Atlas','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_zdist','','','','NSA distance estimate using pecular velocity model of Willick et al. (1997); multiply by c/H0 for Mpc.','0');
INSERT DBColumns VALUES('mangaDAPall','ldist_nsa_z','h^{-1} Mpc','','','Luminosity distance based on NSA_Z and a standard cosmology (h=1; Ω_{M}=0.3; Ω_{Λ}=0.7)','0');
INSERT DBColumns VALUES('mangaDAPall','adist_nsa_z','h^{-1} Mpc','','','Angular-diameter distance based on NSA_Z and a standard cosmology (h=1; Ω_{M}=0.3; Ω_{Λ}=0.7)','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_elpetro_ba','','','','NSA isophotal axial ratio from elliptical Petrosian analysis','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_elpetro_phi','deg','','','NSA isophotal position angle from elliptical Petrosian analysis','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_elpetro_th50_r','arcsec','','','NSA elliptical Petrosian effective radius in the r-band; the is the same as R_{e} below.','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_sersic_ba','','','','NSA isophotal axial ratio from Sersic fit','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_sersic_phi','deg','','','NSA isophotal position angle from Sersic fit','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_sersic_th50','arcsec','','','NSA effective radius from the Sersic fit','0');
INSERT DBColumns VALUES('mangaDAPall','nsa_sersic_n','','','','NSA Sersic index','0');
INSERT DBColumns VALUES('mangaDAPall','versdrp2','','','','Version of DRP used for 2d reductions','0');
INSERT DBColumns VALUES('mangaDAPall','versdrp3','','','','Version of DRP used for 3d reductions','0');
INSERT DBColumns VALUES('mangaDAPall','verscore','','','','Version of mangacore used by the DAP','0');
INSERT DBColumns VALUES('mangaDAPall','versutil','','','','Version of idlutils used by the DAP','0');
INSERT DBColumns VALUES('mangaDAPall','versdap','','','','Version of mangadap','0');
INSERT DBColumns VALUES('mangaDAPall','drp3qual','','','','DRP 3D quality bit','0');
INSERT DBColumns VALUES('mangaDAPall','dapqual','','','','DAP quality bit','0');
INSERT DBColumns VALUES('mangaDAPall','rdxqakey','','','','Configuration keyword for the method used to assess the reduced data','0');
INSERT DBColumns VALUES('mangaDAPall','binkey','','','','Configuration keyword for the spatial binning method','0');
INSERT DBColumns VALUES('mangaDAPall','sckey','','','','Configuration keyword for the method used to model the stellar-continuum','0');
INSERT DBColumns VALUES('mangaDAPall','elmkey','','','','Configuration keyword that defines the emission-line moment measurement method','0');
INSERT DBColumns VALUES('mangaDAPall','elfkey','','','','Configuration keyword that defines the emission-line modeling method','0');
INSERT DBColumns VALUES('mangaDAPall','sikey','','','','Configuration keyword that defines the spectral-index measurement method','0');
INSERT DBColumns VALUES('mangaDAPall','bintype','','','','Type of binning used','0');
INSERT DBColumns VALUES('mangaDAPall','binsnr','','','','Target for bin S/N, if Voronoi binning','0');
INSERT DBColumns VALUES('mangaDAPall','tplkey','','','','The identifier of the template library, e.g., MILES.','0');
INSERT DBColumns VALUES('mangaDAPall','datedap','','','','Date the DAP file was created and/or last modified.','0');
INSERT DBColumns VALUES('mangaDAPall','dapbins','','','','The number of "binned" spectra analyzed by the DAP.','0');
INSERT DBColumns VALUES('mangaDAPall','rcov90','arcsec','','','Semi-major axis radius (R) below which spaxels cover at least 90% of elliptical annuli with width R +/- 2.5 arcsec.  This should be independent of the DAPTYPE.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_med_g','','','','Median S/N per pixel in the ''''griz'''' bands within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for g.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_med_r','','','','Median S/N per pixel in the ''''griz'''' bands within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for r.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_med_i','','','','Median S/N per pixel in the ''''griz'''' bands within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for i.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_med_z','','','','Median S/N per pixel in the ''''griz'''' bands within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for z.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_ring_g','','','','S/N in the ''''griz'''' bands when binning all spaxels within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for g.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_ring_r','','','','S/N in the ''''griz'''' bands when binning all spaxels within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for r.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_ring_i','','','','S/N in the ''''griz'''' bands when binning all spaxels within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for i.','0');
INSERT DBColumns VALUES('mangaDAPall','snr_ring_z','','','','S/N in the ''''griz'''' bands when binning all spaxels within 1.0-1.5 R_{e}.  This should be independent of the DAPTYPE.  Measurements specifically for z.','0');
INSERT DBColumns VALUES('mangaDAPall','sb_1re','10^{-17} erg/s/cm^{2}/angstrom/spaxel','','','Mean g-band surface brightness of valid spaxels within 1 R_e}.  This should be independent of the DAPTYPE.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_rmax','R_{e}','','','Maximum g-band luminosity-weighted semi-major radius of any "valid" binned spectrum.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_n_05','','','','Number of binned spectra with g-band luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 05.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_n_10','','','','Number of binned spectra with g-band luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 10.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_n_20','','','','Number of binned spectra with g-band luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 20.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_snr_05','','','','Median g-band S/N of all binned spectra with luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 05.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_snr_10','','','','Median g-band S/N of all binned spectra with luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 10.','0');
INSERT DBColumns VALUES('mangaDAPall','bin_r_snr_20','','','','Median g-band S/N of all binned spectra with luminosity-weighted centers within 0-1, 0.5-1.5, and 1.5-2.5 R_{e}.  Measurements specifically for 20.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_z','','','','Flux-weighted mean redshift of the stellar component within a 2.5 arcsec aperture at the galaxy center.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_vel_lo','km/s','','','Stellar velocity at 2.5% growth of all valid spaxels.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_vel_hi','km/s','','','Stellar velocity at 97.5% growth of all valid spaxels.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_vel_lo_clip','km/s','','','Stellar velocity at 2.5% growth after iteratively clipping 3-sigma outliers.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_vel_hi_clip','km/s','','','Stellar velocity at 97.5% growth after iteratively clipping 3-sigma outliers.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_sigma_1re','km/s','','','Flux-weighted mean stellar velocity dispersion of all spaxels within 1 R_{e}.','0');
INSERT DBColumns VALUES('mangaDAPall','stellar_rchi2_1re','','','','Median reduced chi^{2} of the stellar-continuum fit within 1 R_{e}.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_z','','','','Flux-weighted mean redshift of the Hα line within a 2.5 arcsec aperture at the galaxy center.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gvel_lo','km/s','','','Gaussian-fitted velocity of the H-alpha line at 2.5% growth of all valid spaxels.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gvel_hi','km/s','','','Gaussian-fitted velocity of the H-alpha line at 97.5% growth of all valid spaxels.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gvel_lo_clip','km/s','','','Gaussian-fitted velocity of the H-alpha line at 2.5% growth after iteratively clipping 3-sigma outliers.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gvel_hi_clip','km/s','','','Gaussian-fitted velocity of the H-alpha line at 97.5% growth after iteratively clipping 3-sigma outliers.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gsigma_1re','km/s','','','Flux-weighted H-alpha velocity dispersion (from Gaussian fit) of all spaxels within 1 R_{e}.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gsigma_hi','km/s','','','H-alpha velocity dispersion (from Gaussian fit) at 97.5% growth of all valid spaxels.','0');
INSERT DBColumns VALUES('mangaDAPall','ha_gsigma_hi_clip','km/s','','','H-alpha velocity dispersion (from Gaussian fit) at 97.5% growth after iteratively clipping 3-sigma outliers.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_rchi2_1re','','','','Median reduced chi^{2} of the continuum+emission-line fit within 1 R_{e}.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oiid_3728','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oii_3729','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_h12_3751','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_h11_3771','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hthe_3798','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_heta_3836','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_neiii_3869','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hei_3889','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hzet_3890','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_neiii_3968','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_heps_3971','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hdel_4102','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hgam_4341','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_heii_4687','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hb_4862','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oiii_4960','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oiii_5008','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_ni_5199','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_ni_5201','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hei_5877','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oi_6302','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_oi_6365','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_nii_6549','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_ha_6564','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_nii_6585','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_sii_6718','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_sii_6732','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_hei_7067','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_ariii_7137','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_ariii_7753','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_peta_9017','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_siii_9071','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_pzet_9231','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_siii_9533','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_cen_peps_9548','','','','Summed emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oiid_3728','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oii_3729','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_h12_3751','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_h11_3771','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hthe_3798','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_heta_3836','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_neiii_3869','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hei_3889','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hzet_3890','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_neiii_3968','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_heps_3971','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hdel_4102','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hgam_4341','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_heii_4687','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hb_4862','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oiii_4960','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oiii_5008','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_ni_5199','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_ni_5201','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hei_5877','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oi_6302','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_oi_6365','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_nii_6549','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_ha_6564','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_nii_6585','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_sii_6718','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_sii_6732','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_hei_7067','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_ariii_7137','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_ariii_7753','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_peta_9017','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_siii_9071','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_pzet_9231','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_siii_9533','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_1re_peps_9548','','','','Summed emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oiid_3728','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oii_3729','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_h12_3751','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_h11_3771','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hthe_3798','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_heta_3836','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_neiii_3869','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hei_3889','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hzet_3890','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_neiii_3968','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_heps_3971','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hdel_4102','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hgam_4341','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_heii_4687','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hb_4862','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oiii_4960','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oiii_5008','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_ni_5199','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_ni_5201','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hei_5877','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oi_6302','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_oi_6365','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_nii_6549','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_ha_6564','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_nii_6585','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_sii_6718','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_sii_6732','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_hei_7067','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_ariii_7137','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_ariii_7753','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_peta_9017','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_siii_9071','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_pzet_9231','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_siii_9533','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sflux_tot_peps_9548','','','','Total integrated flux of each summed emission measurement within the full MaNGA field-of-view.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oiid_3728','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oii_3729','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_h12_3751','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_h11_3771','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hthe_3798','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_heta_3836','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_neiii_3869','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hei_3889','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hzet_3890','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_neiii_3968','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_heps_3971','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hdel_4102','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hgam_4341','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_heii_4687','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hb_4862','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oiii_4960','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oiii_5008','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_ni_5199','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_ni_5201','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hei_5877','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oi_6302','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_oi_6365','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_nii_6549','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_ha_6564','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_nii_6585','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_sii_6718','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_sii_6732','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_hei_7067','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_ariii_7137','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_ariii_7753','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_peta_9017','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_siii_9071','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_pzet_9231','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_siii_9533','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_1re_peps_9548','','','','Mean emission-line surface-brightness from the summed flux measurements within 1 R_{e}.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oiid_3728','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oii_3729','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_h12_3751','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_h11_3771','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hthe_3798','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_heta_3836','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_neiii_3869','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hei_3889','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hzet_3890','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_neiii_3968','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_heps_3971','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hdel_4102','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hgam_4341','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_heii_4687','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hb_4862','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oiii_4960','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oiii_5008','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_ni_5199','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_ni_5201','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hei_5877','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oi_6302','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_oi_6365','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_nii_6549','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_ha_6564','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_nii_6585','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_sii_6718','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_sii_6732','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_hei_7067','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_ariii_7137','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_ariii_7753','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_peta_9017','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_siii_9071','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_pzet_9231','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_siii_9533','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_ssb_peak_peps_9548','','','','Peak summed-flux emission-line surface brightness.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oiid_3728','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oii_3729','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_h12_3751','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_h11_3771','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hthe_3798','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_heta_3836','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_neiii_3869','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hei_3889','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hzet_3890','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_neiii_3968','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_heps_3971','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hdel_4102','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hgam_4341','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_heii_4687','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hb_4862','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oiii_4960','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oiii_5008','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_ni_5199','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_ni_5201','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hei_5877','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oi_6302','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_oi_6365','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_nii_6549','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_ha_6564','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_nii_6585','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_sii_6718','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_sii_6732','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_hei_7067','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_ariii_7137','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_ariii_7753','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_peta_9017','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_siii_9071','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_pzet_9231','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_siii_9533','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_1re_peps_9548','','','','Mean emission-line equivalent width from the summed flux measurements within 1 R_{e}.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oiid_3728','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OIId_3728.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oii_3729','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_h12_3751','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_h11_3771','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hthe_3798','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_heta_3836','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_neiii_3869','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hei_3889','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hzet_3890','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_neiii_3968','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_heps_3971','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hdel_4102','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hgam_4341','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_heii_4687','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hb_4862','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oiii_4960','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oiii_5008','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_ni_5199','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_ni_5201','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hei_5877','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oi_6302','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_oi_6365','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_nii_6549','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_ha_6564','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_nii_6585','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_sii_6718','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_sii_6732','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_hei_7067','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_ariii_7137','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_ariii_7753','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_peta_9017','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_siii_9071','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_pzet_9231','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_siii_9533','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_sew_peak_peps_9548','','','','Peak summed-flux emission-line equivalent width.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oii_3727','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oii_3729','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_h12_3751','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_h11_3771','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hthe_3798','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_heta_3836','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_neiii_3869','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hei_3889','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hzet_3890','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_neiii_3968','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_heps_3971','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hdel_4102','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hgam_4341','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_heii_4687','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hb_4862','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oiii_4960','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oiii_5008','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_ni_5199','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_ni_5201','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hei_5877','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oi_6302','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_oi_6365','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_nii_6549','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_ha_6564','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_nii_6585','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_sii_6718','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_sii_6732','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_hei_7067','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_ariii_7137','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_ariii_7753','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_peta_9017','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_siii_9071','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_pzet_9231','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_siii_9533','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_cen_peps_9548','','','','Gaussian-fitted emission-line flux integrated within a 2.5 arcsec aperture at the galaxy center.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oii_3727','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oii_3729','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_h12_3751','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_h11_3771','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hthe_3798','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_heta_3836','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_neiii_3869','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hei_3889','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hzet_3890','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_neiii_3968','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_heps_3971','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hdel_4102','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hgam_4341','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_heii_4687','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hb_4862','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oiii_4960','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oiii_5008','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_ni_5199','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_ni_5201','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hei_5877','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oi_6302','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_oi_6365','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_nii_6549','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_ha_6564','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_nii_6585','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_sii_6718','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_sii_6732','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_hei_7067','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_ariii_7137','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_ariii_7753','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_peta_9017','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_siii_9071','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_pzet_9231','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_siii_9533','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_1re_peps_9548','','','','Gaussian-fitted emission-line flux integrated within 1 effective-radius aperture at the galaxy.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oii_3727','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oii_3729','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_h12_3751','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_h11_3771','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hthe_3798','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_heta_3836','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_neiii_3869','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hei_3889','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hzet_3890','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_neiii_3968','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_heps_3971','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hdel_4102','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hgam_4341','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_heii_4687','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hb_4862','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oiii_4960','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oiii_5008','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_ni_5199','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_ni_5201','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hei_5877','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oi_6302','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_oi_6365','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_nii_6549','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_ha_6564','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_nii_6585','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_sii_6718','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_sii_6732','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_hei_7067','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_ariii_7137','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_ariii_7753','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_peta_9017','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_siii_9071','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_pzet_9231','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_siii_9533','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gflux_tot_peps_9548','','','','Total integrated flux of the Gaussian fit to each emission line within the full MaNGA field-of-view.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oii_3727','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oii_3729','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_h12_3751','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_h11_3771','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hthe_3798','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_heta_3836','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_neiii_3869','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hei_3889','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hzet_3890','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_neiii_3968','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_heps_3971','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hdel_4102','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hgam_4341','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_heii_4687','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hb_4862','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oiii_4960','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oiii_5008','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_ni_5199','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_ni_5201','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hei_5877','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oi_6302','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_oi_6365','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_nii_6549','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_ha_6564','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_nii_6585','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_sii_6718','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_sii_6732','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_hei_7067','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_ariii_7137','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_ariii_7753','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_peta_9017','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_siii_9071','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_pzet_9231','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_siii_9533','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_1re_peps_9548','','','','Mean emission-line surface-brightness from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oii_3727','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oii_3729','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_h12_3751','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_h11_3771','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hthe_3798','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_heta_3836','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_neiii_3869','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hei_3889','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hzet_3890','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_neiii_3968','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_heps_3971','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hdel_4102','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hgam_4341','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_heii_4687','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hb_4862','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oiii_4960','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oiii_5008','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_ni_5199','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_ni_5201','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hei_5877','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oi_6302','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_oi_6365','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_nii_6549','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_ha_6564','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_nii_6585','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_sii_6718','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_sii_6732','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_hei_7067','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_ariii_7137','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_ariii_7753','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_peta_9017','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_siii_9071','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_pzet_9231','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_siii_9533','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gsb_peak_peps_9548','','','','Peak Gaussian-fitted emission-line surface brightness.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oii_3727','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oii_3729','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_h12_3751','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_h11_3771','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hthe_3798','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_heta_3836','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_neiii_3869','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hei_3889','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hzet_3890','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_neiii_3968','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_heps_3971','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hdel_4102','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hgam_4341','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_heii_4687','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hb_4862','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oiii_4960','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oiii_5008','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_ni_5199','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_ni_5201','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hei_5877','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oi_6302','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_oi_6365','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_nii_6549','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_ha_6564','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_nii_6585','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_sii_6718','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_sii_6732','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_hei_7067','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_ariii_7137','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_ariii_7753','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_peta_9017','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_siii_9071','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_pzet_9231','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_siii_9533','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_1re_peps_9548','','','','Mean emission-line equivalent width from the Gaussian-fitted flux measurements within 1 R_{e}.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oii_3727','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OII_3727.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oii_3729','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OII_3729.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_h12_3751','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for H12_3751.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_h11_3771','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for H11_3771.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hthe_3798','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Hthe_3798.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_heta_3836','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Heta_3836.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_neiii_3869','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NeIII_3869.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hei_3889','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for HeI_3889.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hzet_3890','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Hzet_3890.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_neiii_3968','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NeIII_3968.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_heps_3971','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Heps_3971.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hdel_4102','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Hdel_4102.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hgam_4341','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Hgam_4341.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_heii_4687','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for HeII_4687.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hb_4862','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Hb_4862.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oiii_4960','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OIII_4960.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oiii_5008','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OIII_5008.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_ni_5199','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NI_5199.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_ni_5201','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NI_5201.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hei_5877','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for HeI_5877.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oi_6302','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OI_6302.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_oi_6365','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for OI_6365.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_nii_6549','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NII_6549.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_ha_6564','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Ha_6564.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_nii_6585','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for NII_6585.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_sii_6718','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for SII_6718.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_sii_6732','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for SII_6732.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_hei_7067','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for HeI_7067.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_ariii_7137','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for ArIII_7137.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_ariii_7753','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for ArIII_7753.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_peta_9017','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Peta_9017.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_siii_9071','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for SIII_9071.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_pzet_9231','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Pzet_9231.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_siii_9533','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for SIII_9533.','0');
INSERT DBColumns VALUES('mangaDAPall','emline_gew_peak_peps_9548','','','','Peak Gaussian-fitted emission-line equivalent width.  Measurements specifically for Peps_9548.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_cn1','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CN1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_cn2','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CN2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_ca4227','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Ca4227.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_g4300','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for G4300.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe4383','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe4383.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_ca4455','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Ca4455.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe4531','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe4531.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_c24668','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for C24668.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_hb','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Hb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5015','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5015.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_mg1','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Mg1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_mg2','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Mg2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_mgb','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Mgb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5270','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5270.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5335','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5335.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5406','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5406.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5709','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5709.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fe5782','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Fe5782.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_nad','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for NaD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_tio1','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for TiO1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_tio2','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for TiO2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_hdeltaa','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for HDeltaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_hgammaa','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for HGammaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_hdeltaf','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for HDeltaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_hgammaf','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for HGammaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_cahk','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaHK.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_caii1','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaII1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_caii2','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaII2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_caii3','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaII3.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_pa17','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Pa17.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_pa14','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Pa14.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_pa12','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Pa12.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_mgicvd','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for MgICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_naicvd','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for NaICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_mgiir','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for MgIIR.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_fehcvd','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for FeHCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_nai','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for NaI.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_btio','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for bTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_atio','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for aTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_cah1','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaH1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_cah2','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for CaH2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_naisdss','ang','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for NaISDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_tio2sdss','mag','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for TiO2SDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_d4000','','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for D4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_dn4000','','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for Dn4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_tiocvd','','','','Spectral index at 2.5% growth of all valid spaxels.  Measurements specifically for TiOCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_cn1','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CN1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_cn2','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CN2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_ca4227','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Ca4227.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_g4300','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for G4300.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe4383','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe4383.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_ca4455','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Ca4455.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe4531','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe4531.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_c24668','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for C24668.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_hb','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Hb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5015','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5015.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_mg1','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Mg1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_mg2','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Mg2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_mgb','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Mgb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5270','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5270.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5335','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5335.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5406','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5406.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5709','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5709.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fe5782','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Fe5782.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_nad','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for NaD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_tio1','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for TiO1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_tio2','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for TiO2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_hdeltaa','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for HDeltaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_hgammaa','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for HGammaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_hdeltaf','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for HDeltaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_hgammaf','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for HGammaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_cahk','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaHK.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_caii1','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaII1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_caii2','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaII2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_caii3','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaII3.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_pa17','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Pa17.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_pa14','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Pa14.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_pa12','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Pa12.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_mgicvd','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for MgICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_naicvd','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for NaICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_mgiir','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for MgIIR.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_fehcvd','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for FeHCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_nai','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for NaI.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_btio','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for bTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_atio','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for aTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_cah1','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaH1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_cah2','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for CaH2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_naisdss','ang','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for NaISDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_tio2sdss','mag','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for TiO2SDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_d4000','','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for D4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_dn4000','','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for Dn4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_tiocvd','','','','Spectral index at 97.5% growth of all valid spaxels.  Measurements specifically for TiOCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_cn1','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CN1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_cn2','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CN2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_ca4227','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Ca4227.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_g4300','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for G4300.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe4383','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe4383.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_ca4455','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Ca4455.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe4531','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe4531.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_c24668','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for C24668.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_hb','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Hb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5015','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5015.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_mg1','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mg1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_mg2','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mg2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_mgb','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mgb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5270','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5270.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5335','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5335.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5406','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5406.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5709','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5709.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fe5782','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5782.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_nad','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_tio1','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_tio2','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_hdeltaa','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HDeltaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_hgammaa','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HGammaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_hdeltaf','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HDeltaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_hgammaf','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HGammaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_cahk','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaHK.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_caii1','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_caii2','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_caii3','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII3.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_pa17','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa17.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_pa14','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa14.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_pa12','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa12.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_mgicvd','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for MgICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_naicvd','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_mgiir','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for MgIIR.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_fehcvd','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for FeHCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_nai','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaI.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_btio','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for bTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_atio','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for aTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_cah1','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaH1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_cah2','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaH2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_naisdss','ang','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaISDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_tio2sdss','mag','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO2SDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_d4000','','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for D4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_dn4000','','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Dn4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_lo_clip_tiocvd','','','','Spectral index at 2.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiOCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_cn1','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CN1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_cn2','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CN2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_ca4227','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Ca4227.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_g4300','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for G4300.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe4383','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe4383.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_ca4455','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Ca4455.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe4531','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe4531.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_c24668','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for C24668.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_hb','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Hb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5015','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5015.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_mg1','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mg1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_mg2','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mg2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_mgb','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Mgb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5270','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5270.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5335','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5335.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5406','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5406.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5709','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5709.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fe5782','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Fe5782.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_nad','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_tio1','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_tio2','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_hdeltaa','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HDeltaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_hgammaa','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HGammaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_hdeltaf','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HDeltaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_hgammaf','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for HGammaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_cahk','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaHK.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_caii1','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_caii2','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_caii3','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaII3.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_pa17','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa17.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_pa14','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa14.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_pa12','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Pa12.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_mgicvd','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for MgICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_naicvd','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_mgiir','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for MgIIR.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_fehcvd','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for FeHCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_nai','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaI.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_btio','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for bTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_atio','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for aTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_cah1','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaH1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_cah2','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for CaH2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_naisdss','ang','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for NaISDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_tio2sdss','mag','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiO2SDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_d4000','','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for D4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_dn4000','','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for Dn4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_hi_clip_tiocvd','','','','Spectral index at 97.5% growth after iteratively clipping 3-sigma outliers.  Measurements specifically for TiOCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_cn1','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for CN1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_cn2','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for CN2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_ca4227','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Ca4227.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_g4300','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for G4300.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe4383','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe4383.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_ca4455','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Ca4455.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe4531','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe4531.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_c24668','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for C24668.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_hb','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Hb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5015','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5015.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_mg1','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for Mg1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_mg2','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for Mg2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_mgb','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Mgb.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5270','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5270.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5335','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5335.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5406','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5406.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5709','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5709.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fe5782','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Fe5782.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_nad','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for NaD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_tio1','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for TiO1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_tio2','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for TiO2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_hdeltaa','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for HDeltaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_hgammaa','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for HGammaA.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_hdeltaf','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for HDeltaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_hgammaf','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for HGammaF.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_cahk','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for CaHK.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_caii1','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for CaII1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_caii2','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for CaII2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_caii3','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for CaII3.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_pa17','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Pa17.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_pa14','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Pa14.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_pa12','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for Pa12.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_mgicvd','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for MgICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_naicvd','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for NaICvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_mgiir','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for MgIIR.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_fehcvd','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for FeHCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_nai','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for NaI.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_btio','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for bTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_atio','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for aTiO.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_cah1','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for CaH1.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_cah2','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for CaH2.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_naisdss','ang','','','Median spectral index within 1 effective radius.  Measurements specifically for NaISDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_tio2sdss','mag','','','Median spectral index within 1 effective radius.  Measurements specifically for TiO2SDSS.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_d4000','','','','Median spectral index within 1 effective radius.  Measurements specifically for D4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_dn4000','','','','Median spectral index within 1 effective radius.  Measurements specifically for Dn4000.','0');
INSERT DBColumns VALUES('mangaDAPall','specindex_1re_tiocvd','','','','Median spectral index within 1 effective radius.  Measurements specifically for TiOCvD.','0');
INSERT DBColumns VALUES('mangaDAPall','sfr_1re','h^{-2} M_{sun}/yr','','','Simple estimate of the star-formation rate within 1 effective radius based on the Gaussian-fitted Hα flux; log(SFR) = log L_{Hα} - 41.27 (Kennicutt &amp; Evans [2012, ARAA, 50, 531], citing Murphy et al. [2011, ApJ, 737, 67] and Hao et al. [2011, ApJ, 741, 124]; Kroupa IMF), where L_{Hα} = 4π EML_FLUX_1RE (LDIST_Z)^{2} and ''''no'''' attentuation correction has been applied.','0');
INSERT DBColumns VALUES('mangaDAPall','sfr_tot','h^{-2} M_{sun}/yr','','','Simple estimate of the star-formation rate within the IFU field-of-view based on the Gaussian-fitted Hα flux; log(SFR) = log L_{Hα} - 41.27 (Kennicutt &amp; Evans [2012, ARAA, 50, 531], citing Murphy et al. [2011, ApJ, 737, 67] and Hao et al. [2011, ApJ, 741, 124]; Kroupa IMF), where L_{Hα} = 4π EML_FLUX_TOT (LDIST_Z)^{2} and ''''no'''' attentuation correction has been applied.','0');
INSERT DBColumns VALUES('mangaDAPall','htmID','','','','20-level deep Hierarchical Triangular Mesh ID','0');
INSERT DBColumns VALUES('mangaHIall','plateifu','','','','PLATE-IFU designation of MaNGA observation','0');
INSERT DBColumns VALUES('mangaHIall','mangaid','','','','PLATE-IFU designation of MaNGA observation','0');
INSERT DBColumns VALUES('mangaHIall','objra','deg','','','Right Ascension, J2000 (objra from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIall','objdec','deg','','','Declination, J2000 (objdec from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIall','logmstars','Msun/h^2','','','log of stellar mass (taken from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIall','sini','','','','sine of inclination  estimated from sersic elpetro axial ratio (from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIall','vopt','km/s','','','Optical velocity - used to set centre frequency of radio observation','0');
INSERT DBColumns VALUES('mangaHIall','session','','','','GBT program session during which target was observed. In format AA-BB-CC (e.g. if observed in three sessions), where AA, BB, CC are the session IDs. Set to "ALFALFA" if data from ALFALFA survey.','0');
INSERT DBColumns VALUES('mangaHIall','exp','sec','','','Total on-source integration time','0');
INSERT DBColumns VALUES('mangaHIall','rms','mJy','','','rms noise in signal free part of HI spectrum','0');
INSERT DBColumns VALUES('mangaHIall','loghilim200kms','Msun','','','For non-detections, the log of the maximum HI mass (in solar masses) which would be missed, assuming it''s spread across a width of 200 km/s and D = vopt/70 Mpc/km/s','0');
INSERT DBColumns VALUES('mangaHIall','peak','Jy','','','The peak HI flux density','0');
INSERT DBColumns VALUES('mangaHIall','snr','','','','The peak S/N ratio defined as (peak-rms)/rms','0');
INSERT DBColumns VALUES('mangaHIall','fhi','Jy km/s','','','The integrated flux of the HI line','0');
INSERT DBColumns VALUES('mangaHIall','efhi','Jy km/s','','','Uncertainty on the integrated flux of the HI line','0');
INSERT DBColumns VALUES('mangaHIall','logmhi','Msun','','','Log of the HI mass (in solar masses) assuming D = vopt/70 Mpc/km/s','0');
INSERT DBColumns VALUES('mangaHIall','vhi','km/s','','','Centroid of the HI line detection','0');
INSERT DBColumns VALUES('mangaHIall','ev','km/s','','','Uncertainty on vHI','0');
INSERT DBColumns VALUES('mangaHIall','wm50','km/s','','','Width of the HI line measured at 50% of the median of the two peaks','0');
INSERT DBColumns VALUES('mangaHIall','wp50','km/s','','','Width of the HI line measured at 50% of the peak of the HI line','0');
INSERT DBColumns VALUES('mangaHIall','wp20','km/s','','','Width of the HI line measured at 20% of the peak of the HI line','0');
INSERT DBColumns VALUES('mangaHIall','w2p50','km/s','','','Width of the HI line measured at 50% of the peak on either side','0');
INSERT DBColumns VALUES('mangaHIall','wf50','km/s','','','Width of the HI line measured at 50% of the peak on fits to the sides of the profile','0');
INSERT DBColumns VALUES('mangaHIall','dw','km/s','','','Correction for instrumental broadening applied to all GBT observations.','0');
INSERT DBColumns VALUES('mangaHIall','pr','mJy','','','The peak HI flux in the high velocity peak','0');
INSERT DBColumns VALUES('mangaHIall','pl','mJy','','','The peak HI flux in the low velocity peak','0');
INSERT DBColumns VALUES('mangaHIall','ar','mJy','','','fit parameter for high velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIall','br','mJy s/km','','','fit parameter for high velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIall','al','mJy','','','fit parameter for low velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIall','bl','mJy s/km','','','fit parameter for low velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIall','negdet','','','','Flag indicating whether the profile measurements may be corrupted by a negative signal caused by a source in the OFF beam (Set to 1 if corrupted, otherwise 0)','0');
INSERT DBColumns VALUES('mangaHIall','blstruct','','','','Flag indicating whether the profile measurements may be corrupted by strong baseline variations on scales comparable to galaxy HI profile widths (Set to 1 if corrupted, otherwise 0)','0');
INSERT DBColumns VALUES('mangaHIall','conflag','','','','Flag indicating whether the profile measurements may be unreliable due to multiple galaxies within the beam and at similar redshift (Set to 1 if likely confused, otherwise 0)','0');
INSERT DBColumns VALUES('mangaHIall','confprob','','','','Probability that more than 20% of integrated flux is from galaxies other than primary target','0');
INSERT DBColumns VALUES('mangaHIbonus','mangaid','','','','MaNGA ID of target','0');
INSERT DBColumns VALUES('mangaHIbonus','bonusid','','','','ID of bonus detection. Alphabetical ID (ABC...) for extra target in main position. "O" for a detection in the OFF position, which is usually ratarget-00h02m30s','0');
INSERT DBColumns VALUES('mangaHIbonus','plateifu','','','','plate-ifu of MaNGA observation','0');
INSERT DBColumns VALUES('mangaHIbonus','targetra','deg','','','Right Ascension, J2000 (objra from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIbonus','targetdec','deg','','','Declination, J2000 (objdec from DRPAll file)','0');
INSERT DBColumns VALUES('mangaHIbonus','vopt','km/s','','','Optical velocity - used to set centre frequency of radio observation','0');
INSERT DBColumns VALUES('mangaHIbonus','sessions','','','','Session(s) of AGBT16A_095 target was observed in. In format AA-BB-CC (e.g. if observed in three sessions).','0');
INSERT DBColumns VALUES('mangaHIbonus','exp','s','','','Total integration time with GBT','0');
INSERT DBColumns VALUES('mangaHIbonus','rms','mJy','','','rms noise in signal free part of HI spectrum','0');
INSERT DBColumns VALUES('mangaHIbonus','peak','mJy','','','The peak HI flux','0');
INSERT DBColumns VALUES('mangaHIbonus','snr','','','','The peak S/N ratio','0');
INSERT DBColumns VALUES('mangaHIbonus','fHI','Jy km/s','','','The integrated flux of the HI line','0');
INSERT DBColumns VALUES('mangaHIbonus','logMHI','','','','Log of the HI mass (in solar masses) assuming D = vopt/70 Mpc/km/s','0');
INSERT DBColumns VALUES('mangaHIbonus','vHI','km/s','','','Centoid of the HI line detection','0');
INSERT DBColumns VALUES('mangaHIbonus','evHI','km/s','','','Error on vHI','0');
INSERT DBColumns VALUES('mangaHIbonus','WM50','km/s','','','Width of the HI line measured at 50% of the median of the two peaks','0');
INSERT DBColumns VALUES('mangaHIbonus','WP50','km/s','','','Width of the HI line measured at 50% of the peak of the HI line','0');
INSERT DBColumns VALUES('mangaHIbonus','WP20','km/s','','','Width of the HI line measured at 20% of the peak of the HI line','0');
INSERT DBColumns VALUES('mangaHIbonus','W2P50','km/s','','','Width of the HI line measured at 50% of the peak on either side','0');
INSERT DBColumns VALUES('mangaHIbonus','WF50','km/s','','','Width of the HI line measured at 50% of the peak on fits to the sides of the profile','0');
INSERT DBColumns VALUES('mangaHIbonus','Pr','mJy','','','The peak HI flux in the high velocity peak','0');
INSERT DBColumns VALUES('mangaHIbonus','Pl','mJy','','','The peak HI flux in the low velocity peak','0');
INSERT DBColumns VALUES('mangaHIbonus','ar','','','','fit parameter for high velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIbonus','br','','','','fit parameter for high velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIbonus','al','','','','fit parameter for low velocity side of profile','0');
INSERT DBColumns VALUES('mangaHIbonus','bl','','','','fit parameter for low velocity side of profile','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','nsa_id','','','','NASA Sloan Atlas ID','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','IAUNAME','','','','IAU name','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','IFUDESIGNSIZE','','','','Design size for the IFU','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','IFU_DEC','degrees','','','DEC of the IFU','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','IFU_RA','degrees','','','RA of the IFU','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','MANGAID','','','','','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','MANGA_TILEID','','','','MaNGA tile ID','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','OBJECT_DEC','degrees','','','DEC of the galaxy','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','OBJECT_RA','degrees','','','RA of the galaxy','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','survey','','','','The Galaxy Zoo data set(s) the galaxy was part of (comma seperated)','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a01_smooth_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a01_smooth_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a01_smooth_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a01_smooth_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a01_smooth_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a02_features_or_disk_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a02_features_or_disk_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a02_features_or_disk_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a02_features_or_disk_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a02_features_or_disk_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a03_star_or_artifact_count','','','','Raw GZ vote count for','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a03_star_or_artifact_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a03_star_or_artifact_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_a03_star_or_artifact_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_count','','','','The raw number of GZ votes for task 1','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t01_smooth_or_features_weight','','','','The user weighted number of GZ votes for task 1','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a04_yes_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a04_yes_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a04_yes_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a04_yes_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a04_yes_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a05_no_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a05_no_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a05_no_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a05_no_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_a05_no_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_count','','','','The raw number of GZ votes for task 2','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t02_edgeon_weight','','','','The user weighted number of GZ votes for task 2','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a06_bar_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a06_bar_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a06_bar_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a06_bar_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a06_bar_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a07_no_bar_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a07_no_bar_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a07_no_bar_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a07_no_bar_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_a07_no_bar_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_count','','','','The raw number of GZ votes for task 3','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t03_bar_weight','','','','The user weighted number of GZ votes for task 3','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a08_spiral_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a08_spiral_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a08_spiral_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a08_spiral_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a08_spiral_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a09_no_spiral_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a09_no_spiral_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a09_no_spiral_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a09_no_spiral_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_a09_no_spiral_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_count','','','','The raw number of GZ votes for task 4','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t04_spiral_weight','','','','The user weighted number of GZ votes for task 4','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a10_no_bulge_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a10_no_bulge_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a10_no_bulge_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a10_no_bulge_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a10_no_bulge_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a11_just_noticeable_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a11_just_noticeable_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a11_just_noticeable_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a11_just_noticeable_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a11_just_noticeable_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a12_obvious_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a12_obvious_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a12_obvious_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a12_obvious_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a12_obvious_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a13_dominant_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a13_dominant_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a13_dominant_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a13_dominant_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_a13_dominant_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_count','','','','The raw number of GZ votes for task 5','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t05_bulge_prominence_weight','','','','The user weighted number of GZ votes for task 5','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a14_yes_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a14_yes_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a14_yes_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a14_yes_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a14_yes_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a15_no_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a15_no_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a15_no_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a15_no_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_a15_no_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_count','','','','The raw number of GZ votes for task 6','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t06_odd_weight','','','','The user weighted number of GZ votes for task 6','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a16_completely_round_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a16_completely_round_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a16_completely_round_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a16_completely_round_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a16_completely_round_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a17_in_between_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a17_in_between_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a17_in_between_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a17_in_between_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a17_in_between_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a18_cigar_shaped_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a18_cigar_shaped_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a18_cigar_shaped_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a18_cigar_shaped_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_a18_cigar_shaped_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_count','','','','The raw number of GZ votes for task 7','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t07_rounded_weight','','','','The user weighted number of GZ votes for task 7','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a25_rounded_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a25_rounded_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a25_rounded_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a25_rounded_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a25_rounded_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a26_boxy_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a26_boxy_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a26_boxy_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a26_boxy_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a26_boxy_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a27_no_bulge_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a27_no_bulge_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a27_no_bulge_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a27_no_bulge_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_a27_no_bulge_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_count','','','','The raw number of GZ votes for task 9','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t09_bulge_shape_weight','','','','The user weighted number of GZ votes for task 9','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a28_tight_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a28_tight_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a28_tight_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a28_tight_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a28_tight_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a29_medium_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a29_medium_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a29_medium_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a29_medium_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a29_medium_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a30_loose_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a30_loose_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a30_loose_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a30_loose_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_a30_loose_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_count','','','','The raw number of GZ votes for task 10','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t10_arms_winding_weight','','','','The user weighted number of GZ votes for task 10','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a31_1_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a31_1_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a31_1_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a31_1_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a31_1_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a32_2_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a32_2_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a32_2_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a32_2_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a32_2_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a33_3_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a33_3_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a33_3_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a33_3_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a33_3_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a34_4_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a34_4_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a34_4_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a34_4_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a34_4_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a36_more_than_4_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a36_more_than_4_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a36_more_than_4_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a36_more_than_4_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a36_more_than_4_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a37_cant_tell_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a37_cant_tell_count_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a37_cant_tell_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a37_cant_tell_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_a37_cant_tell_weight_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_count','','','','The raw number of GZ votes for task 11','0');
INSERT DBColumns VALUES('mangaGalaxyZoo','t11_arms_number_weight','','','','The user weighted number of GZ votes for task 11','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','plateifu','','','','plate-ifu designation of MaNGA target','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','mangaid','','','','MaNGA ID of target','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','objra','deg','','','Right Ascension, J2000 (objra from DRPAll file)','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','objdec','deg','','','Declination, J2000 (objdec from DRPAll file)','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','vopt','','','','Optical velocity','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','rms','','','','rms noise in signal-free part of HI spectrum','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','loghilim200kms','','','','For non-detections, the log of the HI mass limit (in solar masses) assuming a width of 200 km/s and D = vopt/70 Mpc/km/s','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','snr','','','','The signal-to-noise ratio as defined by Equation (4) in Haynes et al. (2018)','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','fhi','','','','The integrated flux of the HI line','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','logmhi','','','','Log of the HI mass (in solar masses) assuming D = vopt/70 Mpc/km/s','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','vHI','','','','velocity centroid of the HI line detection','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','eVHI','','','','error on vHI','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','WP20','','','','Width of the HI line measured at 20% of the peak on fits to the sides of the profile','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','WF50','','','','Width of the HI liune measured at 50% of the peak on fits to the sides of the profile','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','sep','','','','Angular separation between the HI source and the optical position of the MaNGA galaxy','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','dv','','','','Difference between the recession velocity of the HI source and the MaNGA galaxy measured using optical spectra','0');
INSERT DBColumns VALUES('mangaAlfalfaDR15','AGC','','','','ALFALFA AGC number of HI source','0');
INSERT DBColumns VALUES('MaNGA_GZ2','PLATEIFU','','','','MaNGA PLATE-IFU','0');
INSERT DBColumns VALUES('MaNGA_GZ2','MANGAID','','','','MaNGA ID','0');
INSERT DBColumns VALUES('MaNGA_GZ2','OBJRA','deg','','','RA of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','OBJDEC','deg','','','DEC of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','Z','','','','Redshift of the galaxy in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','MNGTARG1','','','','Main survey targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','MNGTARG2','','','','Non-galaxy targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','MNGTARG3','','','','Ancillary targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','IFUDESIGNSIZE','','','','Design size for the IFU in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZ2','crossmatch_separation','arcsec','','','Separation on sky between MaNGA target and matched GZ2 target','0');
INSERT DBColumns VALUES('MaNGA_GZ2','dr7objid','','','','Unique DR7 identifier composed from [skyVersion,rerun,run,camcol,field,obj]','0');
INSERT DBColumns VALUES('MaNGA_GZ2','gz2_class','','','','Class in GZ2','0');
INSERT DBColumns VALUES('MaNGA_GZ2','total_classifications','','','','Amount of unique classifications in GZ2','0');
INSERT DBColumns VALUES('MaNGA_GZ2','total_votes','','','','Total amount of votes in GZ2','0');
INSERT DBColumns VALUES('MaNGA_GZ2','in_GZ2','','','','1 if from GZ2, 0 if from previous VAC','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a01_smooth_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a02_features_or_disk_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t01_smooth_or_features_a03_star_or_artifact_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a04_yes_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t02_edgeon_a05_no_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a06_bar_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t03_bar_a07_no_bar_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a08_spiral_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t04_spiral_a09_no_spiral_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a10_no_bulge_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a11_just_noticeable_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a12_obvious_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t05_bulge_prominence_a13_dominant_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a14_yes_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t06_odd_a15_no_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a16_completely_round_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a17_in_between_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t07_rounded_a18_cigar_shaped_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a19_ring_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a20_lens_or_arc_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a21_disturbed_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a22_irregular_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a23_other_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a24_merger_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t08_odd_feature_a38_dust_lane_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a25_rounded_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a26_boxy_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t09_bulge_shape_a27_no_bulge_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a28_tight_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a29_medium_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t10_arms_winding_a30_loose_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a31_1_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a32_2_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a33_3_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a34_4_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a36_more_than_4_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_count','','','','Raw GZ vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_weight','','','','User weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_fraction','','','','Raw GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_weighted_fraction','','','','User weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_debiased','','','','Debiased GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZ2','t11_arms_number_a37_cant_tell_flag','','','','GZ flag','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','PLATEIFU','','','','MaNGA PLATE-IFU','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','MANGAID','','','','MaNGA ID','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','NSA_IAUNAME','','','','NSA IAU name','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','OBJRA','deg','','','RA of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','OBJDEC','deg','','','DEC of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','Z','','','','Redshift of the galaxy in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','MNGTARG1','','','','Main survey targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','MNGTARG2','','','','Non-galaxy targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','MNGTARG3','','','','Ancillary targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','IFUDESIGNSIZE','','','','Design size for the IFU in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_smooth_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_featured_or_disk_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_artifact_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','disk_edge_on_yes_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','disk_edge_on_no_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','has_spiral_arms_yes_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','has_spiral_arms_no_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_strong_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_weak_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_no_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_dominant_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_large_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_moderate_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_small_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_none_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_round_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_in_between_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_cigar_shaped_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_boxy_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_none_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_rounded_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_tight_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_medium_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_loose_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_1_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_2_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_3_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_4_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_more_than_4_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_cant_tell_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_none_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_minor_disturbance_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_major_disturbance_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_merger_concentration','','','','Dirichlet concentration parameters that encode the posteriors','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_smooth_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_featured_or_disk_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_artifact_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','disk_edge_on_yes_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','disk_edge_on_no_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','has_spiral_arms_yes_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','has_spiral_arms_no_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_strong_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_weak_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_no_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_dominant_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_large_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_moderate_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_small_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_none_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_round_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_in_between_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_cigar_shaped_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_boxy_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_none_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_rounded_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_tight_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_medium_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_loose_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_1_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_2_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_3_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_4_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_more_than_4_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_cant_tell_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_none_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_minor_disturbance_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_major_disturbance_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_merger_fraction','','','','GZ vote fraction','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','smooth_or_featured_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','disk_edge_on_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','has_spiral_arms_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bar_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','bulge_size_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','how_rounded_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','edge_on_bulge_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_winding_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','spiral_arm_count_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_GZD_auto','merging_proportion_volunteers_asked','','','','Estimated fraction of volunteers that would have been asked that question','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','MANGAID','','','','MaNGA ID','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','OBJRA','deg','','','RA of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','OBJDEC','deg','','','DEC of the galaxy center in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','MNGTARG1','','','','Main survey targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','MNGTARG2','','','','Non-galaxy targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','MNGTARG3','','','','Ancillary targeting bit in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','NSA_IAUNAME','','','','NSA IAU name','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','IFUDESIGNSIZE','','','','Design size for the IFU in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','Z','','','','Redshift of the galaxy in MaNGA','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','Ymag','mag','','','Y-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','e_Ymag','mag','','','error on the Y-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','Jmag','mag','','','J-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','e_Jmag','mag','','','error on the J-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','Hmag','mag','','','H-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','e_Hmag','mag','','','error on the H-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','Kmag','mag','','','K-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','e_Kmag','mag','','','error on the K-band magnitude','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','UKIDSS_url','','','','url for the UKIDSS images','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','subject_id','','','','Zooniverse ID','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a0_smooth_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a1_features_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a2_artifact_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t01_disk_edge_on_a0_yes_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t01_disk_edge_on_a1_no_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t01_disk_edge_on_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t02_bar_a0_bar_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t02_bar_a1_no_bar_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t02_bar_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t03_spiral_a0_spiral_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t03_spiral_a1_no_spiral_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t03_spiral_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a0_no_bulge_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a1_just_noticeable_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a2_obvious_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a3_dominant_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t05_odd_a0_yes_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t05_odd_a1_no_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t05_odd_count_weighted','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x0_ring_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x1_lens_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x2_disturbed_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x3_irregular_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x4_other_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x5_merger_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_x6_dustlane_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_a0_discuss_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t06_odd_feature_count_weighted','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a0_completely_round_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a1_in_between_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a2_cigar_shaped_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a0_rounded_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a1_boxy_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a2_no_bulge_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a0_tight_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a1_medium_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a2_loose_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a0_1_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a1_2_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a2_3_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a3_4_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a4_more_than_4_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a5_cant_tell_weighted_fraction_ukidss','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_count_weighted_ukidss','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t11_discuss_a0_yes_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t11_discuss_a1_no_weighted_fraction','','','','GZ weighted vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t11_discuss_count_weighted','','','','GZ weighted vote count','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a0_smooth_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a1_features_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t00_smooth_or_features_a2_artifact_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t01_disk_edge_on_a0_yes_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t01_disk_edge_on_a1_no_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a0_completely_round_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a1_in_between_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t07_rounded_a2_cigar_shaped_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t03_spiral_a0_spiral_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t03_spiral_a1_no_spiral_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a0_rounded_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a1_boxy_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t08_bulge_shape_a2_no_bulge_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a0_no_bulge_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a1_just_noticeable_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a2_obvious_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t04_bulge_prominence_a3_dominant_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a0_tight_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a1_medium_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t09_arms_winding_a2_loose_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a0_1_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a1_2_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a2_3_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a3_4_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a4_more_than_4_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t10_arms_number_a5_cant_tell_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t02_bar_a0_bar_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('MaNGA_gzUKIDSS_rhdebiased','t02_bar_a1_no_bar_debiased_rh_ukidss','','','','GZ debiased vote fraction','0');
INSERT DBColumns VALUES('mastar_goodstars','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodstars','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodstars','mangaid','','','','MaNGA-ID for the target.','0');
INSERT DBColumns VALUES('mastar_goodstars','minmjd','','','','Minimum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars','maxmjd','','','','Maximum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars','nvisits','','','','Number of visits for this star (including good and bad observations).','0');
INSERT DBColumns VALUES('mastar_goodstars','nplates','','','','Number of plates this star is on.','0');
INSERT DBColumns VALUES('mastar_goodstars','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodstars','psfmag_1','mag','','','PSF magnitude in the first band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars','psfmag_2','mag','','','PSF magnitude in the second band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars','psfmag_3','mag','','','PSF magnitude in the third band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars','psfmag_4','mag','','','PSF magnitude in the fourth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars','psfmag_5','mag','','','PSF magnitude in the fifth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodstars','input_logg','log(cm/s^2)','','','Surface gravity in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars','input_teff','K','','','Effective temperature in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars','input_fe_h','','','','[Fe/H] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars','input_alpha_m','','','','[alpha/M] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars','input_source','','','','Source catalog for stellar parameters.','0');
INSERT DBColumns VALUES('mastar_goodstars','photocat','','','','Source of astrometry and photometry.','0');
INSERT DBColumns VALUES('mastar_goodvisits','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodvisits','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodvisits','mangaid','','','','MaNGA-ID for the object.','0');
INSERT DBColumns VALUES('mastar_goodvisits','plate','','','','Plate ID.','0');
INSERT DBColumns VALUES('mastar_goodvisits','ifudesign','','','','IFUDESIGN for the fiber bundle.','0');
INSERT DBColumns VALUES('mastar_goodvisits','mjd','','','','Modified Julian Date for this visit.','0');
INSERT DBColumns VALUES('mastar_goodvisits','ifura','deg','','','Right Ascension of the center of the IFU.','0');
INSERT DBColumns VALUES('mastar_goodvisits','ifudec','deg','','','Declination of the center of the IFU.','0');
INSERT DBColumns VALUES('mastar_goodvisits','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodvisits','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodvisits','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodvisits','psfmag_1','mag','','','PSF magnitude in the first band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','psfmag_2','mag','','','PSF magnitude in the second band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','psfmag_3','mag','','','PSF magnitude in the third band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','psfmag_4','mag','','','PSF magnitude in the fourth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','psfmag_5','mag','','','PSF magnitude in the fifth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodvisits','exptime','sec','','','Median exposure time for all exposures on this visit.','0');
INSERT DBColumns VALUES('mastar_goodvisits','nexp_visit','','','','Total number of exposures during this visit. This column was named ''NEXP'' in DR15/16.','0');
INSERT DBColumns VALUES('mastar_goodvisits','nvelgood','','','','Number of exposures (from all visits of this PLATE-IFUDESIGN) with good velocity measurements.','0');
INSERT DBColumns VALUES('mastar_goodvisits','heliov','km/s','','','Median heliocentric velocity of all exposures on all visits that yield good velocity measurements. This is used to shift the spectra to the rest frame.','0');
INSERT DBColumns VALUES('mastar_goodvisits','verr','km/s','','','1-sigma uncertainty of the heliocentric velocity','0');
INSERT DBColumns VALUES('mastar_goodvisits','v_errcode','','','','Error code for HELIOV. Zero is good, nonzero is bad.','0');
INSERT DBColumns VALUES('mastar_goodvisits','heliov_visit','km/s','','','Median heliocentric velocity of good exposures from only this visit, rather than from all visits.','0');
INSERT DBColumns VALUES('mastar_goodvisits','verr_visit','km/s','','','1-sigma uncertainty of HELIOV_VISIT.','0');
INSERT DBColumns VALUES('mastar_goodvisits','v_errcode_visit','','','','Error code for HELIOV_VISIT. Zero is good, nonzero is bad.','0');
INSERT DBColumns VALUES('mastar_goodvisits','velvarflag','','','','Flag indicating the significant variation of the heliocentric velocity from visit to visit. A value of 1 means the variation is beyond 3-sigma between at least two of the visits. A value of 0 means all variations between pairs of visits are less than 3-sigma.','0');
INSERT DBColumns VALUES('mastar_goodvisits','dv_maxsig','','','','Maximum significance in velocity variation between pairs of visits.','0');
INSERT DBColumns VALUES('mastar_goodvisits','mjdqual','','','','Spectral quality bitmask (MASTAR_QUAL).','0');
INSERT DBColumns VALUES('mastar_goodvisits','bprperr_sp','','','','Uncertainty in the synthetic Bp-Rp color derived from the spectra.','0');
INSERT DBColumns VALUES('mastar_goodvisits','nexp_used','','','','Number of exposures used in constructing the visit spectrum.','0');
INSERT DBColumns VALUES('mastar_goodvisits','s2n','','','','Median signal-to-noise ratio per pixel of this visit spectrum.','0');
INSERT DBColumns VALUES('mastar_goodvisits','s2n10','','','','Top 10-th percentile signal-to-noise ratio per pixel of this visit spectrum.','0');
INSERT DBColumns VALUES('mastar_goodvisits','badpixfrac','','','','Fraction of bad pixels (those with inverse variance being zero.)','0');
INSERT DBColumns VALUES('mastar_goodvisits','coord_source','','','','Source of astrometry.','0');
INSERT DBColumns VALUES('mastar_goodvisits','photocat','','','','Source of photometry.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mangaid','','','','MaNGA-ID for the target.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','minmjd','','','','Minimum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','maxmjd','','','','Maximum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','nvisits','','','','Number of visits for this star (including good and bad observations).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','nplates','','','','Number of plates this star is on.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','psfmag_1','mag','','','PSF magnitude in the first band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','psfmag_2','mag','','','PSF magnitude in the second band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','psfmag_3','mag','','','PSF magnitude in the third band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','psfmag_4','mag','','','PSF magnitude in the fourth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','psfmag_5','mag','','','PSF magnitude in the fifth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','input_logg','log(cm/s^2)','','','Surface gravity in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','input_teff','K','','','Effective temperature in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','input_fe_h','','','','[Fe/H] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','input_alpha_m','','','','[alpha/M] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','input_source','','','','Source catalog for stellar parameters.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','photocat','','','','Source of astrometry and photometry.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','designation','','','','Unique source designation by Gaia','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','source_id','','','','Gaia DR2 source ID','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ref_epoch','','','','Epoch for Gaia DR2 astrometry','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gaiara','deg','','','RA given by Gaia DR2','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gaiara_error','mas','','','Uncertainty of RA given by Gaia DR2','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gaiadec','deg','','','Dec given by Gaia DR2','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gaiadec_error','mas','','','Uncertainty of Dec given by Gaia DR2','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','parallax','mas','','','Parallax measured by Gaia (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','parallax_error','mas','','','Standard error of parallax (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','pmra','mas/yr','','','Proper motion in right ascension direction (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','pmra_error','mas/yr','','','Standard error of proper motion in right ascension direction  (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','pmdec','mas/yr','','','Proper motion in declination direction (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','pmdec_error','mas/yr','','','Standard error of proper motion in declination direction (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','astrometric_params_solved','','','','A binary code indicating which astrometric parameters were estimated for the source. See Gaia documentation for more details.(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','astrometric_n_good_obs_al','','','','Number of good observations AL (see gaia data documentation) (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','astrometric_chi2_al','','','','AL chi-square value (see Gaia data documentation) (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','visibility_periods_used','','','','Number of visibility periods used in the astrometric solution. (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_g_mean_flux','e-/s','','','G-band mean flux (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_g_mean_flux_over_error','','','','Mean flux in the G-band divided by its error(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_g_mean_mag','mag','','','G-band mean magnitude (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_bp_mean_flux','e-/s','','','Integrated BP mean flux(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_bp_mean_flux_over_error','','','','Integrated BP mean flux divided by its error (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_bp_mean_mag','mag','','','Integrated BP mean magnitude (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_rp_mean_flux','e-/s','','','Integrated RP mean flux (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_rp_mean_flux_over_error','','','','Integrated RP mean flux divided by its error(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_rp_mean_mag','mag','','','Integrated RP mean magnitude(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_bp_rp_excess_factor','','','','BP/RP excess factor(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','bp_rp','mag','','','BP - RP colour(DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','radial_velocity','km/s','','','Radial velocity (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','radial_velocity_error','km/s','','','Radial velocity error (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','phot_variable_flag','','','','Photometric variability flag (DR2)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','r_est','parsec','','','Estimated distance (Bailer-Jones et al. 2018)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','r_lo','parsec','','','Lower bound on the confidence interval of the estimated distance','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','r_hi','parsec','','','Upper bound on the confidence interval of the estimated distance.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','r_len','parsec','','','Length scale used in the prior for the distance estimation.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','result_flag','','','','Type of distance estimate result (0=failed estimate; 1=r_est is the mode (highest if the posterior is bimodal); r_lo/r_hi define the lower/upper limits of the highest density interval (HDI) containing 68% of the posterior probability ; 2 = r_est is the median; r_lo/r_hi define the lower/upper limits of the equal-tailed interval (ETI), containing 68% of the posterior probability.)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','modality_flag','','','','Distance result regime flag: number of modes in the posterior (1 or 2).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','tmass_id','','','','2MASS source designation formed from sexigesimal coordinates','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','tmass_distance','arcsec','','','Angular distance between the Gaia source and its best neighbour in 2MASS point source catalog','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','j_m','mag','','','2MASS J band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','j_msigcom','mag','','','Combined (total) J band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','h_m','mag','','','2MASS H band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','h_msigcom','mag','','','Combined (total) H band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','k_m','mag','','','2MASS K band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','k_msigcom','mag','','','Combined (total) K band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ph_qual','','','','Flag indicating 2MASS photometric quality of source (see 2MASS PSC documentation at IRSA).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gal_contam','','','','Flag indicating if src is contaminated by extended source in 2MASS (see 2MASS PSC documentation at IRSA).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mp_flg','','','','If nonzero, the 2MASS source is positionally associated with an asteroid, comet, etc','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','contamination','','','','Metric indicating maximum contamination level by neighboring objects, evaluated using the Gaia G, BP, and RP magnitudes.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','gaia_cleanmatch','','','','A value of 1 indicates the contamination level by the neighboring object(s) is below 0.0084. The source spectrum should be unaffected by the neighboring object.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ebv','mag','','','reddening given by the 3D dustmap (Green et al. 2019) at the distance of R_EST.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ebv_sigma_up','mag','','','Reddening uncertainty on the upper side (estimated using the 84-th percentile in the reddening posterior at the distance given by R_HI)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ebv_sigma_dn','mag','','','Reddening uncertainty on the lower side (estimated using the 16-th percentile in the reddening posterior at the distance given by R_LO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','m_g','mag','','','Absolute G-band magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','m_g_err_up','mag','','','Uncertainty on the upper (fainter) side for absolute G-band magnitude (estimated using EBV-EBV_SIGMA_DN and R_LO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','m_g_err_dn','mag','','','Uncertainty on the lower (brighter) side for absolute G-band magnitude (estimated using EBV+EBV_SIGMA_UP and R_HI)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','bprpc','mag','','','Extinction-corrected BP-RP color','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','bprpc_err_up','mag','','','Uncertainty on the redder side for the extinction-corrected BP-RP color (propagated using EBV, EBV_SIGMA_DN, and uncertainty on BP and RP magnitudes)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','bprpc_err_dn','mag','','','Uncertainty on the bluer side for the extinction-corrected BP-RP color (propagated using EBV, EBV_SIGMA_UP, and uncertainty on BP and RP magnitudes)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','dustclean','','','','A value of 1 indicates there is a valid reddening estimate.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','goodstars','','','','A value of 1 indicates the star belongs to the GOODSTARS set. This is always true in this table.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','simbad_main_id','','','','Main ID of the star on Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','otype_s','','','','Object type given by Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','sp_type','','','','Spectral type given by Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','sp_qual','','','','Quality of the spectral type determination (A:best, E:worst).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','sp_bibcode','','','','Reference of the spectral type determination','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mk_ds','','','','Dispersive system used for the MK/MSS spectral type determination','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mk_spectral_type','','','','Simbad Morgan-Keenan (MK) spectral type','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','mk_bibcode','','','','Reference of the MK spectral type','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_nmag_ok_g','mag','','','Number of detections for the object in PS1 g filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_nmag_ok_r','mag','','','Number of detections for the object in PS1 r filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_nmag_ok_i','mag','','','Number of detections for the object in PS1 i filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_nmag_ok_z','mag','','','Number of detections for the object in PS1 z filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_nmag_ok_y','mag','','','Number of detections for the object in PS1 y filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_mean_g','maggies','','','Mean flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_mean_r','maggies','','','Mean flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_mean_i','maggies','','','Mean flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_mean_z','maggies','','','Mean flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_mean_y','maggies','','','Mean flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_err_g','maggies','','','Formal uncertainty of the mean flux estimate in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_err_r','maggies','','','Formal uncertainty of the mean flux estimate in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_err_i','maggies','','','Formal uncertainty of the mean flux estimate in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_err_z','maggies','','','Formal uncertainty of the mean flux estimate in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_err_y','maggies','','','Formal uncertainty of the mean flux estimate in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_stdev_g','maggies','','','Standard deviation of the flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_stdev_r','maggies','','','Standard deviation of the flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_stdev_i','maggies','','','Standard deviation of the flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_stdev_z','maggies','','','Standard deviation of the flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_stdev_y','maggies','','','Standard deviation of the flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_g','maggies','','','Median flux in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_r','maggies','','','Median flux in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_i','maggies','','','Median flux in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_z','maggies','','','Median flux in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_y','maggies','','','Median flux in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q25_g','maggies','','','25-th percentile flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q25_r','maggies','','','25-th percentile flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q25_i','maggies','','','25-th percentile flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q25_z','maggies','','','25-th percentile flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q25_y','maggies','','','25-th percentile flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q75_g','maggies','','','75-th percentile flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q75_r','maggies','','','75-th percentile flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q75_i','maggies','','','75-th percentile flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q75_z','maggies','','','75-th percentile flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_q75_y','maggies','','','75-th percentile flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_ap_g','maggies','','','Median aperture flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_ap_r','maggies','','','Median aperture flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_ap_i','maggies','','','Median aperture flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_ap_z','maggies','','','Median aperture flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_median_ap_y','maggies','','','Median aperture flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiadr2','ps1_obj_id','','','','Unique object identifier in PS1. A value of zero means the object has no match in the PS1 catalog.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mangaid','','','','MaNGA-ID for the target.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','minmjd','','','','Minimum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','maxmjd','','','','Maximum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','nvisits','','','','Number of visits for this star (including good and bad observations).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','nplates','','','','Number of plates this star is on.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','psfmag_1','mag','','','PSF magnitude in the first band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','psfmag_2','mag','','','PSF magnitude in the second band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','psfmag_3','mag','','','PSF magnitude in the third band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','psfmag_4','mag','','','PSF magnitude in the fourth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','psfmag_5','mag','','','PSF magnitude in the fifth band with the filter correspondence depending on PHOTOCAT.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','input_logg','log(cm/s^2)','','','Surface gravity in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','input_teff','K','','','Effective temperature in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','input_fe_h','','','','[Fe/H] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','input_alpha_m','','','','[alpha/M] in the input catalog (with some adjustment made).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','input_source','','','','Source catalog for stellar parameters.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','photocat','','','','Source of astrometry and photometry.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','designation','','','','Unique source designation by Gaia','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','source_id','','','','Gaia EDR3 source ID','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ref_epoch','','','','Epoch for Gaia EDR3 astrometry','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gaiara','deg','','','RA given by Gaia EDR3','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gaiara_error','mas','','','Uncertainty of RA given by Gaia EDR3','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gaiadec','deg','','','Dec given by Gaia EDR3','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gaiadec_error','mas','','','Uncertainty of Dec given by Gaia EDR3','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','parallax','mas','','','Parallax measured by Gaia (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','parallax_error','mas','','','Standard error of parallax(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','pmra','mas/yr','','','Proper motion in right ascension direction (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','pmra_error','mas/yr','','','Standard error of proper motion in right ascension direction  (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','pmdec','mas/yr','','','Proper motion in declination direction (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','pmdec_error','mas/yr','','','Standard error of proper motion in declination direction (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','astrometric_params_solved','','','','A binary code indicating which astrometric parameters were estimated for the source. See Gaia documentation for more details.(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','astrometric_n_good_obs_al','','','','Number of good observations AL (see gaia data documentation) (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','astrometric_chi2_al','','','','AL chi-square value (see Gaia data documentation) (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','visibility_periods_used','','','','Number of visibility periods used in the astrometric solution. (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_g_mean_flux','e-/s','','','G-band mean flux (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_g_mean_flux_over_error','','','','Mean flux in the G-band divided by its error(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_g_mean_mag','mag','','','G-band mean magnitude (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_bp_mean_flux','e-/s','','','Integrated BP mean flux(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_bp_mean_flux_over_error','','','','Integrated BP mean flux divided by its error (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_bp_mean_mag','mag','','','Integrated BP mean magnitude (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_rp_mean_flux','e-/s','','','Integrated RP mean flux (EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_rp_mean_flux_over_error','','','','Integrated RP mean flux divided by its error(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_rp_mean_mag','mag','','','Integrated RP mean magnitude(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','phot_bp_rp_excess_factor','','','','BP/RP excess factor(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','bp_rp','mag','','','BP - RP colour(EDR3)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_med_geo','parsec','','','The median of the geometric distance posterior. The geometric distance estimate.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_lo_geo','parsec','','','The 16th percentile of the geometric distance posterior. The lower 1-sigma-like bound on the confidence interval.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_hi_geo','parsec','','','The 84th percentile of the geometric distance posterior. The upper 1-sigma-like bound on the confidence interval.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_med_photogeo','parsec','','','The median of the photogeometric distance posterior. The photogeometric distance estimate.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_lo_photogeo','parsec','','','The 16th percentile of the photogeometric distance posterior. The lower 1-sigma-like bound on the confidence interval.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_hi_photogeo','parsec','','','The 84th percentile of the photogeometric distance posterior. The upper 1-sigma-like bound on the confidence interval.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','r_flag','','','','Additional information on the solution. Do not use for filtering (see Bailer-Jones et al. 2021).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','tmass_id','','','','2MASS source designation formed from sexigesimal coordinates','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','tmass_distance','arcsec','','','Angular distance between the Gaia source and its best neighbour in 2MASS point source catalog','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','j_m','mag','','','2MASS J band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','j_msigcom','mag','','','Combined (total) J band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','h_m','mag','','','2MASS H band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','h_msigcom','mag','','','Combined (total) H band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','k_m','mag','','','2MASS K band selected "default" magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','k_msigcom','mag','','','Combined (total) K band photometric uncertainty','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ph_qual','','','','Flag indicating 2MASS photometric quality of source (see 2MASS PSC documentation at IRSA).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gal_contam','','','','Flag indicating if src is contaminated by extended source in 2MASS (see 2MASS PSC documentation at IRSA).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mp_flg','','','','If nonzero, the 2MASS source is positionally associated with an asteroid, comet, etc','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','contamination','','','','Metric indicating maximum contamination level by neighboring objects, evaluated using the Gaia G, BP, and RP magnitudes.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','gaia_cleanmatch','','','','A value of 1 indicates the contamination level by the neighboring object(s) is below 0.0084. The source spectrum should be unaffected by the neighboring object.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ebv','mag','','','reddening given by the 3D dustmap (Green et al. 2019) at the distance of R_MED_PHOTOGEO.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ebv_sigma_up','mag','','','Reddening uncertainty on the upper side (estimated using the 84-th percentile in the reddening posterior at the distance given by R_HI_PHOTOGEO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ebv_sigma_dn','mag','','','Reddening uncertainty on the lower side (estimated using the 16-th percentile in the reddening posterior at the distance given by R_LO_PHOTOGEO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','m_g','mag','','','Absolute G-band magnitude','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','m_g_err_up','mag','','','Uncertainty on the upper (fainter) side for absolute G-band magnitude (estimated using EBV-EBV_SIGMA_DN and R_LO_PHOTOGEO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','m_g_err_dn','mag','','','Uncertainty on the lower (brighter) side for absolute G-band magnitude (estimated using EBV+EBV_SIGMA_UP and R_HI_PHOTOGEO)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','bprpc','mag','','','Extinction-corrected BP-RP color','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','bprpc_err_up','mag','','','Uncertainty on the redder side for the extinction-corrected BP-RP color (propagated using EBV, EBV_SIGMA_DN, and uncertainty on BP and RP magnitudes)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','bprpc_err_dn','mag','','','Uncertainty on the bluer side for the extinction-corrected BP-RP color (propagated using EBV, EBV_SIGMA_UP, and uncertainty on BP and RP magnitudes)','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','dustclean','','','','A value of 1 indicates there is a valid reddening estimate.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','goodstars','','','','A value of 1 indicates the star belongs to the GOODSTARS set. This is always true in this table.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','simbad_main_id','','','','Main ID of the star on Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','otype_s','','','','Object type given by Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','sp_type','','','','Spectral type given by Simbad.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','sp_qual','','','','Quality of the spectral type determination (A:best, E:worst).','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','sp_bibcode','','','','Reference of the spectral type determination','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mk_ds','','','','Dispersive system used for the MK/MSS spectral type determination','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mk_spectral_type','','','','Simbad Morgan-Keenan (MK) spectral type','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','mk_bibcode','','','','Reference of the MK spectral type','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_nmag_ok_g','mag','','','Number of detections for the object in PS1 g filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_nmag_ok_r','mag','','','Number of detections for the object in PS1 r filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_nmag_ok_i','mag','','','Number of detections for the object in PS1 i filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_nmag_ok_z','mag','','','Number of detections for the object in PS1 z filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_nmag_ok_y','mag','','','Number of detections for the object in PS1 y filter.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_mean_g','maggies','','','Mean flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_mean_r','maggies','','','Mean flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_mean_i','maggies','','','Mean flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_mean_z','maggies','','','Mean flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_mean_y','maggies','','','Mean flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_err_g','maggies','','','Formal uncertainty of the mean flux estimate in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_err_r','maggies','','','Formal uncertainty of the mean flux estimate in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_err_i','maggies','','','Formal uncertainty of the mean flux estimate in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_err_z','maggies','','','Formal uncertainty of the mean flux estimate in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_err_y','maggies','','','Formal uncertainty of the mean flux estimate in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_stdev_g','maggies','','','Standard deviation of the flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_stdev_r','maggies','','','Standard deviation of the flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_stdev_i','maggies','','','Standard deviation of the flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_stdev_z','maggies','','','Standard deviation of the flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_stdev_y','maggies','','','Standard deviation of the flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_g','maggies','','','Median flux in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_r','maggies','','','Median flux in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_i','maggies','','','Median flux in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_z','maggies','','','Median flux in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_y','maggies','','','Median flux in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q25_g','maggies','','','25-th percentile flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q25_r','maggies','','','25-th percentile flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q25_i','maggies','','','25-th percentile flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q25_z','maggies','','','25-th percentile flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q25_y','maggies','','','25-th percentile flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q75_g','maggies','','','75-th percentile flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q75_r','maggies','','','75-th percentile flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q75_i','maggies','','','75-th percentile flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q75_z','maggies','','','75-th percentile flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_q75_y','maggies','','','75-th percentile flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_ap_g','maggies','','','Median aperture flux among all okay detections in PS1 g.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_ap_r','maggies','','','Median aperture flux among all okay detections in PS1 r.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_ap_i','maggies','','','Median aperture flux among all okay detections in PS1 i.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_ap_z','maggies','','','Median aperture flux among all okay detections in PS1 z.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_median_ap_y','maggies','','','Median aperture flux among all okay detections in PS1 y.','0');
INSERT DBColumns VALUES('mastar_goodstars_xmatch_gaiaedr3','ps1_obj_id','','','','Unique object identifier in PS1. A value of zero means the object has no match in the PS1 catalog.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','mangaid','','','','MaNGA-ID for the target.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','minmjd','','','','Minimum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','maxmjd','','','','Maximum Modified Julian Date of Observations.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','nvisits','','','','Number of visits for this star (including good and bad observations).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','nplates','','','','Number of plates this star is on.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','ngoodvisits','','','','','0');
INSERT DBColumns VALUES('mastar_goodstars_params','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_med','K','','','Median effective temperature among groups with valid measurements','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_med','log(cm/s^2)','','','Median surface gravity among groups with valid measurements','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_med','','','','Median [Fe/H] among groups with valid measurements','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_cal_med','','','','Median calibrated [Fe/H] among groups with valid measurements (calibrated using crossmatch with APOGEE to stellar parameters derived by ASPCAP).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_med','','','','Median [alpha/Fe] among groups with valid measurements','0');
INSERT DBColumns VALUES('mastar_goodstars_params','zh_med','','','','Median [Z/H] computed based on FEH_MED and ALPHA_MED.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','zh_cal_med','','','','Median calibrated [Z/H] computed based on FEH_CAL_MED and ALPHA_MED.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_med_err','K','','','Uncertainty of the median effective temperature (median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_med_err','log(cm/s^2)','','','Uncertainty of the median surface gravity (median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_med_err','','','','Uncertainty of the median [Fe/H] (median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_cal_med_err','','','','Uncertainty of the median calibrated [Fe/H] (median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_med_err','','','','Uncertainty of the median [alpha/Fe] (median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','zh_med_err','','','','Propagated uncertainty of the computed [Z/H]','0');
INSERT DBColumns VALUES('mastar_goodstars_params','zh_cal_med_err','','','','Propagated uncertainty of the computed, calibrated [Z/H]','0');
INSERT DBColumns VALUES('mastar_goodstars_params','ngroups','','','','Number of groups whose median measurements are used to derive the median parameters for Teff, logg, and [Fe/H].','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_groups_0','','','','Flag indicating whether the measurement of JI contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_groups_1','','','','Flag indicating whether the measurement of DL contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_groups_2','','','','Flag indicating whether the measurement of LH contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_groups_3','','','','Flag indicating whether the measurement of YC contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_groups_name','','','','Letter abbreviations of the groups from which the median measurements for Teff, logg, and [Fe/H] are based on.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','nalphagroups','','','','Number of groups whose measurements are used to derive the median [alpha/Fe].','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_alpha_groups_0','','','','Flag indicating whether the [alpha/Fe] measurement of JI contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_alpha_groups_1','','','','Flag indicating whether the [alpha/Fe] measurement of DL contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_alpha_groups_2','','','','Flag indicating whether the [alpha/Fe] measurement of LH contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_alpha_groups_3','','','','Flag indicating whether the [alpha/Fe] measurement of YC contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','input_alpha_groups_name','','','','Letter abbreviations of the groups from which the median [alpha/Fe] measurement is based on.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_ji','K','','','Median (among visits) effective temperature derived by Julie Imig (JI hereafter).','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_ji','log(cm/s^2)','','','Median (among visits) urface gravity derived by JI','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_ji','','','','Median (among visits) [Fe/H] derived by JI','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_ji','','','','Median (among visits) [alpha/Fe] derived by JI','0');
INSERT DBColumns VALUES('mastar_goodstars_params','vmicro_ji','log(km/s)','','','Median (among visits) micro-turbulence velocity derived by JI','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_err_ji','K','','','Uncertainty of the effective temperature derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_err_ji','log(cm/s^2)','','','Uncertainty of the surface gravity derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_err_ji','','','','Uncertainty of the [Fe/H] derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_err_ji','','','','Uncertainty of the [alpha/Fe] derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','vmicro_err_ji','log(km/s)','','','Uncertainty of the micro-turbulence velocity derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','valid_ji','','','','Flag indicating quality of the fit performed by JI. A value of 1 means good, and 0 means bad.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_dl','K','','','Median (among visits) effective temperature derived by Daniel Lazarz (DL hereafter)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_dl','log(cm/s^2)','','','Median (among visits) surface gravity derived by DL','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_dl','','','','Median (among visits) [Fe/H] derived by DL','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_dl','','','','Median (among visits) [alpha/Fe] derived by DL','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_err_dl','K','','','Uncertainty of the median effective temperature derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_err_dl','log(cm/s^2)','','','Uncertainty of the median surface gravity derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_err_dl','','','','Uncertainty of the median [Fe/H] derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_err_dl','','','','Uncertainty of the median [alpha/Fe] derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','av_dl','mag','','','Median extinction (among visits) in V-band derived by DL','0');
INSERT DBColumns VALUES('mastar_goodstars_params','av_err_dl','mag','','','Uncertainty of the extinction derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','av_valid_dl','','','','Flag indicating validity of the extinction estimate. A value of 1 means good, and 0 means bad','0');
INSERT DBColumns VALUES('mastar_goodstars_params','valid_dl','','','','Flag indicating quality of the fit performed by DL. A value of 1 means good, and 0 means bad','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_lh','K','','','Median (among visits) effective temperature derived by Lewis Hill (hereafter LH)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_lh','log(cm/s^2)','','','Median (among visits) surface gravity derived by LH','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_lh','','','','Median (among visits) [Fe/H] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_lh','','','','Median (among visits) [alpha/Fe] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_err_lh','K','','','Uncertainty of the median effective temperature derived by LH (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_err_lh','log(cm/s^2)','','','Uncertainty of the median surface gravity derived by LH (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_err_lh','','','','Uncertainty of the median [Fe/H] derived by LH (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_err_lh','','','','Uncertainty of the median [alpha/Fe] derived by LH (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','valid_lh','','','','Flag indicating quality of the fit performed by LH. A value of 1 means good, and 0 means bad.','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_yc','K','','','Median (among visits) effective temperature derived by Yanping Chen (hereafter YC)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_yc','log(cm/s^2)','','','Median (among visits) surface gravity derived by YC','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_yc','','','','Median (among visits) [Fe/H] derived by YC','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_yc','','','','Median (among visits) [alpha/Fe] derived by YC','0');
INSERT DBColumns VALUES('mastar_goodstars_params','teff_err_yc','K','','','Uncertainty of the median effective temperature derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','logg_err_yc','log(cm/s^2)','','','Uncertainty of the median surface gravity derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','feh_err_yc','','','','Uncertainty of the median [Fe/H] derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','alpha_err_yc','','','','Uncertainty of the median [alpha/Fe] derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodstars_params','valid_yc','','','','Flag indicating quality of the fit performed by YC. A value of 1 means good, and zero means bad.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','drpver','','','','Version of mangadrp.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','mprocver','','','','Version of mastarproc.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','mangaid','','','','MaNGA-ID for the object.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','plate','','','','Plate ID.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','ifudesign','','','','IFUDESIGN for the fiber bundle.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','mjd','','','','Modified Julian Date for this visit.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','ra','deg','','','Right Ascension for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','dec','deg','','','Declination for this object at the time given by the EPOCH column (Equinox J2000).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','epoch','','','','Epoch of the astrometry (which is approximate for some catalogs).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','ifura','deg','','','Right Ascension of the center of the IFU.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','ifudec','deg','','','Declination of the center of the IFU.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','mngtarg2','','','','MANGA_TARGET2 targeting bitmask.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','mjdqual','','','','Spectral quality bitmask (MASTAR_QUAL).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_med','K','','','Median effective temperature among all valid measurements','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_med','log(cm/s^2)','','','Median surface gravity among all valid measurements','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_med','','','','Median [Fe/H] among all valid measurements','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_cal_med','','','','Median calibrated [Fe/H] among all valid measurements (calibrated using crossmatch with APOGEE to stellar parameters derived by ASPCAP).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_med','','','','Median [alpha/Fe] among all valid measurements','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','zh_med','','','','Median [Z/H] among all valid measurements (computed based on FEH_MED and ALPHA_MED).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','zh_cal_med','','','','Median calibrated [Z/H] among all valid measurements (computed based on FEH_CAL_MED and ALPHA_MED).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_med_err','K','','','Uncertainty of the median effective temperature (derived using median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_med_err','log(cm/s^2)','','','Uncertainty of the median surface gravity (derived using median absolute deviation among groups or the median uncertainty among groups, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_med_err','','','','Uncertainty of the median [Fe/H] (derived using median absolute deviation among groups or the median uncertainty among groups,whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_cal_med_err','','','','Uncertainty of the median calibrated [Fe/H] (derived using median absolute deviation among groups or the median uncertainty among groups,whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_med_err','','','','Uncertainty of the median [alpha/Fe] (derived using median absolute deviation among groups or the median uncertainty among groups,whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','zh_med_err','','','','Propagated uncertainty of the computed [Z/H]','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','zh_cal_med_err','','','','Propagated uncertainty of the computed, calibrated [Z/H]','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','ngroups','','','','Number of groups whose measurements are used to derive the median parameters for Teff, logg, and [Fe/H].','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_groups_0','','','','Flag indicating whether the measurement of JI contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_groups_1','','','','Flag indicating whether the measurement of DL contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_groups_2','','','','Flag indicating whether the measurement of LH contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_groups_3','','','','Flag indicating whether the measurement of YC contributed to the median. 1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_groups_name','','','','Letter abbreviations of the groups from which the median measurements for Teff, logg, and [Fe/H] are based on.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','nalphagroups','','','','Number of groups whose measurements are used to derive the median [alpha/Fe].','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_alpha_groups_0','','','','Flag indicating whether the [alpha/Fe] measurement of JI contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_alpha_groups_1','','','','Flag indicating whether the [alpha/Fe] measurement of DL contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_alpha_groups_2','','','','Flag indicating whether the [alpha/Fe] measurement of LH contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_alpha_groups_3','','','','Flag indicating whether the [alpha/Fe] measurement of YC contributed to the median.  1 means yes and 0 means no.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','input_alpha_groups_name','','','','Letter abbreviations of the groups from which the median [alpha/Fe] measurement is based on.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_ji','K','','','Median (among visits) effective temperature derived by Julie Imig (JI hereafter).','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_ji','log(cm/s^2)','','','Median (among visits) surface gravity derived by JI','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_ji','','','','Median (among visits) [Fe/H] derived by JI','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_ji','','','','Median (among visits) [alpha/Fe] derived by JI','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','vmicro_ji','log(km/s)','','','Median (among visits) micro-turbulence velocity derived by JI','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_err_ji','K','','','Uncertainty of the effective temperature derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_err_ji','log(cm/s^2)','','','Uncertainty of the surface gravity derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_err_ji','','','','Uncertainty of the [Fe/H] derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_err_ji','','','','Uncertainty of the [alpha/Fe] derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','vmicro_err_ji','log(km/s)','','','Uncertainty of the micro-turbulence velocity derived by JI (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','chisq_ji','','','','reduced chi-square of the fit performed by JI','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','valid_ji','','','','Flag indicating quality of the fit performed by JI. A value of 1 means good, and 0 means bad.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_dl','K','','','Median (among visits) effective temperature derived by Daniel Lazarz (DL hereafter)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_dl','log(cm/s^2)','','','Median (among visits) surface gravity derived by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_dl','','','','Median (among visits) [Fe/H] derived by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_dl','','','','Median (among visits) [alpha/Fe] derived by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_err_dl','K','','','Uncertainty of the median effective temperature derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_err_dl','log(cm/s^2)','','','Uncertainty of the median surface gravity derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_err_dl','','','','Uncertainty of the median [Fe/H] derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_err_dl','','','','Uncertainty of the median [alpha/Fe] derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','chisq_dl','','','','Reduced chi-square of the fit performed by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','av_dl','mag','','','Median extinction (among visits) in V-band derived by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','av_err_dl','mag','','','Uncertainty of the extinction derived by DL (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','av_chisq_dl','','','','Reduced chi-square of the extinction fit performed by DL','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','av_valid_dl','','','','Flag indicating validity of the extinction estimate. A value of 1 means good, and 0 means bad','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','valid_dl','','','','Flag indicating quality of the fit performed by DL. A value of 1 means good, and 0 means bad','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_lh','K','','','Median (among visits) effective temperature derived by Lewis Hill (hereafter LH)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_lh','log(cm/s^2)','','','Median (among visits) surface gravity derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_lh','','','','Median (among visits) [Fe/H] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_lh','','','','Median (among visits) [alpha/Fe] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_err_up_lh','K','','','Upward uncertainty of effective temperature derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_err_dn_lh','K','','','Downward uncertainty of effective temperature derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_err_up_lh','log(cm/s^2)','','','Upward uncertainty of surface gravity derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_err_dn_lh','log(cm/s^2)','','','Downward uncertainty of surface gravity derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_err_up_lh','','','','Upward uncertainty of [Fe/H] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_err_dn_lh','','','','Downward uncertainty of [Fe/H] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_err_up_lh','','','','Upward uncertainty of [alpha/Fe] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_err_dn_lh','','','','Downward uncertainty of [alpha/Fe] derived by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','chisq_lh','','','','Reduced chi-square of the fit performed by LH','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','model_lh','','','','Template set used by LH for this visit-spectrum. It is either ''BOSZ'' or ''MARCS''.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','valid_lh','','','','Flag indicating quality of the fit performed by LH. A value of 1 means good, and 0 means bad.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_yc','K','','','Median (among visits) effective temperature derived by Yanping Chen (hereafter YC)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_yc','log(cm/s^2)','','','Median (among visits) surface gravity derived by YC','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_yc','','','','Median (among visits) [Fe/H] derived by YC','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_yc','','','','Median (among visits) [alpha/Fe] derived by YC','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','teff_err_yc','K','','','Uncertainty of the median effective temperature derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','logg_err_yc','log(cm/s^2)','','','Uncertainty of the median surface gravity derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','feh_err_yc','','','','Uncertainty of the median [Fe/H] derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','alpha_err_yc','','','','Uncertainty of the median [alpha/Fe] derived by YC (median absolute deviation or the median uncertainty among visits, whichever is larger)','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','chisq_yc','','','','Reduced chi-square of the fit performed by YC','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','model_yc','','','','Template set used by YC for this visit-spectrum. It is either ''BOSZ'' or ''MARCS''.','0');
INSERT DBColumns VALUES('mastar_goodvisits_params','valid_yc','','','','Flag indicating quality of the fit performed by YC. A value of 1 means good, and zero means bad.','0');
INSERT DBColumns VALUES('qsoVarPTF','VAR_OBJID','','','','ObjId','0');
INSERT DBColumns VALUES('qsoVarPTF','THING_ID_TARGETING','','','','ThingID, as in the DR13 target list','0');
INSERT DBColumns VALUES('qsoVarPTF','RA','deg','','','RA (DR12 astrometry)','0');
INSERT DBColumns VALUES('qsoVarPTF','DEC','deg','','','DEC (DR12 astrometry)','0');
INSERT DBColumns VALUES('qsoVarPTF','VAR_MATCHED','','','','Number of epoqs used for the lightcurve construction. For SDSS, one epoq = a single observation. For PTF, one epoq = a set of (coadded) observations, typically from a few months to a year. There are at least two PTF and one SDSS epoq for each object.','0');
INSERT DBColumns VALUES('qsoVarPTF','VAR_CHI2','','','','Reduced chi2 when the combined light curve is adjusted to a constant','0');
INSERT DBColumns VALUES('qsoVarPTF','VAR_A','','','','Structure function parameter A as defined in Palanque-Delabrouille et al. (2011)','0');
INSERT DBColumns VALUES('qsoVarPTF','VAR_GAMMA','','','','Structure function parameter gamma as defined in Palanque-Delabrouille et al. (2011)','0');
INSERT DBColumns VALUES('qsoVarStripe','VAR_OBJID','','','','ObjId','0');
INSERT DBColumns VALUES('qsoVarStripe','RA','deg','','','RA (DR12 astrometry)','0');
INSERT DBColumns VALUES('qsoVarStripe','DEC','deg','','','DEC (DR12 astrometry)','0');
INSERT DBColumns VALUES('qsoVarStripe','VAR_CHI2','','','','Reduced chi2 when the combined light curve is adjusted to a constant','0');
INSERT DBColumns VALUES('qsoVarStripe','VAR_A','','','','Structure function parameter A as defined in Palanque-Delabrouille et al. (2011)','0');
INSERT DBColumns VALUES('qsoVarStripe','VAR_GAMMA','','','','Structure function parameter gamma as defined in Palanque-Delabrouille et al. (2011)','0');
INSERT DBColumns VALUES('qsoVarStripe','NEPOQS','','','','Number of epoqs (SDSS observations) used in lightcurve','0');
INSERT DBColumns VALUES('qsoVarStripe','CHI2_U','','','','Reduced chi2 in u band','0');
INSERT DBColumns VALUES('qsoVarStripe','CHI2_G','','','','Reduced chi2 in g band','0');
INSERT DBColumns VALUES('qsoVarStripe','CHI2_R','','','','Reduced chi2 in r band','0');
INSERT DBColumns VALUES('qsoVarStripe','CHI2_I','','','','Reduced chi2 in i band','0');
INSERT DBColumns VALUES('qsoVarStripe','CHI2_Z','','','','Reduced chi2 in z band','0');
INSERT DBColumns VALUES('qsoVarStripe','VAR_NN','','','','Variability neural network output to discriminate stars against QSO','0');
INSERT DBColumns VALUES('qsoVarStripe','MJD_FIRST','','','','MJD for the first observation','0');
INSERT DBColumns VALUES('qsoVarStripe','MJD_LAST','','','','MJD for the last observation','0');
INSERT DBColumns VALUES('Frame','fieldID','','ID_FIELD','','Link to the field table','0');
INSERT DBColumns VALUES('Frame','zoom','','INST_SCALE','','Zoom level 2^(zoom/10)','0');
INSERT DBColumns VALUES('Frame','run','','OBS_RUN','','Run number','0');
INSERT DBColumns VALUES('Frame','rerun','','ID_NUMBER','','Rerun number','0');
INSERT DBColumns VALUES('Frame','camcol','','INST_ID','','Camera column','0');
INSERT DBColumns VALUES('Frame','field','','ID_FIELD','','Field number','0');
INSERT DBColumns VALUES('Frame','stripe','','ID_AREA','','Stripe number','0');
INSERT DBColumns VALUES('Frame','strip','','ID_AREA','','Strip number (N or S)','0');
INSERT DBColumns VALUES('Frame','a','deg','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','b','deg/pix','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','c','deg/pix','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','d','deg','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','e','deg/pix','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','f','deg/pix','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','node','deg','POS_TRANS_PARAM','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','incl','deg','POS_INCLIN','','Astrometric coefficient','0');
INSERT DBColumns VALUES('Frame','raMin','deg','POS_EQ_RA_OTHER','','Min of ra','0');
INSERT DBColumns VALUES('Frame','raMax','deg','POS_EQ_RA_OTHER','','Max of ra','0');
INSERT DBColumns VALUES('Frame','decMin','deg','POS_EQ_DEC_OTHER','','Min of dec','0');
INSERT DBColumns VALUES('Frame','decMax','deg','POS_EQ_DEC_OTHER','','Max of dec','0');
INSERT DBColumns VALUES('Frame','mu','deg','POS_SDSS_MU','','Survey mu of frame center','0');
INSERT DBColumns VALUES('Frame','nu','deg','POS_SDSS_NU','','Survey nu of frame center','0');
INSERT DBColumns VALUES('Frame','ra','deg','POS_EQ_RA_MAIN','','Ra of frame center','0');
INSERT DBColumns VALUES('Frame','dec','deg','POS_EQ_RA_MAIN','','Dec of frame center','0');
INSERT DBColumns VALUES('Frame','cx','','POS_EQ_CART_X','','Cartesian x of frame center','0');
INSERT DBColumns VALUES('Frame','cy','','POS_EQ_CART_Y','','Cartesian y of frame center','0');
INSERT DBColumns VALUES('Frame','cz','','POS_EQ_CART_Z','','Cartesian z of frame center','0');
INSERT DBColumns VALUES('Frame','htmID','','CODE_MISC','','The htmID for point at frame center','0');
INSERT DBColumns VALUES('Frame','img','','IMAGE?','','The image in JPEG format','0');
INSERT DBColumns VALUES('zooConfidence','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooConfidence','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooConfidence','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooConfidence','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooConfidence','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooConfidence','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooConfidence','decstring','','','','Declination in sexagesimal','0');
INSERT DBColumns VALUES('zooConfidence','f_unclass_clean','','','','fraction of galaxies in same bin that are unclassified, clean condition','0');
INSERT DBColumns VALUES('zooConfidence','f_misclass_clean','','','','fraction of galaxies in same bin that are misclassified, clean condition','0');
INSERT DBColumns VALUES('zooConfidence','avcorr_clean','','','','average bias correction in bin, clean condition','0');
INSERT DBColumns VALUES('zooConfidence','stdcorr_clean','','','','std dev of bias corrections in bin, clean condition','0');
INSERT DBColumns VALUES('zooConfidence','f_misclass_greater','','','','fraction of galaxies in same bin that are misclassified, greater condition','0');
INSERT DBColumns VALUES('zooConfidence','avcorr_greater','','','','average bias correction in bin, greater condition','0');
INSERT DBColumns VALUES('zooConfidence','stdcorr_greater','','','','std dev of bias corrections in bin, greater condition','0');
INSERT DBColumns VALUES('zooMirrorBias','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooMirrorBias','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooMirrorBias','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooMirrorBias','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooMirrorBias','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooMirrorBias','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooMirrorBias','decstring','','','','Declination in sexagesimal','0');
INSERT DBColumns VALUES('zooMirrorBias','nvote_mr1','','','','number of votes, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_el_mr1','','','','fraction of votes for elliptical, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_cw_mr1','','','','fraction of votes for clockwise spiral, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_acw_mr1','','','','fraction of votes for anticlockwise spiral, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_edge_mr1','','','','fraction of votes for edge-on disk, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_dk_mr1','','','','fraction of votes for don''t know, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_mg_mr1','','','','fraction of votes for merger, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_cs_mr1','','','','fraction of votes for combined spiral, vertical mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','nvote_mr2','','','','number of votes, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_el_mr2','','','','fraction of votes for elliptical, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_cw_mr2','','','','fraction of votes for clockwise spiral, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_acw_mr2','','','','fraction of votes for anticlockwise spiral, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_edge_mr2','','','','fraction of votes for edge-on disk, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_dk_mr2','','','','fraction of votes for don''t know, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_mg_mr2','','','','fraction of votes for merger, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMirrorBias','p_cs_mr2','','','','fraction of votes for combined spiral, diagonal mirroring','0');
INSERT DBColumns VALUES('zooMonochromeBias','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooMonochromeBias','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooMonochromeBias','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooMonochromeBias','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooMonochromeBias','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooMonochromeBias','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooMonochromeBias','decstring','','','','Declination in sexagesimal','0');
INSERT DBColumns VALUES('zooMonochromeBias','nvote_mon','','','','number of votes, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_el_mon','','','','fraction of votes for elliptical, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_cw_mon','','','','fraction of votes for clockwise spiral, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_acw_mon','','','','fraction of votes for anticlockwise spiral, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_edge_mon','','','','fraction of votes for edge-on disk, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_dk_mon','','','','fraction of votes for don''t know, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_mg_mon','','','','fraction of votes for merger, monochrome','0');
INSERT DBColumns VALUES('zooMonochromeBias','p_cs_mon','','','','fraction of votes for combined spiral (cw + acw + edge-on), monochrome','0');
INSERT DBColumns VALUES('zooNoSpec','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooNoSpec','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooNoSpec','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooNoSpec','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooNoSpec','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooNoSpec','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooNoSpec','nvote','','','','number of votes','0');
INSERT DBColumns VALUES('zooNoSpec','p_el','','','','fraction of votes for elliptical','0');
INSERT DBColumns VALUES('zooNoSpec','p_cw','','','','fraction of votes for clockwise spiral','0');
INSERT DBColumns VALUES('zooNoSpec','p_acw','','','','fraction of votes for anticlockwise spiral','0');
INSERT DBColumns VALUES('zooNoSpec','p_edge','','','','fraction of votes for edge-on disk','0');
INSERT DBColumns VALUES('zooNoSpec','p_dk','','','','fraction of votes for don''t know','0');
INSERT DBColumns VALUES('zooNoSpec','p_mg','','','','fraction of votes for merger','0');
INSERT DBColumns VALUES('zooNoSpec','p_cs','','','','fraction of votes for combined spiral - cw + acw + edge-on','0');
INSERT DBColumns VALUES('zooSpec','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooSpec','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooSpec','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooSpec','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooSpec','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooSpec','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooSpec','decstring','','','','Declination in sexagesimal','0');
INSERT DBColumns VALUES('zooSpec','nvote','','','','number of votes','0');
INSERT DBColumns VALUES('zooSpec','p_el','','','','fraction of votes for elliptical','0');
INSERT DBColumns VALUES('zooSpec','p_cw','','','','fraction of votes for clockwise spiral','0');
INSERT DBColumns VALUES('zooSpec','p_acw','','','','fraction of votes for anticlockwise spiral','0');
INSERT DBColumns VALUES('zooSpec','p_edge','','','','fraction of votes for edge-on disk','0');
INSERT DBColumns VALUES('zooSpec','p_dk','','','','fraction of votes for don''t know','0');
INSERT DBColumns VALUES('zooSpec','p_mg','','','','fraction of votes for merger','0');
INSERT DBColumns VALUES('zooSpec','p_cs','','','','fraction of votes for combined spiral - cw + acw + edge-on','0');
INSERT DBColumns VALUES('zooSpec','p_el_debiased','','','','debiased fraction of votes for elliptical','0');
INSERT DBColumns VALUES('zooSpec','p_cs_debiased','','','','debiased fraction of votes for combined spiral','0');
INSERT DBColumns VALUES('zooSpec','spiral','','','','flag for combined spiral - 1 if debiased spiral fraction &gt; 0.8, 0 otherwise','0');
INSERT DBColumns VALUES('zooSpec','elliptical','','','','flag for elliptical - 1 if debiased elliptical fraction &gt; 0.8, 0 otherwise','0');
INSERT DBColumns VALUES('zooSpec','uncertain','','','','flag for uncertain type - 1 if both spiral and elliptical flags are 0','0');
INSERT DBColumns VALUES('zooVotes','specobjid','','','','match to DR8 spectrum object','0');
INSERT DBColumns VALUES('zooVotes','objid','','','','DR8 ObjID','0');
INSERT DBColumns VALUES('zooVotes','dr7objid','','','','DR7 ObjID','0');
INSERT DBColumns VALUES('zooVotes','ra','','','','Right Ascension, J2000 deg','0');
INSERT DBColumns VALUES('zooVotes','dec','','','','Declination, J2000 deg','0');
INSERT DBColumns VALUES('zooVotes','rastring','','','','Right ascension in sexagesimal','0');
INSERT DBColumns VALUES('zooVotes','decstring','','','','Declination in sexagesimal','0');
INSERT DBColumns VALUES('zooVotes','nvote_tot','','','','Total votes','0');
INSERT DBColumns VALUES('zooVotes','nvote_std','','','','Total votes for the standard classification','0');
INSERT DBColumns VALUES('zooVotes','nvote_mr1','','','','Total votes for the vertical mirrored classification','0');
INSERT DBColumns VALUES('zooVotes','nvote_mr2','','','','Total votes for the diagonally mirrored classification','0');
INSERT DBColumns VALUES('zooVotes','nvote_mon','','','','Total votes for the monochrome classification','0');
INSERT DBColumns VALUES('zooVotes','p_el','','','','Fraction of votes for elliptical','0');
INSERT DBColumns VALUES('zooVotes','p_cw','','','','Fraction of votes for clockwise spiral','0');
INSERT DBColumns VALUES('zooVotes','p_acw','','','','Fraction of votes for anticlockwise spiral','0');
INSERT DBColumns VALUES('zooVotes','p_edge','','','','Fraction of votes for edge-on disk','0');
INSERT DBColumns VALUES('zooVotes','p_dk','','','','Fraction of votes for don''t know','0');
INSERT DBColumns VALUES('zooVotes','p_mg','','','','Fraction of votes for merger','0');
INSERT DBColumns VALUES('zooVotes','p_cs','','','','Fraction of votes for combined spiral - cw + acw + edge-on','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','dr8objid','','','','match to the DR8 objID','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','dr7objid','','','','match to the DR7 objID','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','ra','','','','right ascension [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','dec','','','','declination [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','rastring','','','','right ascension [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','decstring','','','','declination [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','sample','','','','sub-sample identification','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','total_classifications','','','','total number of classifications for this galaxy','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','total_votes','','','','total number of votes for each response, summed over all classifications','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_count','','','','number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_weight','','','','consistency-weighted number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_fraction','','','','fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_debiased','','','','debiased fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a01_smooth_flag','','','','flag for "smooth" - 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_count','','','','number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_weight','','','','consistency-weighted number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_fraction','','','','fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','consistency-weighted fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_debiased','','','','debiased fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a02_features_or_disk_flag','','','','flag for "features or disk"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_count','','','','number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_weight','','','','consistency-weighted number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','consistency-weighted fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','debiased fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t01_smooth_or_features_a03_star_or_artifact_flag','','','','flag for "star or artifact"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_count','','','','number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_weight','','','','consistency-weighted number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_fraction','','','','fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_debiased','','','','debiased fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a04_yes_flag','','','','flag for "edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_count','','','','number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_weight','','','','consistency-weighted number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_fraction','','','','fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_weighted_fraction','','','','consistency-weighted fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_debiased','','','','debiased fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t02_edgeon_a05_no_flag','','','','flag for "not edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_count','','','','number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_weight','','','','consistency-weighted number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_fraction','','','','fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_debiased','','','','debiased fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a06_bar_flag','','','','flag for "bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_count','','','','number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_weight','','','','consistency-weighted number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_fraction','','','','fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_debiased','','','','debiased fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t03_bar_a07_no_bar_flag','','','','flag for "no bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_count','','','','number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_weight','','','','consistency-weighted number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_fraction','','','','fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_debiased','','','','debiased fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a08_spiral_flag','','','','flag for "spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_count','','','','number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_weight','','','','consistency-weighted number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_fraction','','','','fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_debiased','','','','debiased fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t04_spiral_a09_no_spiral_flag','','','','flag for "no spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_count','','','','number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_weight','','','','consistency-weighted number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_fraction','','','','fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_debiased','','','','debiased fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a10_no_bulge_flag','','','','flag for "no bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_count','','','','number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_weight','','','','consistency-weighted number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_fraction','','','','fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','consistency-weighted fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_debiased','','','','debiased fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a11_just_noticeable_flag','','','','flag for "just noticeable bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_count','','','','number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_weight','','','','consistency-weighted number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_fraction','','','','fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','consistency-weighted fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_debiased','','','','debiased fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a12_obvious_flag','','','','flag for "obvious bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_count','','','','number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_weight','','','','consistency-weighted number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_fraction','','','','fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','consistency-weighted fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_debiased','','','','debiased fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t05_bulge_prominence_a13_dominant_flag','','','','flag for "dominant bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_count','','','','number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_weight','','','','consistency-weighted number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_fraction','','','','fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_debiased','','','','debiased fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a14_yes_flag','','','','flag for "something odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_count','','','','number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_weight','','','','consistency-weighted number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_fraction','','','','fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_weighted_fraction','','','','consistency-weighted fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_debiased','','','','debiased fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t06_odd_a15_no_flag','','','','flag for "nothing odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_count','','','','number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_weight','','','','consistency-weighted number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_fraction','','','','fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_debiased','','','','debiased fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a16_completely_round_flag','','','','flag for "smooth and completely round"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_count','','','','number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_weight','','','','consistency-weighted number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_fraction','','','','fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_debiased','','','','debiased fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a17_in_between_flag','','','','flag for "smooth and in-between roundness"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_count','','','','number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_weight','','','','consistency-weighted number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_fraction','','','','fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_debiased','','','','debiased fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t07_rounded_a18_cigar_shaped_flag','','','','flag for "smooth and cigar-shaped"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_count','','','','number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_weight','','','','consistency-weighted number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_fraction','','','','fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_debiased','','','','debiased fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a19_ring_flag','','','','flag for "odd feature is a ring"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_count','','','','number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_weight','','','','consistency-weighted number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_fraction','','','','fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_debiased','','','','debiased fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a20_lens_or_arc_flag','','','','flag for "odd feature is a lens or arc"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_count','','','','number of votes for the "odd feature is a disturbed" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_weight','','','','consistency-weighted number of votes for the "odd feature is a disturbed galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_fraction','','','','fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a disturbed galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_debiased','','','','debiased fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a21_disturbed_flag','','','','flag for "odd feature is a disturbed galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_count','','','','number of votes for the "odd feature is an irregular" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_weight','','','','consistency-weighted number of votes for the "odd feature is an irregular galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_fraction','','','','fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is an irregular galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_debiased','','','','debiased fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a22_irregular_flag','','','','flag for "odd feature is an irregular galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_count','','','','number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_weight','','','','consistency-weighted number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_fraction','','','','fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_debiased','','','','debiased fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a23_other_flag','','','','flag for "odd feature is something else"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_count','','','','number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_weight','','','','consistency-weighted number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_fraction','','','','fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_debiased','','','','debiased fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a24_merger_flag','','','','flag for "odd feature is a merger"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_count','','','','number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_weight','','','','consistency-weighted number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_fraction','','','','fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_debiased','','','','debiased fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t08_odd_feature_a38_dust_lane_flag','','','','flag for "odd feature is a dust lane"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_count','','','','number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_weight','','','','consistency-weighted number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_fraction','','','','fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_debiased','','','','debiased fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a25_rounded_flag','','','','flag for "edge-on bulge is rounded"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_count','','','','number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_weight','','','','consistency-weighted number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_fraction','','','','fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_debiased','','','','debiased fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a26_boxy_flag','','','','flag for "edge-on bulge is boxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_count','','','','number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_weight','','','','consistency-weighted number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_fraction','','','','fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_debiased','','','','debiased fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t09_bulge_shape_a27_no_bulge_flag','','','','flag for "no edge-on bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_count','','','','number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_weight','','','','consistency-weighted number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_fraction','','','','fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_weighted_fraction','','','','consistency-weighted fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_debiased','','','','debiased fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a28_tight_flag','','','','flag for "tightly wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_count','','','','number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_weight','','','','consistency-weighted number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_fraction','','','','fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_weighted_fraction','','','','consistency-weighted fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_debiased','','','','debiased fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a29_medium_flag','','','','flag for "medium wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_count','','','','number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_weight','','','','consistency-weighted number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_fraction','','','','fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_weighted_fraction','','','','consistency-weighted fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_debiased','','','','debiased fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t10_arms_winding_a30_loose_flag','','','','flag for "loosely wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_count','','','','number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_weight','','','','consistency-weighted number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_fraction','','','','fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_weighted_fraction','','','','consistency-weighted fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_debiased','','','','debiased fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a31_1_flag','','','','flag for "1 spiral arm"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_count','','','','number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_weight','','','','consistency-weighted number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_fraction','','','','fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_weighted_fraction','','','','consistency-weighted fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_debiased','','','','debiased fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a32_2_flag','','','','flag for "2 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_count','','','','number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_weight','','','','consistency-weighted number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_fraction','','','','fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_weighted_fraction','','','','consistency-weighted fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_debiased','','','','debiased fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a33_3_flag','','','','flag for "3 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_count','','','','number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_weight','','','','consistency-weighted number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_fraction','','','','fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_weighted_fraction','','','','consistency-weighted fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_debiased','','','','debiased fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a34_4_flag','','','','flag for "4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_count','','','','number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_weight','','','','consistency-weighted number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_fraction','','','','fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_weighted_fraction','','','','consistency-weighted fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_debiased','','','','debiased fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a36_more_than_4_flag','','','','flag for "more than 4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_count','','','','number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_weight','','','','consistency-weighted number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_fraction','','','','fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_debiased','','','','debiased fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainPhotoz','t11_arms_number_a37_cant_tell_flag','','','','flag for "spiral arms present, but can''t tell how many"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','specobjid','','','','match to the DR8 spectrum object','0');
INSERT DBColumns VALUES('zoo2MainSpecz','dr8objid','','','','match to the DR8 objID','0');
INSERT DBColumns VALUES('zoo2MainSpecz','dr7objid','','','','match to the DR7 objID','0');
INSERT DBColumns VALUES('zoo2MainSpecz','ra','','','','right ascension [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2MainSpecz','dec','','','','declination [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2MainSpecz','rastring','','','','right ascension [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2MainSpecz','decstring','','','','declination [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2MainSpecz','sample','','','','sub-sample identification','0');
INSERT DBColumns VALUES('zoo2MainSpecz','total_classifications','','','','total number of classifications for this galaxy','0');
INSERT DBColumns VALUES('zoo2MainSpecz','total_votes','','','','total number of votes for each response, summed over all classifications','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_count','','','','number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_weight','','','','consistency-weighted number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_fraction','','','','fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_debiased','','','','debiased fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a01_smooth_flag','','','','flag for "smooth" - 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_count','','','','number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_weight','','','','consistency-weighted number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_fraction','','','','fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','consistency-weighted fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_debiased','','','','debiased fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a02_features_or_disk_flag','','','','flag for "features or disk"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_count','','','','number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_weight','','','','consistency-weighted number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','consistency-weighted fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','debiased fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t01_smooth_or_features_a03_star_or_artifact_flag','','','','flag for "star or artifact"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_count','','','','number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_weight','','','','consistency-weighted number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_fraction','','','','fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_debiased','','','','debiased fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a04_yes_flag','','','','flag for "edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_count','','','','number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_weight','','','','consistency-weighted number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_fraction','','','','fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_weighted_fraction','','','','consistency-weighted fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_debiased','','','','debiased fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t02_edgeon_a05_no_flag','','','','flag for "not edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_count','','','','number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_weight','','','','consistency-weighted number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_fraction','','','','fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_debiased','','','','debiased fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a06_bar_flag','','','','flag for "bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_count','','','','number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_weight','','','','consistency-weighted number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_fraction','','','','fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_debiased','','','','debiased fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t03_bar_a07_no_bar_flag','','','','flag for "no bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_count','','','','number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_weight','','','','consistency-weighted number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_fraction','','','','fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_debiased','','','','debiased fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a08_spiral_flag','','','','flag for "spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_count','','','','number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_weight','','','','consistency-weighted number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_fraction','','','','fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_debiased','','','','debiased fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t04_spiral_a09_no_spiral_flag','','','','flag for "no spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_count','','','','number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_weight','','','','consistency-weighted number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_fraction','','','','fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_debiased','','','','debiased fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a10_no_bulge_flag','','','','flag for "no bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_count','','','','number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_weight','','','','consistency-weighted number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_fraction','','','','fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','consistency-weighted fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_debiased','','','','debiased fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a11_just_noticeable_flag','','','','flag for "just noticeable bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_count','','','','number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_weight','','','','consistency-weighted number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_fraction','','','','fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','consistency-weighted fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_debiased','','','','debiased fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a12_obvious_flag','','','','flag for "obvious bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_count','','','','number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_weight','','','','consistency-weighted number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_fraction','','','','fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','consistency-weighted fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_debiased','','','','debiased fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t05_bulge_prominence_a13_dominant_flag','','','','flag for "dominant bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_count','','','','number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_weight','','','','consistency-weighted number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_fraction','','','','fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_debiased','','','','debiased fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a14_yes_flag','','','','flag for "something odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_count','','','','number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_weight','','','','consistency-weighted number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_fraction','','','','fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_weighted_fraction','','','','consistency-weighted fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_debiased','','','','debiased fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t06_odd_a15_no_flag','','','','flag for "nothing odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_count','','','','number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_weight','','','','consistency-weighted number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_fraction','','','','fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_debiased','','','','debiased fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a16_completely_round_flag','','','','flag for "smooth and completely round"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_count','','','','number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_weight','','','','consistency-weighted number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_fraction','','','','fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_debiased','','','','debiased fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a17_in_between_flag','','','','flag for "smooth and in-between roundness"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_count','','','','number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_weight','','','','consistency-weighted number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_fraction','','','','fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_debiased','','','','debiased fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t07_rounded_a18_cigar_shaped_flag','','','','flag for "smooth and cigar-shaped"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_count','','','','number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_weight','','','','consistency-weighted number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_fraction','','','','fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_debiased','','','','debiased fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a19_ring_flag','','','','flag for "odd feature is a ring"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_count','','','','number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_weight','','','','consistency-weighted number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_fraction','','','','fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_debiased','','','','debiased fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a20_lens_or_arc_flag','','','','flag for "odd feature is a lens or arc"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_count','','','','number of votes for the "odd feature is a disturbed" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_weight','','','','consistency-weighted number of votes for the "odd feature is a disturbed galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_fraction','','','','fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a disturbed galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_debiased','','','','debiased fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a21_disturbed_flag','','','','flag for "odd feature is a disturbed galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_count','','','','number of votes for the "odd feature is an irregular" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_weight','','','','consistency-weighted number of votes for the "odd feature is an irregular galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_fraction','','','','fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is an irregular galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_debiased','','','','debiased fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a22_irregular_flag','','','','flag for "odd feature is an irregular galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_count','','','','number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_weight','','','','consistency-weighted number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_fraction','','','','fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_debiased','','','','debiased fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a23_other_flag','','','','flag for "odd feature is something else"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_count','','','','number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_weight','','','','consistency-weighted number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_fraction','','','','fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_debiased','','','','debiased fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a24_merger_flag','','','','flag for "odd feature is a merger"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_count','','','','number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_weight','','','','consistency-weighted number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_fraction','','','','fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_debiased','','','','debiased fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t08_odd_feature_a38_dust_lane_flag','','','','flag for "odd feature is a dust lane"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_count','','','','number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_weight','','','','consistency-weighted number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_fraction','','','','fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_debiased','','','','debiased fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a25_rounded_flag','','','','flag for "edge-on bulge is rounded"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_count','','','','number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_weight','','','','consistency-weighted number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_fraction','','','','fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_debiased','','','','debiased fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a26_boxy_flag','','','','flag for "edge-on bulge is boxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_count','','','','number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_weight','','','','consistency-weighted number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_fraction','','','','fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_debiased','','','','debiased fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t09_bulge_shape_a27_no_bulge_flag','','','','flag for "no edge-on bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_count','','','','number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_weight','','','','consistency-weighted number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_fraction','','','','fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_weighted_fraction','','','','consistency-weighted fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_debiased','','','','debiased fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a28_tight_flag','','','','flag for "tightly wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_count','','','','number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_weight','','','','consistency-weighted number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_fraction','','','','fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_weighted_fraction','','','','consistency-weighted fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_debiased','','','','debiased fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a29_medium_flag','','','','flag for "medium wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_count','','','','number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_weight','','','','consistency-weighted number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_fraction','','','','fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_weighted_fraction','','','','consistency-weighted fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_debiased','','','','debiased fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t10_arms_winding_a30_loose_flag','','','','flag for "loosely wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_count','','','','number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_weight','','','','consistency-weighted number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_fraction','','','','fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_weighted_fraction','','','','consistency-weighted fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_debiased','','','','debiased fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a31_1_flag','','','','flag for "1 spiral arm"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_count','','','','number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_weight','','','','consistency-weighted number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_fraction','','','','fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_weighted_fraction','','','','consistency-weighted fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_debiased','','','','debiased fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a32_2_flag','','','','flag for "2 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_count','','','','number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_weight','','','','consistency-weighted number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_fraction','','','','fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_weighted_fraction','','','','consistency-weighted fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_debiased','','','','debiased fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a33_3_flag','','','','flag for "3 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_count','','','','number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_weight','','','','consistency-weighted number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_fraction','','','','fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_weighted_fraction','','','','consistency-weighted fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_debiased','','','','debiased fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a34_4_flag','','','','flag for "4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_count','','','','number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_weight','','','','consistency-weighted number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_fraction','','','','fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_weighted_fraction','','','','consistency-weighted fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_debiased','','','','debiased fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a36_more_than_4_flag','','','','flag for "more than 4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_count','','','','number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_weight','','','','consistency-weighted number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_fraction','','','','fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_debiased','','','','debiased fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2MainSpecz','t11_arms_number_a37_cant_tell_flag','','','','flag for "spiral arms present, but can''t tell how many"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','specobjid','','','','match to the DR8 spectrum object','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','stripe82objid','','','','objID of the galaxy in the Stripe82 context of CasJobs','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','dr8objid','','','','match to the DR8 objID for the corresponding normal-depth image','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','dr7objid','','','','match to the DR7 objID for the corresponding normal-depth image','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','ra','','','','right ascension [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','dec','','','','declination [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','rastring','','','','right ascension [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','decstring','','','','declination [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','sample','','','','sub-sample identification','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','total_classifications','','','','total number of classifications for this galaxy','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','total_votes','','','','total number of votes for each response, summed over all classifications','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_count','','','','number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_weight','','','','consistency-weighted number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_fraction','','','','fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_debiased','','','','debiased fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a01_smooth_flag','','','','flag for "smooth" - 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_count','','','','number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_weight','','','','consistency-weighted number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_fraction','','','','fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','consistency-weighted fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_debiased','','','','debiased fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a02_features_or_disk_flag','','','','flag for "features or disk"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_count','','','','number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_weight','','','','consistency-weighted number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','consistency-weighted fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','debiased fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t01_smooth_or_features_a03_star_or_artifact_flag','','','','flag for "star or artifact"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_count','','','','number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_weight','','','','consistency-weighted number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_fraction','','','','fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_debiased','','','','debiased fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a04_yes_flag','','','','flag for "edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_count','','','','number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_weight','','','','consistency-weighted number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_fraction','','','','fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_weighted_fraction','','','','consistency-weighted fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_debiased','','','','debiased fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t02_edgeon_a05_no_flag','','','','flag for "not edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_count','','','','number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_weight','','','','consistency-weighted number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_fraction','','','','fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_debiased','','','','debiased fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a06_bar_flag','','','','flag for "bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_count','','','','number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_weight','','','','consistency-weighted number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_fraction','','','','fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_debiased','','','','debiased fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t03_bar_a07_no_bar_flag','','','','flag for "no bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_count','','','','number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_weight','','','','consistency-weighted number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_fraction','','','','fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_debiased','','','','debiased fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a08_spiral_flag','','','','flag for "spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_count','','','','number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_weight','','','','consistency-weighted number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_fraction','','','','fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_debiased','','','','debiased fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t04_spiral_a09_no_spiral_flag','','','','flag for "no spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_count','','','','number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_weight','','','','consistency-weighted number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_fraction','','','','fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_debiased','','','','debiased fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a10_no_bulge_flag','','','','flag for "no bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_count','','','','number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_weight','','','','consistency-weighted number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_fraction','','','','fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','consistency-weighted fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_debiased','','','','debiased fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a11_just_noticeable_flag','','','','flag for "just noticeable bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_count','','','','number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_weight','','','','consistency-weighted number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_fraction','','','','fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','consistency-weighted fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_debiased','','','','debiased fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a12_obvious_flag','','','','flag for "obvious bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_count','','','','number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_weight','','','','consistency-weighted number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_fraction','','','','fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','consistency-weighted fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_debiased','','','','debiased fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t05_bulge_prominence_a13_dominant_flag','','','','flag for "dominant bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_count','','','','number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_weight','','','','consistency-weighted number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_fraction','','','','fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_debiased','','','','debiased fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a14_yes_flag','','','','flag for "something odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_count','','','','number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_weight','','','','consistency-weighted number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_fraction','','','','fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_weighted_fraction','','','','consistency-weighted fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_debiased','','','','debiased fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t06_odd_a15_no_flag','','','','flag for "nothing odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_count','','','','number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_weight','','','','consistency-weighted number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_fraction','','','','fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_debiased','','','','debiased fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a16_completely_round_flag','','','','flag for "smooth and completely round"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_count','','','','number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_weight','','','','consistency-weighted number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_fraction','','','','fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_debiased','','','','debiased fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a17_in_between_flag','','','','flag for "smooth and in-between roundness"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_count','','','','number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_weight','','','','consistency-weighted number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_fraction','','','','fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_debiased','','','','debiased fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t07_rounded_a18_cigar_shaped_flag','','','','flag for "smooth and cigar-shaped"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_count','','','','number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_weight','','','','consistency-weighted number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_fraction','','','','fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_debiased','','','','debiased fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a19_ring_flag','','','','flag for "odd feature is a ring"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_count','','','','number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_weight','','','','consistency-weighted number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_fraction','','','','fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_debiased','','','','debiased fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a20_lens_or_arc_flag','','','','flag for "odd feature is a lens or arc"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_count','','','','number of votes for the "odd feature is a disturbed" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_weight','','','','consistency-weighted number of votes for the "odd feature is a disturbed galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_fraction','','','','fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a disturbed galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_debiased','','','','debiased fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a21_disturbed_flag','','','','flag for "odd feature is a disturbed galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_count','','','','number of votes for the "odd feature is an irregular" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_weight','','','','consistency-weighted number of votes for the "odd feature is an irregular galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_fraction','','','','fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is an irregular galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_debiased','','','','debiased fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a22_irregular_flag','','','','flag for "odd feature is an irregular galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_count','','','','number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_weight','','','','consistency-weighted number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_fraction','','','','fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_debiased','','','','debiased fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a23_other_flag','','','','flag for "odd feature is something else"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_count','','','','number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_weight','','','','consistency-weighted number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_fraction','','','','fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_debiased','','','','debiased fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a24_merger_flag','','','','flag for "odd feature is a merger"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_count','','','','number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_weight','','','','consistency-weighted number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_fraction','','','','fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_debiased','','','','debiased fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t08_odd_feature_a38_dust_lane_flag','','','','flag for "odd feature is a dust lane"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_count','','','','number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_weight','','','','consistency-weighted number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_fraction','','','','fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_debiased','','','','debiased fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a25_rounded_flag','','','','flag for "edge-on bulge is rounded"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_count','','','','number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_weight','','','','consistency-weighted number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_fraction','','','','fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_debiased','','','','debiased fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a26_boxy_flag','','','','flag for "edge-on bulge is boxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_count','','','','number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_weight','','','','consistency-weighted number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_fraction','','','','fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_debiased','','','','debiased fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t09_bulge_shape_a27_no_bulge_flag','','','','flag for "no edge-on bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_count','','','','number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_weight','','','','consistency-weighted number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_fraction','','','','fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_weighted_fraction','','','','consistency-weighted fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_debiased','','','','debiased fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a28_tight_flag','','','','flag for "tightly wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_count','','','','number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_weight','','','','consistency-weighted number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_fraction','','','','fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_weighted_fraction','','','','consistency-weighted fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_debiased','','','','debiased fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a29_medium_flag','','','','flag for "medium wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_count','','','','number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_weight','','','','consistency-weighted number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_fraction','','','','fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_weighted_fraction','','','','consistency-weighted fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_debiased','','','','debiased fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t10_arms_winding_a30_loose_flag','','','','flag for "loosely wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_count','','','','number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_weight','','','','consistency-weighted number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_fraction','','','','fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_weighted_fraction','','','','consistency-weighted fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_debiased','','','','debiased fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a31_1_flag','','','','flag for "1 spiral arm"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_count','','','','number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_weight','','','','consistency-weighted number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_fraction','','','','fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_weighted_fraction','','','','consistency-weighted fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_debiased','','','','debiased fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a32_2_flag','','','','flag for "2 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_count','','','','number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_weight','','','','consistency-weighted number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_fraction','','','','fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_weighted_fraction','','','','consistency-weighted fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_debiased','','','','debiased fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a33_3_flag','','','','flag for "3 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_count','','','','number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_weight','','','','consistency-weighted number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_fraction','','','','fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_weighted_fraction','','','','consistency-weighted fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_debiased','','','','debiased fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a34_4_flag','','','','flag for "4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_count','','','','number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_weight','','','','consistency-weighted number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_fraction','','','','fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_weighted_fraction','','','','consistency-weighted fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_debiased','','','','debiased fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a36_more_than_4_flag','','','','flag for "more than 4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_count','','','','number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_weight','','','','consistency-weighted number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_fraction','','','','fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_debiased','','','','debiased fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd1','t11_arms_number_a37_cant_tell_flag','','','','flag for "spiral arms present, but can''t tell how many"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','specobjid','','','','match to the DR8 spectrum object','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','stripe82objid','','','','objID of the galaxy in the Stripe82 context of CasJobs','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','dr8objid','','','','match to the DR8 objID for the corresponding normal-depth image','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','dr7objid','','','','match to the DR7 objID for the corresponding normal-depth image','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','ra','','','','right ascension [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','dec','','','','declination [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','rastring','','','','right ascension [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','decstring','','','','declination [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','sample','','','','sub-sample identification','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','total_classifications','','','','total number of classifications for this galaxy','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','total_votes','','','','total number of votes for each response, summed over all classifications','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_count','','','','number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_weight','','','','consistency-weighted number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_fraction','','','','fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_debiased','','','','debiased fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a01_smooth_flag','','','','flag for "smooth" - 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_count','','','','number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_weight','','','','consistency-weighted number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_fraction','','','','fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','consistency-weighted fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_debiased','','','','debiased fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a02_features_or_disk_flag','','','','flag for "features or disk"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_count','','','','number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_weight','','','','consistency-weighted number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','consistency-weighted fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','debiased fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t01_smooth_or_features_a03_star_or_artifact_flag','','','','flag for "star or artifact"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_count','','','','number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_weight','','','','consistency-weighted number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_fraction','','','','fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_debiased','','','','debiased fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a04_yes_flag','','','','flag for "edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_count','','','','number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_weight','','','','consistency-weighted number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_fraction','','','','fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_weighted_fraction','','','','consistency-weighted fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_debiased','','','','debiased fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t02_edgeon_a05_no_flag','','','','flag for "not edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_count','','','','number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_weight','','','','consistency-weighted number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_fraction','','','','fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_debiased','','','','debiased fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a06_bar_flag','','','','flag for "bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_count','','','','number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_weight','','','','consistency-weighted number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_fraction','','','','fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_debiased','','','','debiased fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t03_bar_a07_no_bar_flag','','','','flag for "no bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_count','','','','number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_weight','','','','consistency-weighted number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_fraction','','','','fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_debiased','','','','debiased fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a08_spiral_flag','','','','flag for "spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_count','','','','number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_weight','','','','consistency-weighted number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_fraction','','','','fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_debiased','','','','debiased fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t04_spiral_a09_no_spiral_flag','','','','flag for "no spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_count','','','','number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_weight','','','','consistency-weighted number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_fraction','','','','fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_debiased','','','','debiased fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a10_no_bulge_flag','','','','flag for "no bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_count','','','','number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_weight','','','','consistency-weighted number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_fraction','','','','fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','consistency-weighted fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_debiased','','','','debiased fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a11_just_noticeable_flag','','','','flag for "just noticeable bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_count','','','','number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_weight','','','','consistency-weighted number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_fraction','','','','fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','consistency-weighted fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_debiased','','','','debiased fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a12_obvious_flag','','','','flag for "obvious bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_count','','','','number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_weight','','','','consistency-weighted number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_fraction','','','','fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','consistency-weighted fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_debiased','','','','debiased fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t05_bulge_prominence_a13_dominant_flag','','','','flag for "dominant bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_count','','','','number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_weight','','','','consistency-weighted number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_fraction','','','','fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_debiased','','','','debiased fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a14_yes_flag','','','','flag for "something odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_count','','','','number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_weight','','','','consistency-weighted number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_fraction','','','','fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_weighted_fraction','','','','consistency-weighted fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_debiased','','','','debiased fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t06_odd_a15_no_flag','','','','flag for "nothing odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_count','','','','number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_weight','','','','consistency-weighted number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_fraction','','','','fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_debiased','','','','debiased fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a16_completely_round_flag','','','','flag for "smooth and completely round"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_count','','','','number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_weight','','','','consistency-weighted number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_fraction','','','','fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_debiased','','','','debiased fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a17_in_between_flag','','','','flag for "smooth and in-between roundness"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_count','','','','number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_weight','','','','consistency-weighted number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_fraction','','','','fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_debiased','','','','debiased fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t07_rounded_a18_cigar_shaped_flag','','','','flag for "smooth and cigar-shaped"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_count','','','','number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_weight','','','','consistency-weighted number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_fraction','','','','fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_debiased','','','','debiased fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a19_ring_flag','','','','flag for "odd feature is a ring"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_count','','','','number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_weight','','','','consistency-weighted number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_fraction','','','','fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_debiased','','','','debiased fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a20_lens_or_arc_flag','','','','flag for "odd feature is a lens or arc"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_count','','','','number of votes for the "odd feature is a disturbed" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_weight','','','','consistency-weighted number of votes for the "odd feature is a disturbed galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_fraction','','','','fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a disturbed galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_debiased','','','','debiased fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a21_disturbed_flag','','','','flag for "odd feature is a disturbed galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_count','','','','number of votes for the "odd feature is an irregular" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_weight','','','','consistency-weighted number of votes for the "odd feature is an irregular galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_fraction','','','','fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is an irregular galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_debiased','','','','debiased fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a22_irregular_flag','','','','flag for "odd feature is an irregular galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_count','','','','number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_weight','','','','consistency-weighted number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_fraction','','','','fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_debiased','','','','debiased fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a23_other_flag','','','','flag for "odd feature is something else"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_count','','','','number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_weight','','','','consistency-weighted number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_fraction','','','','fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_debiased','','','','debiased fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a24_merger_flag','','','','flag for "odd feature is a merger"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_count','','','','number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_weight','','','','consistency-weighted number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_fraction','','','','fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_debiased','','','','debiased fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t08_odd_feature_a38_dust_lane_flag','','','','flag for "odd feature is a dust lane"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_count','','','','number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_weight','','','','consistency-weighted number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_fraction','','','','fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_debiased','','','','debiased fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a25_rounded_flag','','','','flag for "edge-on bulge is rounded"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_count','','','','number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_weight','','','','consistency-weighted number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_fraction','','','','fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_debiased','','','','debiased fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a26_boxy_flag','','','','flag for "edge-on bulge is boxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_count','','','','number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_weight','','','','consistency-weighted number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_fraction','','','','fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_debiased','','','','debiased fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t09_bulge_shape_a27_no_bulge_flag','','','','flag for "no edge-on bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_count','','','','number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_weight','','','','consistency-weighted number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_fraction','','','','fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_weighted_fraction','','','','consistency-weighted fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_debiased','','','','debiased fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a28_tight_flag','','','','flag for "tightly wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_count','','','','number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_weight','','','','consistency-weighted number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_fraction','','','','fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_weighted_fraction','','','','consistency-weighted fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_debiased','','','','debiased fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a29_medium_flag','','','','flag for "medium wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_count','','','','number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_weight','','','','consistency-weighted number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_fraction','','','','fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_weighted_fraction','','','','consistency-weighted fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_debiased','','','','debiased fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t10_arms_winding_a30_loose_flag','','','','flag for "loosely wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_count','','','','number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_weight','','','','consistency-weighted number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_fraction','','','','fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_weighted_fraction','','','','consistency-weighted fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_debiased','','','','debiased fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a31_1_flag','','','','flag for "1 spiral arm"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_count','','','','number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_weight','','','','consistency-weighted number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_fraction','','','','fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_weighted_fraction','','','','consistency-weighted fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_debiased','','','','debiased fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a32_2_flag','','','','flag for "2 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_count','','','','number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_weight','','','','consistency-weighted number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_fraction','','','','fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_weighted_fraction','','','','consistency-weighted fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_debiased','','','','debiased fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a33_3_flag','','','','flag for "3 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_count','','','','number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_weight','','','','consistency-weighted number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_fraction','','','','fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_weighted_fraction','','','','consistency-weighted fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_debiased','','','','debiased fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a34_4_flag','','','','flag for "4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_count','','','','number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_weight','','','','consistency-weighted number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_fraction','','','','fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_weighted_fraction','','','','consistency-weighted fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_debiased','','','','debiased fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a36_more_than_4_flag','','','','flag for "more than 4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_count','','','','number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_weight','','','','consistency-weighted number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_fraction','','','','fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_debiased','','','','debiased fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Coadd2','t11_arms_number_a37_cant_tell_flag','','','','flag for "spiral arms present, but can''t tell how many"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','specobjid','','','','match to the DR8 spectrum object','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','dr8objid','','','','match to the DR8 objID','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','dr7objid','','','','match to the DR7 objID','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','ra','','','','right ascension [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','dec','','','','declination [J2000.0], decimal degrees','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','rastring','','','','right ascension [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','decstring','','','','declination [J2000.0], sexagesimal','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','sample','','','','sub-sample identification','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','total_classifications','','','','total number of classifications for this galaxy','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','total_votes','','','','total number of votes for each response, summed over all classifications','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_count','','','','number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_weight','','','','consistency-weighted number of votes for the "smooth" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_fraction','','','','fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_debiased','','','','debiased fraction of votes for "smooth" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a01_smooth_flag','','','','flag for "smooth" - 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_count','','','','number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_weight','','','','consistency-weighted number of votes for the "features or disk" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_fraction','','','','fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_weighted_fraction','','','','consistency-weighted fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_debiased','','','','debiased fraction of votes for "features or disk" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a02_features_or_disk_flag','','','','flag for "features or disk"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_count','','','','number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_weight','','','','consistency-weighted number of votes for the "star or artifact" response to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_fraction','','','','fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_weighted_fraction','','','','consistency-weighted fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_debiased','','','','debiased fraction of votes for "star or artifact" out of all responses to Task 01','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t01_smooth_or_features_a03_star_or_artifact_flag','','','','flag for "star or artifact"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_count','','','','number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_weight','','','','consistency-weighted number of votes for the "edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_fraction','','','','fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_debiased','','','','debiased fraction of votes for "edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a04_yes_flag','','','','flag for "edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_count','','','','number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_weight','','','','consistency-weighted number of votes for the "not edge-on" response to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_fraction','','','','fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_weighted_fraction','','','','consistency-weighted fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_debiased','','','','debiased fraction of votes for "not edge-on" out of all responses to Task 02','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t02_edgeon_a05_no_flag','','','','flag for "not edge-on"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_count','','','','number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_weight','','','','consistency-weighted number of votes for the "bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_fraction','','','','fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_debiased','','','','debiased fraction of votes for "bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a06_bar_flag','','','','flag for "bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_count','','','','number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_weight','','','','consistency-weighted number of votes for the "no bar" response to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_fraction','','','','fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_weighted_fraction','','','','consistency-weighted fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_debiased','','','','debiased fraction of votes for "no bar" out of all responses to Task 03','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t03_bar_a07_no_bar_flag','','','','flag for "no bar"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_count','','','','number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_weight','','','','consistency-weighted number of votes for the "spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_fraction','','','','fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_debiased','','','','debiased fraction of votes for "spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a08_spiral_flag','','','','flag for "spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_count','','','','number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_weight','','','','consistency-weighted number of votes for the "no spiral structure" response to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_fraction','','','','fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_weighted_fraction','','','','consistency-weighted fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_debiased','','','','debiased fraction of votes for "no spiral structure" out of all responses to Task 04','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t04_spiral_a09_no_spiral_flag','','','','flag for "no spiral structure"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_count','','','','number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_weight','','','','consistency-weighted number of votes for the "no bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_fraction','','','','fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_debiased','','','','debiased fraction of votes for "no bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a10_no_bulge_flag','','','','flag for "no bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_count','','','','number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_weight','','','','consistency-weighted number of votes for the "just noticeable bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_fraction','','','','fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_weighted_fraction','','','','consistency-weighted fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_debiased','','','','debiased fraction of votes for "just noticeable bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a11_just_noticeable_flag','','','','flag for "just noticeable bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_count','','','','number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_weight','','','','consistency-weighted number of votes for the "obvious bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_fraction','','','','fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_weighted_fraction','','','','consistency-weighted fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_debiased','','','','debiased fraction of votes for "obvious bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a12_obvious_flag','','','','flag for "obvious bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_count','','','','number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_weight','','','','consistency-weighted number of votes for the "dominant bulge" response to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_fraction','','','','fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_weighted_fraction','','','','consistency-weighted fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_debiased','','','','debiased fraction of votes for "dominant bulge" out of all responses to Task 05','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t05_bulge_prominence_a13_dominant_flag','','','','flag for "dominant bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_count','','','','number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_weight','','','','consistency-weighted number of votes for the "something odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_fraction','','','','fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_weighted_fraction','','','','consistency-weighted fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_debiased','','','','debiased fraction of votes for "something odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a14_yes_flag','','','','flag for "something odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_count','','','','number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_weight','','','','consistency-weighted number of votes for the "nothing odd" response to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_fraction','','','','fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_weighted_fraction','','','','consistency-weighted fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_debiased','','','','debiased fraction of votes for "nothing odd" out of all responses to Task 06','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t06_odd_a15_no_flag','','','','flag for "nothing odd"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_count','','','','number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_weight','','','','consistency-weighted number of votes for the "smooth and completely round" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_fraction','','','','fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_debiased','','','','debiased fraction of votes for "smooth and completely round" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a16_completely_round_flag','','','','flag for "smooth and completely round"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_count','','','','number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_weight','','','','consistency-weighted number of votes for the "smooth and in-between roundness" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_fraction','','','','fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_debiased','','','','debiased fraction of votes for "smooth and in-between roundness" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a17_in_between_flag','','','','flag for "smooth and in-between roundness"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_count','','','','number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_weight','','','','consistency-weighted number of votes for the "smooth and cigar-shaped" response to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_fraction','','','','fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_weighted_fraction','','','','consistency-weighted fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_debiased','','','','debiased fraction of votes for "smooth and cigar-shaped" out of all responses to Task 07','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t07_rounded_a18_cigar_shaped_flag','','','','flag for "smooth and cigar-shaped"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_count','','','','number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_weight','','','','consistency-weighted number of votes for the "odd feature is a ring" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_fraction','','','','fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_debiased','','','','debiased fraction of votes for "odd feature is a ring" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a19_ring_flag','','','','flag for "odd feature is a ring"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_count','','','','number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_weight','','','','consistency-weighted number of votes for the "odd feature is a lens or arc" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_fraction','','','','fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_debiased','','','','debiased fraction of votes for "odd feature is a lens or arc" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a20_lens_or_arc_flag','','','','flag for "odd feature is a lens or arc"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_count','','','','number of votes for the "odd feature is a disturbed" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_weight','','','','consistency-weighted number of votes for the "odd feature is a disturbed galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_fraction','','','','fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a disturbed galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_debiased','','','','debiased fraction of votes for "odd feature is a disturbed" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a21_disturbed_flag','','','','flag for "odd feature is a disturbed galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_count','','','','number of votes for the "odd feature is an irregular" galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_weight','','','','consistency-weighted number of votes for the "odd feature is an irregular galaxy response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_fraction','','','','fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is an irregular galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_debiased','','','','debiased fraction of votes for "odd feature is an irregular" galaxy out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a22_irregular_flag','','','','flag for "odd feature is an irregular galaxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_count','','','','number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_weight','','','','consistency-weighted number of votes for the "odd feature is something else" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_fraction','','','','fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_debiased','','','','debiased fraction of votes for "odd feature is something else" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a23_other_flag','','','','flag for "odd feature is something else"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_count','','','','number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_weight','','','','consistency-weighted number of votes for the "odd feature is a merger" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_fraction','','','','fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_debiased','','','','debiased fraction of votes for "odd feature is a merger" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a24_merger_flag','','','','flag for "odd feature is a merger"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_count','','','','number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_weight','','','','consistency-weighted number of votes for the "odd feature is a dust lane" response to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_fraction','','','','fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_weighted_fraction','','','','consistency-weighted fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_debiased','','','','debiased fraction of votes for "odd feature is a dust lane" out of all responses to Task 08','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t08_odd_feature_a38_dust_lane_flag','','','','flag for "odd feature is a dust lane"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_count','','','','number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_weight','','','','consistency-weighted number of votes for the "edge-on bulge is rounded" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_fraction','','','','fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_debiased','','','','debiased fraction of votes for "edge-on bulge is rounded" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a25_rounded_flag','','','','flag for "edge-on bulge is rounded"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_count','','','','number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_weight','','','','consistency-weighted number of votes for the "edge-on bulge is boxy" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_fraction','','','','fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_weighted_fraction','','','','consistency-weighted fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_debiased','','','','debiased fraction of votes for "edge-on bulge is boxy" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a26_boxy_flag','','','','flag for "edge-on bulge is boxy"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_count','','','','number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_weight','','','','consistency-weighted number of votes for the "no edge-on bulge" response to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_fraction','','','','fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_weighted_fraction','','','','consistency-weighted fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_debiased','','','','debiased fraction of votes for "no edge-on bulge" out of all responses to Task 09','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t09_bulge_shape_a27_no_bulge_flag','','','','flag for "no edge-on bulge"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_count','','','','number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_weight','','','','consistency-weighted number of votes for the "tightly wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_fraction','','','','fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_weighted_fraction','','','','consistency-weighted fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_debiased','','','','debiased fraction of votes for "tightly wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a28_tight_flag','','','','flag for "tightly wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_count','','','','number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_weight','','','','consistency-weighted number of votes for the "medium wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_fraction','','','','fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_weighted_fraction','','','','consistency-weighted fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_debiased','','','','debiased fraction of votes for "medium wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a29_medium_flag','','','','flag for "medium wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_count','','','','number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_weight','','','','consistency-weighted number of votes for the "loosely wound spiral arms" response to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_fraction','','','','fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_weighted_fraction','','','','consistency-weighted fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_debiased','','','','debiased fraction of votes for "loosely wound spiral arms" out of all responses to Task 10','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t10_arms_winding_a30_loose_flag','','','','flag for "loosely wound spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_count','','','','number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_weight','','','','consistency-weighted number of votes for the "1 spiral arm" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_fraction','','','','fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_weighted_fraction','','','','consistency-weighted fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_debiased','','','','debiased fraction of votes for "1 spiral arm" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a31_1_flag','','','','flag for "1 spiral arm"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_count','','','','number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_weight','','','','consistency-weighted number of votes for the "2 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_fraction','','','','fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_weighted_fraction','','','','consistency-weighted fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_debiased','','','','debiased fraction of votes for "2 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a32_2_flag','','','','flag for "2 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_count','','','','number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_weight','','','','consistency-weighted number of votes for the "3 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_fraction','','','','fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_weighted_fraction','','','','consistency-weighted fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_debiased','','','','debiased fraction of votes for "3 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a33_3_flag','','','','flag for "3 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_count','','','','number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_weight','','','','consistency-weighted number of votes for the "4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_fraction','','','','fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_weighted_fraction','','','','consistency-weighted fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_debiased','','','','debiased fraction of votes for "4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a34_4_flag','','','','flag for "4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_count','','','','number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_weight','','','','consistency-weighted number of votes for the "more than 4 spiral arms" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_fraction','','','','fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_weighted_fraction','','','','consistency-weighted fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_debiased','','','','debiased fraction of votes for "more than 4 spiral arms" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a36_more_than_4_flag','','','','flag for "more than 4 spiral arms"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_count','','','','number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_weight','','','','consistency-weighted number of votes for the "spiral arms present, but can''t tell how many" response to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_fraction','','','','fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_weighted_fraction','','','','consistency-weighted fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_debiased','','','','debiased fraction of votes for "spiral arms present, but can''t tell how many" out of all responses to Task 11','0');
INSERT DBColumns VALUES('zoo2Stripe82Normal','t11_arms_number_a37_cant_tell_flag','','','','flag for "spiral arms present, but can''t tell how many"	- 1 if galaxy is in clean sample, 0 otherwise','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','STARNAME','','','','The primary name of the star (STARNAME)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','FCJD','','','','The flux centered Julian Date','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','RV','','','','The fully corrected radial velocity measurement','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PHOTONERR','','','','Photon limit of observation','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','STATERROR','','','','Observed Precision in the measurement of the RV data point','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','OFFSETERROR','','','','Expected RV error for each order','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','Keep','','','','Good or rejected measurement','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','TOTALPHOTONS','','','','Sum of the photons','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','BARYCENTRICVEL','','','','The calculated barycentric velocity (m/s)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SPECNO','','','','Spectrum number (1 is bottom; 120 is top)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','EPOCHFILE','','','','Name of the aggregated file for this epoch','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','TEMPLATEFILE','','','','Number of the MJD that was used as the template','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','RADECID','','','','Plate Name composed from RA and DEC (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','OBJECT','','','','Plate Name (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','EXPTYPE','','','','Exposure Type (Valid values include STAR/TIO/THAR etc.) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PLATEID','','','','Plate Name (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','CARTID','','','','Id of the cartridge used for this image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','EXPTIME','','','','Exposure time in seconds (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','DATE-OBS','','','','UT of observation Format is YYYY-MM-DDThh:mm:ss.ss (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','TIME','','','','Start &amp; Stop of Exposure (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','UTC-OBS','','','','UTC of Start of Exposure (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','LST-OBS','','','','LST of Start of Exposure (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','JD','','','','Julian date at start of observation (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','FCJD_IMG','','','','Flux centered Julian date (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','MJD','','','','Modified Julian date at start of observation (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','RA','','','','RA of tel. boresight (in degrees) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','DEC','','','','DEC of tel. boresight (in degrees) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','EPOCH','','','','Epoch of Coordinates (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','ALT','','','','Altitude (encoder) of telescope (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','AZ','','','','Azimuth (encoder) of telescope (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PMTAVG','','','','Average PMT (rough flux over whole plate) during observation (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PMTRMS','','','','RMS deviation of PMT counts during obs (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PMTMIN','','','','Minimum PMT counts during obsservation (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','PMTMAX','','','','Maximum PMT counts during observation (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','OBSFLAG','','','','Exp. Quality Flag (OK/UNSURE/JUNK) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','IMGAVG','','','','Average counts per pixel in the image (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','IMGMAX','','','','Maximum counts per pixel in the image (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','IMGMIN','','','','Minimum counts per pixel in the image (in counts) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SNRMAX','','','','Maximumsignal to noise per pixel in the image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SNRMEDN','','','','Median signal to noise per pixel in the image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SNRMIN','','','','Minimumsignal to noise per pixel in the image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SNRAVG','','','','Average signal to noise per pixel in the image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SNRSTDEV','','','','RMS deviation signal to noise per pixel in the image (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SEEING','','','','Average seeing during the exposure (in arcsec) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','CCDTEMP','','','','CCD Chip Temp. in Deg. Celsius (approx -106 normal) (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','CCDPRES','','','','CCD Dewar Pressure in Torr (below &lt; 0.001) normal (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P1','','','','Mean Pressure(PSI) of Regulator (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P1RMS','','','','RMS Pressure(PSI) of Regulator (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P2','','','','Mean Pressure(PSI) of Chamber (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P2RMS','','','','RMS Pressure(PSI) of Chamber (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P3','','','','Mean Pressure(PSI) of Atmosphere (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','P3RMS','','','','RMS Pressure(PSI) of Atmosphere (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T1','','','','Mean Temp. of North Chamber wall in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T1RMS','','','','RMS Temp. of North Chamber wall in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T2','','','','Mean Temp. of South Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T2RMS','','','','RMS Temp. of South Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T3','','','','Mean Temp. of East Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T3RMS','','','','RMS Temp. of East Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T4','','','','Mean Temp. of West Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T4RMS','','','','RMS Temp. of West Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T5','','','','Mean Temp. of Top Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T5RMS','','','','RMS Temp. of Top Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T6','','','','Mean Temp. of Bottom Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T6RMS','','','','RMS Temp. of Bottom Chamber wallin deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T7','','','','Mean Temp. of CCD skin in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T7RMS','','','','RMSTemp. of CCD skin in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T8','','','','Mean Temp. of CCD house in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T8RMS','','','','RMSTemp. of CCD house in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T9','','','','Mean Temp. of Iodine_Cell in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T9RMS','','','','RMS Temp. of Iodine_Cell in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T10','','','','Mean Temp of CCD Air in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T10RMS','','','','RMSTemp of CCD Air in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T11','','','','Mean Temp of Interferometer top in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T11RMS','','','','RMS Temp of Interferometer top in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T12','','','','Mean Temp of Chamber Center in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T12RMS','','','','RMSTemp of Chamber Center in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T13','','','','Mean Temp of Grating in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T13RMS','','','','RMSTemp of Grating in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T14','','','','Mean Temp of CCD area in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T14RMS','','','','RMSTemp of CCD area in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T15','','','','Mean Temp of Chamber input in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T15RMS','','','','RMS Temp of Chamber input in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T16','','','','Mean Temp of Ambient in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','T16RMS','','','','RMS Temp of Ambient in deg. Celsius (From image header)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','BEAM','','','','Beam ID (1 or 2)','0');
INSERT DBColumns VALUES('marvelsVelocityCurveUF1D','SURVEY','','','','Indicates survey phase (''year12'' or ''year34'')','0');
INSERT DBColumns VALUES('marvelsStar','STARNAME','','','','The primary name of the star (STARNAME)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_NAME','','','','2MASS Star Catalog Name','0');
INSERT DBColumns VALUES('marvelsStar','Plate','','','','Plate Name','0');
INSERT DBColumns VALUES('marvelsStar','GSC_Name','','','','Guide Star Catalog Name','0');
INSERT DBColumns VALUES('marvelsStar','TYC_Name','','','','Tycho Star Catalog Name','0');
INSERT DBColumns VALUES('marvelsStar','HIP_Name','','','','Hipparcos Star Catalog Name','0');
INSERT DBColumns VALUES('marvelsStar','RA_Final','','','','Star Right Ascension (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','DEC_Final','','','','Star Declination (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_B','','','','GSC B Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_V','','','','GSC V Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_J','','','','2MASS J Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_H','','','','2MASS H Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_K','','','','2MASS K Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','SP1','','','','Hipparcos Spectral type 1','0');
INSERT DBColumns VALUES('marvelsStar','SP2','','','','Hipparcos Spectral type 2','0');
INSERT DBColumns VALUES('marvelsStar','RPM_LOG_g','','','','Luminosity Class from SSPP* (Mainseq/Giant/Refstar) Refstar means it is a known planet host (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','Teff','','','','SSPP* effective temperature (in Kelvin) (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','log_g','','','','SSPP* Surface gravity (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','FeH','','','','SSPP* Metallicity (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_B_E','','','','Error in GSC B Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_V_E','','','','Error in GSC V Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_J_E','','','','Error in 2MASS J Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_H_E','','','','Error in 2MASS H Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','TWOMASS_K_E','','','','Error in 2MASS H Magnitude (in mags)','0');
INSERT DBColumns VALUES('marvelsStar','Teff_E','','','','Error in SSPP* effective temperature (in Kelvin)','0');
INSERT DBColumns VALUES('marvelsStar','log_g_E','','','','Error in SSPP* Surface gravity (different method used for year34 - see docs) (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','FeH_E','','','','Error in SSPP* Metallicity (different method used for year34 - see docs)','0');
INSERT DBColumns VALUES('marvelsStar','Epoch_0','','','','Epoch 0','0');
INSERT DBColumns VALUES('marvelsStar','RA_0','','','','Right Ascension at Epoch 0 (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','DEC_0','','','','Declination at Epoch 0 (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','RA_TWOMASS','','','','2MASS Right Ascension (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','DEC_TWOMASS','','','','2MASS Declination (in degrees)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_PM_RA','','','','GSC Proper Motion in RA pmra * cos(dec) (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_PM_DEC','','','','GSC Proper MOtion in DEC (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_PM_RA_E','','','','Error in GSC Proper Motion in RA pmra * cos(dec) (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','GSC_PM_DEC_E','','','','Error in GSC Proper MOtion in DEC (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','TYC_B','','','','Tycho B Magnitude (in mag)','0');
INSERT DBColumns VALUES('marvelsStar','TYC_B_E','','','','Error in Tycho B Magnitude (in mag)','0');
INSERT DBColumns VALUES('marvelsStar','TYC_V','','','','Tycho V Magnitude (in mag)','0');
INSERT DBColumns VALUES('marvelsStar','TYC_V_E','','','','Error in Tycho V Magnitude (in mag)','0');
INSERT DBColumns VALUES('marvelsStar','HIP_PLX','','','','Hipparcos Parallax (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','HIP_PLX_E','','','','Error in Hipparcos Parallax (in mas)','0');
INSERT DBColumns VALUES('marvelsStar','HIP_SPTYPE','','','','Hipparcos Spectral Type','0');
INSERT DBColumns VALUES('spiders_quasar','xray_detection','','','','Flag indicating whether the X-ray source was detected in the 2RXS or XMMSL2 survey.','0');
INSERT DBColumns VALUES('spiders_quasar','name','','','','Name of the X-ray detection (Saxton et al. 2008, Boller et al. 2016).','0');
INSERT DBColumns VALUES('spiders_quasar','RA','','','','Right ascension of the X-ray detection (J2000; Saxton et al. 2008, Boller et al. 2016).','0');
INSERT DBColumns VALUES('spiders_quasar','DEC','','','','Declination of the X-ray detection (J2000; Saxton et al. 2008, Boller et al. 2016).','0');
INSERT DBColumns VALUES('spiders_quasar','ExiML_2RXS','','','','Existence likelihood of the 2RXS X-ray detection (Boller et al. 2016).','0');
INSERT DBColumns VALUES('spiders_quasar','ExpTime_2RXS','','','','Exposure time of the 2RXS X-ray detection (Boller et al. 2016).','0');
INSERT DBColumns VALUES('spiders_quasar','DETML_XMMSL2','','','','Detection likelihood of the XMMSL2 detection in the 0.2-12 keV range (Saxton et al. 2008).','0');
INSERT DBColumns VALUES('spiders_quasar','ExpTime_XMMSL2','','','','Exposure time of the XMMSL2 X-ray detection (Saxton et al. 2008).','0');
INSERT DBColumns VALUES('spiders_quasar','f_class_2RXS','','','','Classical flux in the observed-frame 0.1-2.4 keV range (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errf_class_2RXS','','','','Uncertainty in the classical flux in the observed-frame 0.1-2.4 keV range (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','f_bay_2RXS','','','','Bayesian flux in the observed-frame 0.1-2.4 keV range (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errf_bay_2RXS','','','','Uncertainty in the Bayesian flux in the observed-frame 0.1-2.4 keV range (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','l_class_2RXS','','','','Classical luminosity in the observed-frame 0.1-2.4 keV range (derived from f_class_2RXS; no k-correction applied) (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errl_class_2RXS','','','','Uncertainty in the classical luminosity in the observed-frame 0.1-2.4 keV range (derived from errf_class_2RXS; no k-correction applied) (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','l_bay_2RXS','','','','Bayesian luminosity in the observed-frame 0.1-2.4 keV range (derived from f_bay_2RXS; no k-correction applied) (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errl_bay_2RXS','','','','Uncertainty in the Bayesian luminosity in the observed-frame 0.1-2.4 keV range (derived from errf_bay_2RXS; no k-correction applied) (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','l2keV_class_2RXS','','','','Classical monochromatic luminosity at rest-frame 2 keV (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errl2keV_class_2RXS','','','','Uncertainty in the classical monochromatic luminosity at rest-frame 2 keV (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','l2keV_bay_2RXS','','','','Bayesian monochromatic luminosity at rest-frame 2 keV (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','errl2keV_bay_2RXS','','','','Uncertainty in the Bayesian monochromatic luminosity at rest-frame 2 keV (2RXS).','0');
INSERT DBColumns VALUES('spiders_quasar','f_XMMSL2','','','','Flux in the 0.2-12 keV range (XMMSL2; Saxton et al. 2008).','0');
INSERT DBColumns VALUES('spiders_quasar','errf_XMMSL2','','','','Uncertainty in the flux in the 0.2-12 keV range (XMMSL2; Saxton et al. (2008)).','0');
INSERT DBColumns VALUES('spiders_quasar','l_XMMSL2','','','','Luminosity in the 0.2-12 keV range (derived from f_XMMSL2; no k-correction applied) (XMMSL2).','0');
INSERT DBColumns VALUES('spiders_quasar','errl_XMMSL2','','','','Uncertainty in the luminosity in the 0.2-12 keV range (derived from errf_XMMSL2; no k-correction applied) (XMMSL2).','0');
INSERT DBColumns VALUES('spiders_quasar','Plate','','','','SDSS plate number.','0');
INSERT DBColumns VALUES('spiders_quasar','MJD','','','','MJD that the SDSS spectrum was taken.','0');
INSERT DBColumns VALUES('spiders_quasar','FiberID','','','','SDSS fiber identification.','0');
INSERT DBColumns VALUES('spiders_quasar','DR16_RUN2D','','','','Spectroscopic reprocessing number.','0');
INSERT DBColumns VALUES('spiders_quasar','SPECOBJID','','','','Unique spectroscopic object ID.','0');
INSERT DBColumns VALUES('spiders_quasar','DR16_PLUGRA','','','','Right ascension of the drilled fiber position.','0');
INSERT DBColumns VALUES('spiders_quasar','DR16_PLUGDEC','','','','Declination of the drilled fiber position.','0');
INSERT DBColumns VALUES('spiders_quasar','redshift','','','','Source redshift based on the visual inspection results.','0');
INSERT DBColumns VALUES('spiders_quasar','CLASS_BEST','','','','Source classification based on the visual inspection results.','0');
INSERT DBColumns VALUES('spiders_quasar','CONF_BEST','','','','Visual inspection redshift and classification confidence flag.','0');
INSERT DBColumns VALUES('spiders_quasar','DR16_ZWARNING','','','','Warning flag for SDSS spectra.','0');
INSERT DBColumns VALUES('spiders_quasar','DR16_SNMEDIANALL','','','','Median signal to noise ratio per pixel of the spectrum.','0');
INSERT DBColumns VALUES('spiders_quasar','Instrument','','','','Flag indicating which spectrograph was used (SDSS or BOSS) to measure the spectrum.','0');
INSERT DBColumns VALUES('spiders_quasar','norm1_mgII','','','','Normalisation of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm1_mgII','','','','Uncertainty in the normalisation of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak1_mgII','','','','Wavelength of the peak of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak1_mgII','','','','Uncertainty in the wavelength of the peak of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','width1_mgII','','','','Width of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth1_mgII','','','','Uncertainty in the width of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm1_mgII','','','','FWHM of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm1_mgII','','','','Uncertainty in the FWHM of the first Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift1_mgII','','','','Wavelength shift of the peak of the first Gaussian used to fit the MgII line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm2_mgII','','','','Normalisation of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm2_mgII','','','','Uncertainty in the normalisation of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak2_mgII','','','','Wavelength of the peak of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak2_mgII','','','','Uncertainty in the wavelength of the peak of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','width2_mgII','','','','Width of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth2_mgII','','','','Uncertainty in the width of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm2_mgII','','','','FWHM of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm2_mgII','','','','Uncertainty in the FWHM of the second Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift2_mgII','','','','Wavelength shift of the peak of the second Gaussian used to fit the MgII line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm3_mgII','','','','Normalisation of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm3_mgII','','','','Uncertainty in the normalisation of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak3_mgII','','','','Wavelength of the peak of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak3_mgII','','','','Uncertainty in the wavelength of the peak of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','width3_mgII','','','','Width of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth3_mgII','','','','Uncertainty in the width of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm3_mgII','','','','FWHM of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm3_mgII','','','','Uncertainty in the FWHM of the third Gaussian used to fit the MgII line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift3_mgII','','','','Wavelength shift of the peak of the third Gaussian used to fit the MgII line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_heII','','','','Normalisation of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_heII','','','','Uncertainty in the normalisation of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak_heII','','','','Wavelength of the peak of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak_heII','','','','Uncertainty in the wavelength of the peak of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','width_heII','','','','Width of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth_heII','','','','Uncertainty in the width of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm_heII','','','','FWHM of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm_heII','','','','Uncertainty in the FWHM of the Gaussian used to fit the HeII line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift_heII','','','','Wavelength shift of the peak of the Gaussian used to fit the HeII line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm1_hb','','','','Normalisation of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm1_hb','','','','Uncertainty in the normalisation of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak1_hb','','','','Wavelength of the peak of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak1_hb','','','','Uncertainty in the wavelength of the peak of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','width1_hb','','','','Width of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth1_hb','','','','Uncertainty in the width of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm1_hb','','','','FWHM of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm1_hb','','','','Uncertainty in the FWHM of the first Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift1_hb','','','','Wavelength shift of the peak of the first Gaussian used to fit the H beta line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm2_hb','','','','Normalisation of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm2_hb','','','','Uncertainty in the normalisation of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak2_hb','','','','Wavelength of the peak of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak2_hb','','','','Uncertainty in the wavelength of the peak of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','width2_hb','','','','Width of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth2_hb','','','','Uncertainty in the width of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm2_hb','','','','FWHM of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm2_hb','','','','Uncertainty in the FWHM of the second Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift2_hb','','','','Wavelength shift of the peak of the second Gaussian used to fit the H beta line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm3_hb','','','','Normalisation of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm3_hb','','','','Uncertainty in the normalisation of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak3_hb','','','','Wavelength of the peak of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak3_hb','','','','Uncertainty in the wavelength of the peak of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','width3_hb','','','','Width of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth3_hb','','','','Uncertainty in the width of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm3_hb','','','','FWHM of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm3_hb','','','','Uncertainty in the FWHM of the third Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift3_hb','','','','Wavelength shift of the peak of the third Gaussian used to fit the H beta line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm4_hb','','','','Normalisation of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm4_hb','','','','Uncertainty in the normalisation of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak4_hb','','','','Wavelength of the peak of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak4_hb','','','','Uncertainty in the wavelength of the peak of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','width4_hb','','','','Width of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth4_hb','','','','Uncertainty in the width of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm4_hb','','','','FWHM of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm4_hb','','','','Uncertainty in the FWHM of the fourth Gaussian used to fit the H beta line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift4_hb','','','','Wavelength shift of the peak of the fourth Gaussian used to fit the H beta line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm1_OIII4959','','','','Normalisation of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm1_OIII4959','','','','Uncertainty in the normalisation of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak1_OIII4959','','','','Wavelength of the peak of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak1_OIII4959','','','','Uncertainty in the wavelength of the peak of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','width1_OIII4959','','','','Width of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth1_OIII4959','','','','Uncertainty in the width of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm1_OIII4959','','','','FWHM of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm1_OIII4959','','','','Uncertainty in the FWHM of the first Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift1_OIII4959','','','','Wavelength shift of the peak of the first Gaussian used to fit the [OIII]4959 line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm2_OIII4959','','','','Normalisation of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm2_OIII4959','','','','Uncertainty in the normalisation of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak2_OIII4959','','','','Wavelength of the peak of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak2_OIII4959','','','','Uncertainty in the wavelength of the peak of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','width2_OIII4959','','','','Width of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth2_OIII4959','','','','Uncertainty in the width of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm2_OIII4959','','','','FWHM of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm2_OIII4959','','','','Uncertainty in the FWHM of the second Gaussian used to fit the [OIII]4959 line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift2_OIII4959','','','','Wavelength shift of the peak of the second Gaussian used to fit the [OIII]4959 line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm1_OIII5007','','','','Normalisation of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm1_OIII5007','','','','Uncertainty in the normalisation of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak1_OIII5007','','','','Wavelength of the peak of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak1_OIII5007','','','','Uncertainty in the wavelength of the peak of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','width1_OIII5007','','','','Width of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth1_OIII5007','','','','Uncertainty in the width of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm1_OIII5007','','','','FWHM of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm1_OIII5007','','','','Uncertainty in the FWHM of the first Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift1_OIII5007','','','','Wavelength shift of the peak of the first Gaussian used to fit the [OIII]5007 line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm2_OIII5007','','','','Normalisation of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm2_OIII5007','','','','Uncertainty in the normalisation of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','peak2_OIII5007','','','','Wavelength of the peak of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errpeak2_OIII5007','','','','Uncertainty in the wavelength of the peak of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','width2_OIII5007','','','','Width of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errwidth2_OIII5007','','','','Uncertainty in the width of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm2_OIII5007','','','','FWHM of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm2_OIII5007','','','','Uncertainty in the FWHM of the second Gaussian used to fit the [OIII]5007 line.','0');
INSERT DBColumns VALUES('spiders_quasar','shift2_OIII5007','','','','Wavelength shift of the peak of the second Gaussian used to fit the [OIII]5007 line relative to the rest-frame wavelength.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_pl1','','','','Normalisation of the power law fit to the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_pl1','','','','Uncertainty in the normalisation of the power law fit to the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','slope_pl1','','','','Slope of the power law fit to the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errslope_pl1','','','','Uncertainty in the slope of the power law fit to the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_pl2','','','','Normalisation of the power law fit to the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_pl2','','','','Uncertainty in the normalisation of the power law fit to the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','slope_pl2','','','','Slope of the power law fit to the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errslope_pl2','','','','Uncertainty in the slope of the power law fit to the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_gal1','','','','Normalisation of the galaxy template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_gal1','','','','Uncertainty in the normalisation of the galaxy template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_gal2','','','','Normalisation of the galaxy template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_gal2','','','','Uncertainty in the normalisation of the galaxy template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_feII1','','','','Normalisation of the iron template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_feII1','','','','Uncertainty in the normalisation of the iron template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','norm_feII2','','','','Normalisation of the iron template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errnorm_feII2','','','','Uncertainty in the normalisation of the iron template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm_feII1','','','','FWHM of the Gaussian kernel convolved with the iron template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm_feII1','','','','Uncertainty in the FWHM of the Gaussian kernel convolved with the iron template used to fit the MgII continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','fwhm_feII2','','','','FWHM of the Gaussian kernel convolved with the iron template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','errfwhm_feII2','','','','Uncertainty in the FWHM of the Gaussian kernel convolved with the iron template used to fit the H beta continuum region.','0');
INSERT DBColumns VALUES('spiders_quasar','r_feII','','','','Flux ratio of the 4434-4684 Ang FeII emission to the broad component of H beta.','0');
INSERT DBColumns VALUES('spiders_quasar','OIII_Hbeta_ratio','','','','Flux ratio of [OIII]5007 Ang to H beta.','0');
INSERT DBColumns VALUES('spiders_quasar','virialfwhm_mgII','','','','FWHM of the MgII broad line profile.','0');
INSERT DBColumns VALUES('spiders_quasar','errvirialfwhm_mgII','','','','Uncertainty in the FWHM of the MgII broad line profile.','0');
INSERT DBColumns VALUES('spiders_quasar','virialfwhm_hb','','','','FWHM of the H beta broad line profile.','0');
INSERT DBColumns VALUES('spiders_quasar','errvirialfwhm_hb','','','','Uncertainty in the FWHM of the H beta broad line profile.','0');
INSERT DBColumns VALUES('spiders_quasar','mgII_chi','','','','Reduced chi-squared of the fit to the MgII region.','0');
INSERT DBColumns VALUES('spiders_quasar','hb_chi','','','','Reduced chi-squared of the fit to the H beta region.','0');
INSERT DBColumns VALUES('spiders_quasar','l_2500','','','','Monochromatic luminosity at 2500 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_2500','','','','Uncertainty in the monochromatic luminosity at 2500 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','l_3000','','','','Monochromatic luminosity at 3000 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_3000','','','','Uncertainty in the monochromatic luminosity at 3000 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','l_5100','','','','Monochromatic luminosity at 5100 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_5100','','','','Uncertainty in the monochromatic luminosity at 5100 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','l_bol1','','','','Bolometric luminosity derived from the monochromatic luminosity at 3000 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_bol1','','','','Uncertainty in the bolometric luminosity derived from the monochromatic luminosity at 3000 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','l_bol2','','','','Bolometric luminosity derived from the monochromatic luminosity at 5100 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_bol2','','','','Uncertainty in the bolometric luminosity derived from the monochromatic luminosity at 5100 Ang.','0');
INSERT DBColumns VALUES('spiders_quasar','logBHMVP_hb','','','','Black hole mass derived from the H beta line using the Vestergaard &amp; Peterson (2006) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','errlogBHMVP_hb','','','','Uncertainty in the black hole mass derived from the H beta line using the Vestergaard &amp; Peterson (2006) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','logBHMA_hb','','','','Black hole mass derived from the H beta line using the Assef et al. (2011) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','errlogBHMA_hb','','','','Uncertainty in the black hole mass derived from the H beta line using the Assef et al. (2011) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','logBHMS_mgII','','','','Black hole mass derived from the MgII line using the Shen &amp; Liu (2012) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','errlogBHMS_mgII','','','','Uncertainty in the black hole mass derived from the MgII line using the Shen &amp; Liu (2012) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','l_edd1','','','','Eddington luminosity based on the black hole mass estimate derived using the Shen &amp; Liu (2012) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_edd1','','','','Uncertainty in the Eddington luminosity based on the black hole mass estimate derived using the Shen &amp; Liu (2012) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','l_edd2','','','','Eddington luminosity based on the black hole mass estimate derived using the Assef et al. (2011) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','errl_edd2','','','','Uncertainty in the Eddington luminosity based on the black hole mass estimate derived using the Assef et al. (2011) calibration.','0');
INSERT DBColumns VALUES('spiders_quasar','edd_ratio1','','','','Eddington ratio defined as l_bol1/l_edd1.','0');
INSERT DBColumns VALUES('spiders_quasar','erredd_ratio1','','','','Uncertainty in the Eddington ratio defined as l_bol1/l_edd1.','0');
INSERT DBColumns VALUES('spiders_quasar','edd_ratio2','','','','Eddington ratio defined as l_bol2/l_edd2.','0');
INSERT DBColumns VALUES('spiders_quasar','erredd_ratio2','','','','Uncertainty in the Eddington ratio defined as l_bol2/l_edd2.','0');
INSERT DBColumns VALUES('spiders_quasar','flag_abs','','','','Flag indicating whether or not strong absorption lines have been observed in the spectrum. flag_abs is set to either 0 (spectrum not inspected for absorption lines/no absorption present) or 1 (absorption present).','0');
INSERT DBColumns VALUES('PawlikMorph','mangaID','','','','MaNGA ID string','0');
INSERT DBColumns VALUES('PawlikMorph','plateifu','','','','String combination of PLATE-IFU to ease searching','0');
INSERT DBColumns VALUES('PawlikMorph','run','','','','Run number','0');
INSERT DBColumns VALUES('PawlikMorph','rerun','','','','Rerun number','0');
INSERT DBColumns VALUES('PawlikMorph','camcol','','','','Camera column','0');
INSERT DBColumns VALUES('PawlikMorph','field','','','','Field number','0');
INSERT DBColumns VALUES('PawlikMorph','imgsize','pixels','','','image size','0');
INSERT DBColumns VALUES('PawlikMorph','imgmin','counts','','','minimum pixel value in the image','0');
INSERT DBColumns VALUES('PawlikMorph','imgmax','counts','','','maximum pixel value in the image','0');
INSERT DBColumns VALUES('PawlikMorph','skybgr','counts/pixel','','','sky background estimate','0');
INSERT DBColumns VALUES('PawlikMorph','skybgrerr','counts/pixel','','','standard deviation in the sky background','0');
INSERT DBColumns VALUES('PawlikMorph','skybgrflag','','','','flag indicating unreliable measurement of the sky background (0 if everything is OK)','0');
INSERT DBColumns VALUES('PawlikMorph','bpixx','pixels','','','x position of the brightest pixel','0');
INSERT DBColumns VALUES('PawlikMorph','bpixy','pixels','','','y position of the brightest pixel','0');
INSERT DBColumns VALUES('PawlikMorph','apixx','pixels','','','x position yielding minimum value of the rotational light-weighted asymmetry parameter','0');
INSERT DBColumns VALUES('PawlikMorph','apixy','pixels','','','y position yielding minimum value of the rotational light-weighted asymmetry parameter','0');
INSERT DBColumns VALUES('PawlikMorph','mpixx','pixels','','','x position yielding minimum value of the second order moment of light','0');
INSERT DBColumns VALUES('PawlikMorph','mpixy','pixels','','','y position yielding minimum value of the second order moment of light','0');
INSERT DBColumns VALUES('PawlikMorph','rmax','pixels','','','the `maximum’ radius of the galaxy, defined as the distance between the furthest pixel in the object’s pixel map, with respect to the central brightest pixel','0');
INSERT DBColumns VALUES('PawlikMorph','r20','pixels','','','curve of growth radii defining a circular aperture that contains 20% of the total flux','0');
INSERT DBColumns VALUES('PawlikMorph','r50','pixels','','','curve of growth radii defining a circular aperture that contains 50% of the total flux','0');
INSERT DBColumns VALUES('PawlikMorph','r80','pixels','','','curve of growth radii defining a circular aperture that contains 80% of the total flux','0');
INSERT DBColumns VALUES('PawlikMorph','r90','pixels','','','curve of growth radii defining a circular aperture that contains 90% of the total flux','0');
INSERT DBColumns VALUES('PawlikMorph','C2080','','','','the concentration index defined by the logarithmic ratio of  r20 and r80','0');
INSERT DBColumns VALUES('PawlikMorph','C5090','','','','the concentration index defined by the logarithmic ratio of  r50 and r90','0');
INSERT DBColumns VALUES('PawlikMorph','A','','','','the asymmetry of light under image rotation about 180 degrees around [apixx,apixy] (background corrected)','0');
INSERT DBColumns VALUES('PawlikMorph','Abgr','','','','the `background’ asymmetry associated with A','0');
INSERT DBColumns VALUES('PawlikMorph','As','','','','the shape asymmetry under image rotation about 180 degrees around [apixx,apixy]','0');
INSERT DBColumns VALUES('PawlikMorph','As90','','','','the shape asymmetry under image rotation about 90 degrees around [apixx,apixy]','0');
INSERT DBColumns VALUES('PawlikMorph','S','','','','the `clumpiness’ of the light distribution (background corrected)','0');
INSERT DBColumns VALUES('PawlikMorph','Sbgr','','','','the `background’ clumpiness associated with S','0');
INSERT DBColumns VALUES('PawlikMorph','G','','','','the Gini index','0');
INSERT DBColumns VALUES('PawlikMorph','M20','','','','the second-order moment of the brightest 20% of the total light','0');
INSERT DBColumns VALUES('PawlikMorph','mag','mag','','','total magnitude within the boundaries of the pixel map','0');
INSERT DBColumns VALUES('PawlikMorph','magerr','mag','','','the error associated with mag','0');
INSERT DBColumns VALUES('PawlikMorph','sb0','counts','','','Sersic model’s best-fit parameter: the central surface brightness','0');
INSERT DBColumns VALUES('PawlikMorph','sb0err','counts','','','error associated with sb0','0');
INSERT DBColumns VALUES('PawlikMorph','reff','pixels','','','Sersic model’s best-fit parameter: the effective radius','0');
INSERT DBColumns VALUES('PawlikMorph','refferr','pixels','','','error associated with reff','0');
INSERT DBColumns VALUES('PawlikMorph','n','','','','Sersic model’s best-fit parameter: the Sersic index','0');
INSERT DBColumns VALUES('PawlikMorph','nerr','','','','error associated with n','0');
INSERT DBColumns VALUES('PawlikMorph','warningflag','','','','flag indicating unreliable measurement (0 if everything is OK)','0');
INSERT DBColumns VALUES('apogee_starhorse','apogee_id','','','','TMASS-STYLE object name','0');
INSERT DBColumns VALUES('apogee_starhorse','aspcap_id','','','','Unique ID for ASPCAP results of form apogee.[telescope].[cs].results_version.location_id.star (Primary key)','0');
INSERT DBColumns VALUES('apogee_starhorse','apstar_id','','','','Unique ID for combined star spectrum of form apogee.[telescope].[cs].apstar_version.location_id.apogee_id (Primary key)','0');
INSERT DBColumns VALUES('apogee_starhorse','edr3_source_id','','','','Gaia EDR3 Source ID','0');
INSERT DBColumns VALUES('apogee_starhorse','glon','deg','','','Galactic Longitude','0');
INSERT DBColumns VALUES('apogee_starhorse','glat','deg','','','Galactic Latitude','0');
INSERT DBColumns VALUES('apogee_starhorse','ra','deg','','','Right Ascention J200','0');
INSERT DBColumns VALUES('apogee_starhorse','dec','deg','','','Declination J200','0');
INSERT DBColumns VALUES('apogee_starhorse','mass16','solar mass','','','StarHorse 16th astro-spectro-photometric mass percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','mass50','solar mass','','','StarHorse median astro-spectro-photometric mass (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','mass84','solar mass','','','StarHorse 84th astro-spectro-photometric mass percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','teff16','K','','','StarHorse 16th astro-spectro-photometric effective temperature percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','teff50','K','','','StarHorse median astro-spectro-photometric effective temperature (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','teff84','K','','','StarHorse 84th astro-spectro-photometric effective temperature percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','logg16','dex','','','StarHorse 16th astro-spectro-photometric surface gravity percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','logg50','dex','','','StarHorse median astro-spectro-photometric surface gravity (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','logg84','dex','','','StarHorse 84th astro-spectro-photometric surface gravity percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','met16','dex','','','StarHorse 16th astro-spectro-photometric metallicity percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','met50','dex','','','StarHorse median astro-spectro-photometric metallicity (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','met84','dex','','','StarHorse 84th astro-spectro-photometric metallicity percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','dist05','kpc','','','StarHorse 5th astro-spectro-photometric distance percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','dist16','kpc','','','StarHorse 16th astro-spectro-photometric distance percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','dist50','kpc','','','StarHorse median astro-spectro-photometric distance (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','dist84','kpc','','','StarHorse 84th astro-spectro-photometric distance percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','dist95','kpc','','','StarHorse 95th posterior extinction (at 542 nm) percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','av05','mag','','','StarHorse 5th posterior extinction (at 542 nm) percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','av16','mag','','','StarHorse 16th posterior extinction (at 542 nm) percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','av50','mag','','','StarHorse median posterior extinction (at 542 nm) (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','av84','mag','','','StarHorse 84th posterior extinction (at 542 nm) percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','av95','mag','','','StarHorse 95th posterior extinction (at 542 nm) percentile (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','starhorse_inputflags','','','','StarHorse Input flags (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogee_starhorse','starhorse_outputflags','','','','StarHorse Output flags (Queiroz et al. 2018)','0');
INSERT DBColumns VALUES('apogeeDistMass','apogee_id','','','','2MASS-style star identification','0');
INSERT DBColumns VALUES('apogeeDistMass','apstar_id','','','','Unique ID for visit spectrum, of form apogee.[telescope].[cs].[apred_version].plate.mjd.fiberid (Primary key)','0');
INSERT DBColumns VALUES('apogeeDistMass','teff','deg K','','','Empirically calibrated temperature from ASPCAP','0');
INSERT DBColumns VALUES('apogeeDistMass','logg','dex','','','empirically calibrated log gravity from ASPCAP','0');
INSERT DBColumns VALUES('apogeeDistMass','m_h','dex','','','calibrated [M/H]','0');
INSERT DBColumns VALUES('apogeeDistMass','c_fe','dex','','','empirically calibrated [C/Fe] from ASPCAP; [C/Fe] is calculated as (ASPCAP [C/M])+param_metals','0');
INSERT DBColumns VALUES('apogeeDistMass','n_fe','dex','','','empirically calibrated [N/Fe] from ASPCAP; [N/Fe] is calculated as (ASPCAP [N/M])+param_metals','0');
INSERT DBColumns VALUES('apogeeDistMass','gaiaedr3_dist','pc','','','GAIA EDR3 Bailer Jones r_med_geo','0');
INSERT DBColumns VALUES('apogeeDistMass','extinction','mag','','','Ks-band extinction based on WISE allWISE release photometry','0');
INSERT DBColumns VALUES('apogeeDistMass','mag','mag','','','2MASS Ks-band magnitude','0');
INSERT DBColumns VALUES('apogeeDistMass','abs_mag','mag','','','derived absolute Ks-band magnitude','0');
INSERT DBColumns VALUES('apogeeDistMass','abs_mag_err','mag','','','uncertainty derived absolute Ks-band magnitude','0');
INSERT DBColumns VALUES('apogeeDistMass','distance','pc','','','derived distance','0');
INSERT DBColumns VALUES('apogeeDistMass','distance_err','pc','','','uncertainty in derived distance','0');
INSERT DBColumns VALUES('apogeeDistMass','mass','solar','','','derived mass','0');
INSERT DBColumns VALUES('apogeeDistMass','mass_err','solar','','','uncertainty in erived mass','0');
INSERT DBColumns VALUES('apogeeDistMass','train_mass','solar','','','mass used for training','0');
INSERT DBColumns VALUES('apogeeDistMass','age','yr','','','derived age','0');
INSERT DBColumns VALUES('apogeeDistMass','bitmask','','','','Bitmask with information','0');
INSERT DBColumns VALUES('apogeeDistMass','nmsu_dist_max','deg pc','','','isochrone based distance, maximum of PDF','0');
INSERT DBColumns VALUES('apogeeDistMass','nmsu_dist_med','deg pc','','','isochrone based distance, median of PDF','0');
INSERT DBColumns VALUES('apogeeDistMass','nmsu_dist_mean','deg pc','','','isochrone based distance, mean of PDF','0');
INSERT DBColumns VALUES('ebossMCPM','CATALOGID','','','','Combination of PLATE-MJD-FIBERID','0');
INSERT DBColumns VALUES('ebossMCPM','PLATE','','','','Plate number','0');
INSERT DBColumns VALUES('ebossMCPM','MJD','','','','MJD of observation','0');
INSERT DBColumns VALUES('ebossMCPM','FIBERID','','','','Fiber identification number','0');
INSERT DBColumns VALUES('ebossMCPM','RA','deg','','','Right ascension of fiber, J2000','0');
INSERT DBColumns VALUES('ebossMCPM','DEC','deg','','','Declination of fiber, J2000','0');
INSERT DBColumns VALUES('ebossMCPM','Z','','','','Best redshift','0');
INSERT DBColumns VALUES('ebossMCPM','MSTARS','solMass','','','Stellar mass','0');
INSERT DBColumns VALUES('ebossMCPM','MASS_SOURCE','','','','Source of the mass determination (nsa or firefly)','0');
INSERT DBColumns VALUES('ebossMCPM','MATTERDENS','','','','log10 of the ratio of the matter density relative to the mean matter density','0');
INSERT DBColumns VALUES('ebossMCPM','MCPM_RUN','','','','Index of galaxy sample fitted simultaneously with MCPM','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MANGAID','','','','Unique MaNGA identifier.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','PLATEIFU','','','','Unique identifier containing the MaNGA plate and ifu combination.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','PLATE','','','','Plate used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','IFUDSGN','','','','IFU used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','OBJRA','','','','Right ascension of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','OBJDEC','','','','Declination of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','REDSHIFT','','','','Redshift of the galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','PHOTOMETRIC_MASS','log(M_sun)','','','Stellar mass of galaxy from NSA catalogue obtained from K-correction fits to elliptical Petrosian photometric fluxes.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MANGADRP_VER','','','','Version of MaNGA DRP that produced this data.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MANGADAP_VER','','','','Version of MaNGA DAP that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','FIREFLY_VER','','','','Version of FIREFLY that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_1RE','log(Gyr)','','','Light-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_1RE_ERROR','log(Gyr)','','','Error on light-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_1RE','log(Gyr)','','','Mass-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_1RE_ERROR','log(Gyr)','','','Error on mass-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_1RE','','','','Light-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_1RE_ERROR','','','','Error on light-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_1RE','','','','Mass-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_1RE_ERROR','','','','Error on mass-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_3ARCSEC','log(Gyr)','','','Light-weighted age within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_3ARCSEC_ERROR','log(Gyr)','','','Error on light-weighted age within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_3ARCSEC','log(Gyr)','','','Mass-weighted age within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_3ARCSEC_ERROR','log(Gyr)','','','Error on mass-weighted age within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_3ARCSEC','','','','Light-weighted metallicity [Z/H] within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_3ARCSEC_ERROR','','','','Error on light-weighted metallicity [Z/H] within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_3ARCSEC','','','','Mass-weighted metallicity [Z/H] within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_3ARCSEC_ERROR','','','','Error on mass-weighted metallicity [Z/H] within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_GRADIENT','dex/Re','','','Light-weighted age gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_GRADIENT_ERROR','dex/Re','','','Error on light-weighted age gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_ZEROPOINT','','','','Light-weighted age zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_AGE_ZEROPOINT_ERROR','','','','Error on light-weighted age zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_GRADIENT','dex/Re','','','Mass-weighted age gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_GRADIENT_ERROR','dex/Re','','','Error on mass-weighted age gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_ZEROPOINT','','','','Mass-weighted age zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_AGE_ZEROPOINT_ERROR','','','','Error on mass-weighted age zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_GRADIENT','dex/Re','','','Light-weighted metallicity [Z/H] gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_GRADIENT_ERROR','dex/Re','','','Error on light-weighted metallicity [Z/H] gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_ZEROPOINT','','','','Light-weighted metallicity [Z/H] zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','LW_Z_ZEROPOINT_ERROR','','','','Error on light-weighted metallicity [Z/H] zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_GRADIENT','dex/Re','','','Mass-weighted metallicity [Z/H] gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_GRADIENT_ERROR','dex/Re','','','Error on mass-weighted metallicity [Z/H] gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_ZEROPOINT','','','','Mass-weighted metallicity [Z/H] zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_miles','MW_Z_ZEROPOINT_ERROR','','','','Error on mass-weighted metallicity [Z/H] zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MANGAID','','','','Unique MaNGA identifier.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','PLATEIFU','','','','Unique identifier containing the MaNGA plate and ifu combination.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','PLATE','','','','Plate used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','IFUDSGN','','','','IFU used to observe galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','OBJRA','','','','Right ascension of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','OBJDEC','','','','Declination of the galaxy, not the IFU.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','REDSHIFT','','','','Redshift of the galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','PHOTOMETRIC_MASS','log(M_sun)','','','Stellar mass of galaxy from NSA catalogue obtained from K-correction fits to elliptical Petrosian photometric fluxes.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MANGADRP_VER','','','','Version of MaNGA DRP that produced this data.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MANGADAP_VER','','','','Version of MaNGA DAP that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','FIREFLY_VER','','','','Version of FIREFLY that analysed this data.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_1RE','log(Gyr)','','','Light-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_1RE_ERROR','log(Gyr)','','','Error on light-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_1RE','log(Gyr)','','','Mass-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_1RE_ERROR','log(Gyr)','','','Error on mass-weighted age within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_1RE','','','','Light-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_1RE_ERROR','','','','Error on light-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_1RE','','','','Mass-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_1RE_ERROR','','','','Error on mass-weighted metallicity [Z/H] within a shell located at 1Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_3ARCSEC','log(Gyr)','','','Light-weighted age within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_3ARCSEC_ERROR','log(Gyr)','','','Error on light-weighted age within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_3ARCSEC','log(Gyr)','','','Mass-weighted age within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_3ARCSEC_ERROR','log(Gyr)','','','Error on mass-weighted age within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_3ARCSEC','','','','Light-weighted metallicity [Z/H] within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_3ARCSEC_ERROR','','','','Error on light-weighted metallicity [Z/H] within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_3ARCSEC','','','','Mass-weighted metallicity [Z/H] within 3arcsec diameter.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_3ARCSEC_ERROR','','','','Error on mass-weighted metallicity [Z/H] within 3arcsec.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_GRADIENT','dex/Re','','','Light-weighted age gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_GRADIENT_ERROR','dex/Re','','','Error on light-weighted age gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_ZEROPOINT','','','','Light-weighted age zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_AGE_ZEROPOINT_ERROR','','','','Error on light-weighted age zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_GRADIENT','dex/Re','','','Mass-weighted age gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_GRADIENT_ERROR','dex/Re','','','Error on mass-weighted age gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_ZEROPOINT','','','','Mass-weighted age zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_AGE_ZEROPOINT_ERROR','','','','Error on mass-weighted age zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_GRADIENT','dex/Re','','','Light-weighted metallicity [Z/H] gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_GRADIENT_ERROR','dex/Re','','','Error on light-weighted metallicity [Z/H] gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_ZEROPOINT','','','','Light-weighted metallicity [Z/H] zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','LW_Z_ZEROPOINT_ERROR','','','','Error on light-weighted metallicity [Z/H] zeropoint obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_GRADIENT','dex/Re','','','Mass-weighted metallicity [Z/H] gradient of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_GRADIENT_ERROR','dex/Re','','','Error on mass-weighted metallicity [Z/H] gradient within 1.5Re of galaxy.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_ZEROPOINT','','','','Mass-weighted metallicity [Z/H] zeropoint of linear fit obtained within 1.5Re.','0');
INSERT DBColumns VALUES('mangaFirefly_mastar','MW_Z_ZEROPOINT_ERROR','','','','Error on mass-weighted metallicity [Z/H] zeropoint obtained within 1.5Re.','0');

GO
----------------------------- 
PRINT '10471 lines inserted into DBColumns '
----------------------------- 

